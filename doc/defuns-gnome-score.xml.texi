
@c %start of fragment

@deffn Function gnome-score-log  (score@tie{}@code{float}) (level@tie{}@code{mchars}) (higher_to_lower_score_order@tie{}@code{bool}) @result{}@tie{} (ret@tie{}@code{int})
@samp{gnome_score_log} is deprecated and should not be used in newly-written
code.

Logs a score entry for the user. You should call this every time a game ends.
This function takes care of working out whether the user's score made it into
the ten best scores and, if so, records it in the table.

@table @var
@item score
The score achieved by the user in this game

@item level
The level on which the score was obtained

@item higher-to-lower-score-order
Set to @samp{@code{#t}} if high scores are better than low scores.

@item ret
@samp{0} on failure and the number of bytes written otherwise.

@end table

@end deffn

@deffn Function gnome-score-get-notable  (gamename@tie{}@code{mchars}) (level@tie{}@code{mchars}) (names@tie{}@code{<gchar***>}) (scores@tie{}@code{<gfloat**>}) (scoretimes@tie{}@code{<time-t**>}) @result{}@tie{} (ret@tie{}@code{int})
@samp{gnome_score_get_notable} is deprecated and should not be used in
newly-written code.

Fetches the most notable players on @var{gamename} at level @var{level}.

@table @var
@item gamename
The name of the game we want to fetch information from.

@item level
The level for which we want to pull information.

@item names
An array of strings is returned at the address pointed here

@item scores
An array of gfloats is returned at the address pointed here

@item scoretimes
An array of time_t is returned at the address pointed here

@item ret
The number of scores returned. The @var{names}, @var{scores} and @var{scoretime}
pointers point to regions that were allocated with @code{g-malloc} with the
contents.

@end table

@end deffn


@c %end of fragment
