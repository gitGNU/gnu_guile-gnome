
@c %start of fragment

@node Asynchronous File Operations
@chapter Asynchronous File Operations
POSIX-style file operations that run outside your main loop

@section Overview
When executing an asynchornous operation on a file the program does not block
waiting for the operation to finish, instead it keeps on running, which means
that the process and the I/O operation can be both running concurrently. Once
the I/O operation has been completed the process is notified using a callback.

Asynchronous operations are particularly good when long I/O operations are
expected, in this case the program can continue normaly, the I/O will be
performed in the background. On the other hand when operations are expected to
be short (creating a file, writing/reading small amounts of data, etc.)
synchronous operations are prefered.

Within a graphical desktop asynchornous I/O operations can be used to avoid
blocking the UI (User Interface) during a long operation, and to be able to
provide some kind of feedback to the user.

@section Usage
@include defuns-gnome-vfs-async-ops.xml.texi

@c %end of fragment
