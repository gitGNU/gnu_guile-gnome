
@c %start of fragment

@deftp Class <gst-xml>
This @code{<gobject>} class defines no properties, other than those defined by
its superclasses.

@end deftp

@defop Signal <gst-xml> object-loaded  (arg0@tie{}@code{<gst-object>}) (arg1@tie{}@code{<gpointer>})
Signals that a new object has been deserialized.

@end defop

@deffn Function gst-xml-write  (element@tie{}@code{<gst-element>}) @result{}@tie{} (ret@tie{}@code{<xml-doc-ptr>})
Converts the given element into an XML presentation.

@table @var
@item element
The element to write out

@item ret
a pointer to an XML document

@end table

@end deffn

@deffn Function gst-xml-write-file  (element@tie{}@code{<gst-element>}) (out@tie{}@code{<file*>}) @result{}@tie{} (ret@tie{}@code{int})
Converts the given element into XML and writes the formatted XML to an open
file.

@table @var
@item element
The element to write out

@item out
an open file, like stdout

@item ret
number of bytes written on success, -1 otherwise.

@end table

@end deffn

@deffn Function gst-xml-new  @result{}@tie{} (ret@tie{}@code{<gst-xml>})
Create a new GstXML parser object.

@table @var
@item ret
a pointer to a new GstXML object.

@end table

@end deffn

@deffn Function gst-xml-parse-doc  (self@tie{}@code{<gst-xml>}) (doc@tie{}@code{<xml-doc-ptr>}) (root@tie{}@code{<guchar*>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method parse-doc
Fills the GstXML object with the elements from the xmlDocPtr.

@table @var
@item xml
a pointer to a GstXML object

@item doc
a pointer to an xml document to parse

@item root
The name of the root object to build

@item ret
TRUE on success, FALSE otherwise

@end table

@end deffn

@deffn Function gst-xml-parse-file  (self@tie{}@code{<gst-xml>}) (fname@tie{}@code{<guchar*>}) (root@tie{}@code{<guchar*>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method parse-file
Fills the GstXML object with the corresponding elements from the XML file fname.
Optionally it will only build the element from the element node root (if it is
not NULL). This feature is useful if you only want to build a specific element
from an XML file but not the pipeline it is embedded in.

Pass "-" as fname to read from stdin. You can also pass a URI of any format that
libxml supports, including http.

@table @var
@item xml
a pointer to a GstXML object

@item fname
The filename with the xml description

@item root
The name of the root object to build

@item ret
TRUE on success, FALSE otherwise

@end table

@end deffn

@deffn Function gst-xml-parse-memory  (self@tie{}@code{<gst-xml>}) (buffer@tie{}@code{<guchar*>}) (size@tie{}@code{unsigned-int}) (root@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method parse-memory
Fills the GstXML object with the corresponding elements from an in memory XML
buffer.

@table @var
@item xml
a pointer to a GstXML object

@item buffer
a pointer to the in memory XML buffer

@item size
the size of the buffer

@item root
the name of the root objects to build

@item ret
TRUE on success

@end table

@end deffn

@deffn Function gst-xml-get-element  (self@tie{}@code{<gst-xml>}) (name@tie{}@code{<guchar*>}) @result{}@tie{} (ret@tie{}@code{<gst-element>})
@deffnx Method get-element
This function is used to get a pointer to the GstElement corresponding to name
in the pipeline description. You would use this if you have to do anything to
the element after loading.

@table @var
@item xml
The GstXML to get the element from

@item name
The name of element to retrieve

@item ret
a pointer to a new GstElement, caller owns returned reference.

@end table

@end deffn

@deffn Function gst-xml-get-topelements  (self@tie{}@code{<gst-xml>}) @result{}@tie{} (ret@tie{}@code{glist-of})
@deffnx Method get-topelements
Retrieve a list of toplevel elements.

@table @var
@item xml
The GstXML to get the elements from

@item ret
a GList of top-level elements. The caller does not own a copy of the list and
must not free or modify the list. The caller also does not own a reference to
any of the elements in the list and should obtain its own reference using
@code{gst-object-ref} if necessary.

@end table

@end deffn

@deffn Function gst-xml-make-element  (cur@tie{}@code{<xml-node-ptr>}) (parent@tie{}@code{<gst-object>}) @result{}@tie{} (ret@tie{}@code{<gst-element>})
Load the element from the XML description

@table @var
@item cur
the xml node

@item parent
the parent of this object when it's loaded

@item ret
the new element

@end table

@end deffn


@c %end of fragment
