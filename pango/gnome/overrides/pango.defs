;; -*- scheme -*-
;; guile-gnome
;; Copyright (C) 2007 Andy Wingo <wingo at pobox dot com>
;;
;; This program is free software; you can redistribute it and/or    
;; modify it under the terms of the GNU General Public License as   
;; published by the Free Software Foundation; either version 2 of   
;; the License, or (at your option) any later version.              
;;                                                                  
;; This program is distributed in the hope that it will be useful,  
;; but WITHOUT ANY WARRANTY; without even the implied warranty of   
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    
;; GNU General Public License for more details.                     
;;                                                                  
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, contact:
;;
;; Free Software Foundation           Voice:  +1-617-542-5942
;; 59 Temple Place - Suite 330        Fax:    +1-617-542-2652
;; Boston, MA  02111-1307,  USA       gnu@gnu.org

;;; Commentary:
;;
;;Custom wrapper definitions.
;;
;;; Code:

;; boxed types
(define-boxed AttrList
  (in-module "Pango")
  (c-name "PangoAttrList")
  (gtype-id "PANGO_TYPE_ATTR_LIST")
  (copy-func "pango_attr_list_ref")
  (release-func "pango_attr_list_unref")
)

(define-boxed Matrix
  (in-module "Pango")
  (c-name "PangoMatrix")
  (gtype-id "PANGO_TYPE_MATRIX")
  (copy-func "pango_matrix_copy")
  (release-func "pango_matrix_free")
)

(define-boxed Color
  (in-module "Pango")
  (c-name "PangoColor")
  (gtype-id "PANGO_TYPE_COLOR")
  (copy-func "pango_color_copy")
  (release-func "pango_color_free")
  (fields
    '("guint16" "red")
    '("guint16" "green")
    '("guint16" "blue")
  )
)

(define-boxed FontDescription
  (in-module "Pango")
  (c-name "PangoFontDescription")
  (gtype-id "PANGO_TYPE_FONT_DESCRIPTION")
  (copy-func "pango_font_description_copy")
  (release-func "pango_font_description_free")
)

(define-boxed FontMetrics
  (in-module "Pango")
  (c-name "PangoFontMetrics")
  (gtype-id "PANGO_TYPE_FONT_METRICS")
  (copy-func "pango_font_metrics_ref")
  (release-func "pango_font_metrics_unref")
)  

(define-boxed GlyphString
  (in-module "Pango")
  (c-name "PangoGlyphString")
  (gtype-id "PANGO_TYPE_GLYPH_STRING")
  (copy-func "pango_glyph_string_copy")
  (release-func "pango_glyph_string_free")
  (fields
    '("gint" "num_glyphs")
    '("PangoGlyphInfo*" "glyphs")
    '("gint*" "log_clusters")
  )
)

(define-boxed Language
  (in-module "Pango")
  (c-name "PangoLanguage")
  (gtype-id "PANGO_TYPE_LANGUAGE")
)

(define-boxed TabArray
  (in-module "Pango")
  (c-name "PangoTabArray")
  (gtype-id "PANGO_TYPE_TAB_ARRAY")
  (copy-func "pango_tab_array_copy")
  (release-func "pango_tab_array_free")
)

(define-object Layout
  (c-name "PangoLayout")
  (gtype-id "PANGO_TYPE_LAYOUT"))

(define-boxed LayoutLine
  (c-name "PangoLayoutLine")
  (gtype-id "PANGO_TYPE_LAYOUT_LINE"))

(define-boxed LayoutIter
  (c-name "PangoLayoutIter")
  (gtype-id "PANGO_TYPE_LAYOUT_ITER"))

(define-boxed Item
  (c-name "PangoItem")
  (gtype-id "PANGO_TYPE_ITEM"))

(define-object Context
  (c-name "PangoContext")
  (gtype-id "PANGO_TYPE_CONTEXT"))

(define-object Fontset
  (c-name "PangoFontset")
  (gtype-id "PANGO_TYPE_FONTSET"))

(define-method get_attrs
  (of-object "PangoAttrIterator")
  (c-name "pango_attr_iterator_get_attrs")
  (overrides "pango_attr_iterator_get_attrs")
  (return-type "GSList*-of-PangoAttribute*")
)

(define-function pango_itemize
  (c-name "pango_itemize")
  (overrides "pango_itemize")
  (return-type "GList*-of-PangoItem*")
  (parameters
    '("PangoContext*" "context")
    '("const-char*" "text")
    '("int" "start_index")
    '("int" "length")
    '("PangoAttrList*" "attrs")
    '("PangoAttrIterator*" "cached_iter")
  )
)

(define-function pango_itemize_with_base_dir
  (c-name "pango_itemize_with_base_dir")
  (overrides "pango_itemize_with_base_dir")
  (return-type "GList*-of-PangoItem*")
  (parameters
    '("PangoContext*" "context")
    '("PangoDirection" "base_dir")
    '("const-char*" "text")
    '("int" "start_index")
    '("int" "length")
    '("PangoAttrList*" "attrs")
    '("PangoAttrIterator*" "cached_iter")
  )
)

(define-function pango_reorder_items
  (c-name "pango_reorder_items")
  (overrides "pango_reorder_items")
  (return-type "GList*-of-PangoItem*")
  (parameters
    '("GList*-of-PangoItem*" "logical_items")
  )
)

(define-method get_lines
  (of-object "PangoLayout")
  (c-name "pango_layout_get_lines")
  (overrides "pango_layout_get_lines")
  (return-type "GSList*-of-PangoLayoutLine*")
)

(ignore "pango_attr_shape_new_with_data"
        "pango_attr_iterator_get_font"
        "pango_attr_list_filter"
        "pango_coverage_to_bytes"
        "pango_coverage_from_bytes"
        "pango_context_new"
        "pango_context_set_font_map"
        "pango_context_list_families"
        "pango_break" ;; these three would be nice
        "pango_get_log_attrs"
        "pango_shape"
        "pango_glyph_item_apply_attrs"
        "pango_glyph_string_x_to_index"
        "pango_glyph_string_index_to_x"
        "pango_font_metrics_new"
        "pango_font_map_get_shape_engine_type"
        "pango_font_family_list_faces"
        "pango_font_face_list_sizes"
        "pango_font_map_list_families"
        "pango_font_find_shaper"
        "pango_layout_get_log_attrs"
        "pango_layout_iter_get_run"
        "pango_layout_line_get_x_ranges"
        "pango_parse_markup"
        "pango_tab_array_get_tab"
        "pango_tab_array_get_tabs"
        "pango_script_iter_get_range"
        "pango_map_get_engines"
        "pango_default_break")
(ignore-glob "script_engine_*"
             "*_destroy")

