;; -*- scheme -*-

(define-object Client
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaClient")
  (gtype-id "GDA_TYPE_CLIENT")
)

(define-object Connection
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaConnection")
  (gtype-id "GDA_TYPE_CONNECTION")
)

(define-object DataModel
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaDataModel")
  (gtype-id "GDA_TYPE_DATA_MODEL")
)

(define-object DataModelArray
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelArray")
  (gtype-id "GDA_TYPE_DATA_MODEL_ARRAY")
)

(define-object DataModelHash
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelHash")
  (gtype-id "GDA_TYPE_DATA_MODEL_HASH")
)

(define-object DataModelList
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelList")
  (gtype-id "GDA_TYPE_DATA_MODEL_LIST")
)

(define-object Error
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaError")
  (gtype-id "GDA_TYPE_ERROR")
)


;; I get an error for this one:
;; /home/andy/share/guile/gnome/gobject.scm:170:9: In procedure %gtype-bind-to-class in expression (%gtype-bind-to-class class type):
;; /home/andy/share/guile/gnome/gobject.scm:170:9: GLib-GObject: gsignal.c:1392: signal "finished" already exists in the `GdaExport' class ancestry
;; ABORT: (gruntime-error)

; (define-object Export
;   (in-module "Gda")
;   (parent "GObject")
;   (c-name "GdaExport")
;   (gtype-id "GDA_TYPE_EXPORT")
; )

(define-object Select
  (in-module "Gda")
  (parent "GdaDataModelArray")
  (c-name "GdaSelect")
  (gtype-id "GDA_TYPE_SELECT")
)

(define-object Table
  (in-module "Gda")
  (parent "GdaDataModelArray")
  (c-name "GdaTable")
  (gtype-id "GDA_TYPE_TABLE")
)

(define-object Transaction
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaTransaction")
  (gtype-id "GDA_TYPE_TRANSACTION")
)

(define-flags BlobMode
  (in-module "Gda")
  (c-name "GdaBlobMode")
  (gtype-id "GDA_TYPE_BLOB_MODE")
  (values
    '("read" "GDA_BLOB_MODE_READ")
    '("write" "GDA_BLOB_MODE_WRITE")
    '("rdwr" "GDA_BLOB_MODE_RDWR")
  )
)

(define-enum ClientEvent
  (in-module "Gda")
  (c-name "GdaClientEvent")
  (gtype-id "GDA_TYPE_CLIENT_EVENT")
  (values
    '("invalid" "GDA_CLIENT_EVENT_INVALID")
    '("error" "GDA_CLIENT_EVENT_ERROR")
    '("connection-opened" "GDA_CLIENT_EVENT_CONNECTION_OPENED")
    '("connection-closed" "GDA_CLIENT_EVENT_CONNECTION_CLOSED")
    '("transaction-started" "GDA_CLIENT_EVENT_TRANSACTION_STARTED")
    '("transaction-committed" "GDA_CLIENT_EVENT_TRANSACTION_COMMITTED")
    '("transaction-cancelled" "GDA_CLIENT_EVENT_TRANSACTION_CANCELLED")
  )
)

(define-flags CommandOptions
  (in-module "Gda")
  (c-name "GdaCommandOptions")
  (gtype-id "GDA_TYPE_COMMAND_OPTIONS")
  (values
    '("ignore-errors" "GDA_COMMAND_OPTION_IGNORE_ERRORS")
    '("stop-on-errors" "GDA_COMMAND_OPTION_STOP_ON_ERRORS")
    '("bad-option" "GDA_COMMAND_OPTION_BAD_OPTION")
  )
)

(define-enum CommandType
  (in-module "Gda")
  (c-name "GdaCommandType")
  (gtype-id "GDA_TYPE_COMMAND_TYPE")
  (values
    '("sql" "GDA_COMMAND_TYPE_SQL")
    '("xml" "GDA_COMMAND_TYPE_XML")
    '("procedure" "GDA_COMMAND_TYPE_PROCEDURE")
    '("table" "GDA_COMMAND_TYPE_TABLE")
    '("schema" "GDA_COMMAND_TYPE_SCHEMA")
    '("invalid" "GDA_COMMAND_TYPE_INVALID")
  )
)

(define-flags ConnectionOptions
  (in-module "Gda")
  (c-name "GdaConnectionOptions")
  (gtype-id "GDA_TYPE_CONNECTION_OPTIONS")
  (values
    '("read-only" "GDA_CONNECTION_OPTIONS_READ_ONLY")
    '("dont-share" "GDA_CONNECTION_OPTIONS_DONT_SHARE")
  )
)

(define-enum ConnectionFeature
  (in-module "Gda")
  (c-name "GdaConnectionFeature")
  (gtype-id "GDA_TYPE_CONNECTION_FEATURE")
  (values
    '("aggregates" "GDA_CONNECTION_FEATURE_AGGREGATES")
    '("indexes" "GDA_CONNECTION_FEATURE_INDEXES")
    '("inheritance" "GDA_CONNECTION_FEATURE_INHERITANCE")
    '("namespaces" "GDA_CONNECTION_FEATURE_NAMESPACES")
    '("procedures" "GDA_CONNECTION_FEATURE_PROCEDURES")
    '("sequences" "GDA_CONNECTION_FEATURE_SEQUENCES")
    '("sql" "GDA_CONNECTION_FEATURE_SQL")
    '("transactions" "GDA_CONNECTION_FEATURE_TRANSACTIONS")
    '("triggers" "GDA_CONNECTION_FEATURE_TRIGGERS")
    '("users" "GDA_CONNECTION_FEATURE_USERS")
    '("views" "GDA_CONNECTION_FEATURE_VIEWS")
    '("xml-queries" "GDA_CONNECTION_FEATURE_XML_QUERIES")
    '("blobs" "GDA_CONNECTION_FEATURE_BLOBS")
  )
)

(define-enum ConnectionSchema
  (in-module "Gda")
  (c-name "GdaConnectionSchema")
  (gtype-id "GDA_TYPE_CONNECTION_SCHEMA")
  (values
    '("aggregates" "GDA_CONNECTION_SCHEMA_AGGREGATES")
    '("databases" "GDA_CONNECTION_SCHEMA_DATABASES")
    '("fields" "GDA_CONNECTION_SCHEMA_FIELDS")
    '("indexes" "GDA_CONNECTION_SCHEMA_INDEXES")
    '("languages" "GDA_CONNECTION_SCHEMA_LANGUAGES")
    '("namespaces" "GDA_CONNECTION_SCHEMA_NAMESPACES")
    '("parent-tables" "GDA_CONNECTION_SCHEMA_PARENT_TABLES")
    '("procedures" "GDA_CONNECTION_SCHEMA_PROCEDURES")
    '("sequences" "GDA_CONNECTION_SCHEMA_SEQUENCES")
    '("tables" "GDA_CONNECTION_SCHEMA_TABLES")
    '("triggers" "GDA_CONNECTION_SCHEMA_TRIGGERS")
    '("types" "GDA_CONNECTION_SCHEMA_TYPES")
    '("users" "GDA_CONNECTION_SCHEMA_USERS")
    '("views" "GDA_CONNECTION_SCHEMA_VIEWS")
  )
)

(define-enum ExportFlags
  (in-module "Gda")
  (c-name "GdaExportFlags")
  (gtype-id "GDA_TYPE_EXPORT_FLAGS")
  (values
    '("a" "GDA_EXPORT_FLAGS_TABLE_DATA")
  )
)

(define-enum TransactionIsolation
  (in-module "Gda")
  (c-name "GdaTransactionIsolation")
  (gtype-id "GDA_TYPE_TRANSACTION_ISOLATION")
  (values
    '("unknown" "GDA_TRANSACTION_ISOLATION_UNKNOWN")
    '("read-committed" "GDA_TRANSACTION_ISOLATION_READ_COMMITTED")
    '("read-uncommitted" "GDA_TRANSACTION_ISOLATION_READ_UNCOMMITTED")
    '("repeatable-read" "GDA_TRANSACTION_ISOLATION_REPEATABLE_READ")
    '("serializable" "GDA_TRANSACTION_ISOLATION_SERIALIZABLE")
  )
)

(define-enum ValueType
  (in-module "Gda")
  (c-name "GdaValueType")
  (gtype-id "GDA_TYPE_VALUE_TYPE")
  (values
    '("null" "GDA_VALUE_TYPE_NULL")
    '("bigint" "GDA_VALUE_TYPE_BIGINT")
    '("biguint" "GDA_VALUE_TYPE_BIGUINT")
    '("binary" "GDA_VALUE_TYPE_BINARY")
    '("blob" "GDA_VALUE_TYPE_BLOB")
    '("boolean" "GDA_VALUE_TYPE_BOOLEAN")
    '("date" "GDA_VALUE_TYPE_DATE")
    '("double" "GDA_VALUE_TYPE_DOUBLE")
    '("geometric-point" "GDA_VALUE_TYPE_GEOMETRIC_POINT")
    '("gobject" "GDA_VALUE_TYPE_GOBJECT")
    '("integer" "GDA_VALUE_TYPE_INTEGER")
    '("list" "GDA_VALUE_TYPE_LIST")
    '("money" "GDA_VALUE_TYPE_MONEY")
    '("numeric" "GDA_VALUE_TYPE_NUMERIC")
    '("single" "GDA_VALUE_TYPE_SINGLE")
    '("smallint" "GDA_VALUE_TYPE_SMALLINT")
    '("smalluint" "GDA_VALUE_TYPE_SMALLUINT")
    '("string" "GDA_VALUE_TYPE_STRING")
    '("time" "GDA_VALUE_TYPE_TIME")
    '("timestamp" "GDA_VALUE_TYPE_TIMESTAMP")
    '("tinyint" "GDA_VALUE_TYPE_TINYINT")
    '("tinyuint" "GDA_VALUE_TYPE_TINYUINT")
    '("type" "GDA_VALUE_TYPE_TYPE")
    '("uinteger" "GDA_VALUE_TYPE_UINTEGER")
    '("unknown" "GDA_VALUE_TYPE_UNKNOWN")
  )
)
