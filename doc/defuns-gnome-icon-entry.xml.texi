
@c %start of fragment

@deftp Class <gnome-icon-entry>
This @code{<gobject>} class defines the following properties:

@table @code
@item history-id
Unique identifier for the icon entry. This will be used to save the history
list.

@item browse-dialog-title
Title for the Browse icon dialog.

@item pixmap-subdir
Directory that will be searched for icons.

@item filename
Filename that should be displayed in the icon entry.

@item pick-dialog
Icon picker dialog. You can use this property to get the GtkDialog if you need
to modify or query any of its properties.

@end table

@end deftp

@defop Signal <gnome-icon-entry> changed 
@end defop

@defop Signal <gnome-icon-entry> browse 
@end defop

@deffn Function gnome-icon-entry-new  (history_id@tie{}@code{mchars}) (browse_dialog_title@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
Creates a new icon entry widget

@table @var
@item history-id
the id given to @code{<gnome-entry-new>}

@item browse-dialog-title
title of the browse dialog and icon selection dialog

@item ret
Returns the new object

@end table

@end deffn

@deffn Function gnome-icon-entry-construct  (self@tie{}@code{<gnome-icon-entry>}) (history_id@tie{}@code{mchars}) (browse_dialog_title@tie{}@code{mchars})
@deffnx Method construct
For language bindings and subclassing, from C use @code{<gnome-icon-entry-new>}

@table @var
@item ientry
the GnomeIconEntry to work with

@item history-id
the id given to @code{<gnome-entry-new>} in the browse dialog

@item browse-dialog-title
title of the icon selection dialog

@end table

@end deffn

@deffn Function gnome-icon-entry-set-pixmap-subdir  (self@tie{}@code{<gnome-icon-entry>}) (subdir@tie{}@code{mchars})
@deffnx Method set-pixmap-subdir
Sets the subdirectory below gnome's default pixmap directory to use as the
default path for the file entry. The path can also be an absolute one. If
@samp{@code{#f}} is passed then the pixmap directory itself is used.

@table @var
@item ientry
the GnomeIconEntry to work with

@item subdir
subdirectory

@end table

@end deffn

@deffn Function gnome-icon-entry-get-filename  (self@tie{}@code{<gnome-icon-entry>}) @result{}@tie{} (ret@tie{}@code{mchars})
@deffnx Method get-filename
Gets the file name of the image if it was possible to load it into the preview.
That is, it will only return a filename if the image exists and it was possible
to load it as an image.

@table @var
@item ientry
the GnomeIconEntry to work with

@item ret
a newly allocated string with the path or @samp{@code{#f}} if it couldn't load
the file

@end table

@end deffn

@deffn Function gnome-icon-entry-set-filename  (self@tie{}@code{<gnome-icon-entry>}) (filename@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method set-filename
Sets the icon of GnomeIconEntry to be the one pointed to by @var{filename} (in
the current subdirectory).

@table @var
@item ientry
the GnomeIconEntry to work with

@item filename
a filename

@item ret
@samp{@code{#t}} if icon was loaded ok, @samp{@code{#f}} otherwise

@end table

@end deffn

@deffn Function gnome-icon-entry-set-history-id  (self@tie{}@code{<gnome-icon-entry>}) (history_id@tie{}@code{mchars})
@deffnx Method set-history-id
Set the history_id of the entry in the browse dialog and reload the history

@table @var
@item ientry
the GnomeIconEntry to work with

@item history-id
the id given to @code{<gnome-entry-new>} in the browse dialog

@end table

@end deffn

@deffn Function gnome-icon-entry-set-max-saved  (self@tie{}@code{<gnome-icon-entry>}) (max_saved@tie{}@code{unsigned-int})
@deffnx Method set-max-saved
Set the max_saved of the entry in the browse dialog

@table @var
@item ientry
the GnomeIconEntry to work with

@item max-saved
the maximum number of saved entries

@end table

Since 2.4

@end deffn

@deffn Function gnome-icon-entry-pick-dialog  (self@tie{}@code{<gnome-icon-entry>}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
@deffnx Method pick-dialog
If a pick dialog exists, return a pointer to it or return NULL. This is if you
need to do something with all dialogs. You would use the browse signal with
connect_after to get the pick dialog when it is displayed.

@table @var
@item ientry
the GnomeIconEntry to work with

@item ret
The pick dialog or @samp{@code{#f}} if none exists

@end table

@end deffn

@deffn Function gnome-icon-entry-set-icon  (self@tie{}@code{<gnome-icon-entry>}) (filename@tie{}@code{mchars})
@deffnx Method set-icon
Deprecated in favour of @code{<gnome-icon-entry-set-filename>}

@table @var
@item ientry
the GnomeIconEntry to work with

@item filename
a filename

@end table

@end deffn

@deffn Function gnome-icon-entry-gnome-file-entry  (self@tie{}@code{<gnome-icon-entry>}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
@deffnx Method gnome-file-entry
Get the GnomeFileEntry widget that's part of the entry DEPRECATED! Use the
"changed" signal for getting changes

@table @var
@item ientry
the GnomeIconEntry to work with

@item ret
Returns GnomeFileEntry widget

@end table

@end deffn

@deffn Function gnome-icon-entry-gnome-entry  (self@tie{}@code{<gnome-icon-entry>}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
@deffnx Method gnome-entry
Get the GnomeEntry widget that's part of the entry DEPRECATED! Use the "changed"
signal for getting changes

@table @var
@item ientry
the GnomeIconEntry to work with

@item ret
Returns GnomeEntry widget

@end table

@end deffn

@deffn Function gnome-icon-entry-gtk-entry  (self@tie{}@code{<gnome-icon-entry>}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
@deffnx Method gtk-entry
Get the GtkEntry widget that's part of the entry. DEPRECATED! Use the "changed"
signal for getting changes

@table @var
@item ientry
the GnomeIconEntry to work with

@item ret
Returns GtkEntry widget

@end table

@end deffn


@c %end of fragment
