
@c %start of fragment

@deffn Function clutter-behaviour-apply  (self@tie{}@code{<clutter-behaviour>}) (actor@tie{}@code{<clutter-actor>})
@deffnx Method apply
Applies @var{behave} to @var{actor}. This function adds a reference on
the actor.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item actor
a @code{<clutter-actor>}

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-remove  (self@tie{}@code{<clutter-behaviour>}) (actor@tie{}@code{<clutter-actor>})
@deffnx Method remove
Removes @var{actor} from the list of @code{<clutter-actor>}s to which
@var{behave} applies. This function removes a reference on the actor.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item actor
a @code{<clutter-actor>}

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-remove-all  (self@tie{}@code{<clutter-behaviour>})
@deffnx Method remove-all
Removes every actor from the list that @var{behave} holds.

@table @var
@item behave
a @code{<clutter-behaviour>}

@end table

Since 0.4

@end deffn

@deffn Function clutter-behaviour-is-applied  (self@tie{}@code{<clutter-behaviour>}) (actor@tie{}@code{<clutter-actor>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method is-applied
Check if @var{behave} applied to @var{actor}.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item actor
a @code{<clutter-actor>}

@item ret
TRUE if actor has behaviour. FALSE otherwise.

@end table

Since 0.4

@end deffn

@deffn Function clutter-behaviour-get-actors  (self@tie{}@code{<clutter-behaviour>}) @result{}@tie{} (ret@tie{}@code{gslist-of})
@deffnx Method get-actors
Retrieves all the actors to which @var{behave} applies. It is not
recommended for derived classes to use this in there alpha notify method
but use @code{<clutter-behaviour-actors-foreach>} as it avoids alot of
needless allocations.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item ret
a list of actors. You should free the returned list with
@code{g-slist-free} when finished using it.

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-get-n-actors  (self@tie{}@code{<clutter-behaviour>}) @result{}@tie{} (ret@tie{}@code{int})
@deffnx Method get-n-actors
Gets the number of actors this behaviour is applied too.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item ret
The number of applied actors

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-get-nth-actor  (self@tie{}@code{<clutter-behaviour>}) (index_@tie{}@code{int}) @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
@deffnx Method get-nth-actor
Gets an actor the behaviour was applied to referenced by index num.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item index
the index of an actor this behaviour is applied too.

@item ret
A Clutter actor or NULL if @var{index} is invalid.

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-get-alpha  (self@tie{}@code{<clutter-behaviour>}) @result{}@tie{} (ret@tie{}@code{<clutter-alpha>})
@deffnx Method get-alpha
Retrieves the @code{<clutter-alpha>} object bound to @var{behave}.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item ret
a @code{<clutter-alpha>} object, or @samp{@code{#f}} if no alpha object
has been bound to this behaviour.

@end table

Since 0.2

@end deffn

@deffn Function clutter-behaviour-set-alpha  (self@tie{}@code{<clutter-behaviour>}) (alpha@tie{}@code{<clutter-alpha>})
@deffnx Method set-alpha
Binds @var{alpha} to a @code{<clutter-behaviour>}. The
@code{<clutter-alpha>} object is what makes a behaviour work: for each
tick of the timeline used by @code{<clutter-alpha>} a new value of the
alpha parameter is computed by the alpha function; the value should be
used by the @code{<clutter-behaviour>} to update one or more properties
of the actors to which the behaviour applies.

If @var{alpha} is not @samp{@code{#f}}, the @code{<clutter-behaviour>}
will take ownership of the @code{<clutter-alpha>} instance.

@table @var
@item behave
a @code{<clutter-behaviour>}

@item alpha
a @code{<clutter-alpha>} or @samp{@code{#f}} to unset a previously set
alpha

@end table

Since 0.2

@end deffn


@c %end of fragment
