
@c %start of fragment

@deftp Class <atk-component>
Derives from @code{<ginterface>}.

This class defines no properties, other than those defined by its superclasses.

@end deftp

@defop Signal <atk-component> bounds-changed  (arg0@tie{}@code{<atk-rectangle>})
The 'bounds-changed" signal is emitted when the bposition or size of the a
component changes.

@end defop

@deffn Function atk-component-contains  (self@tie{}@code{<atk-component>}) (x@tie{}@code{int}) (y@tie{}@code{int}) (coord_type@tie{}@code{<atk-coord-type>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method contains
Checks whether the specified point is within the extent of the @var{component}.

@table @var
@item component
the @code{<atk-component>}

@item x
x coordinate

@item y
y coordinate

@item coord-type
specifies whether the coordinates are relative to the screen or to the
components top level window

@item ret
@samp{@code{#t}} or @samp{@code{#f}} indicating whether the specified point is
within the extent of the @var{component} or not

@end table

@end deffn

@deffn Function atk-component-get-extents  (self@tie{}@code{<atk-component>}) (coord_type@tie{}@code{<atk-coord-type>}) @result{}@tie{} (x@tie{}@code{int}) (y@tie{}@code{int}) (width@tie{}@code{int}) (height@tie{}@code{int})
@deffnx Method get-extents
Gets the rectangle which gives the extent of the @var{component}.

@table @var
@item component
an @code{<atk-component>}

@item x
address of @code{<gint>} to put x coordinate

@item y
address of @code{<gint>} to put y coordinate

@item width
address of @code{<gint>} to put width

@item height
address of @code{<gint>} to put height

@item coord-type
specifies whether the coordinates are relative to the screen or to the
components top level window

@end table

@end deffn

@deffn Function atk-component-get-layer  (self@tie{}@code{<atk-component>}) @result{}@tie{} (ret@tie{}@code{<atk-layer>})
@deffnx Method get-layer
Gets the layer of the component.

@table @var
@item component
an @code{<atk-component>}

@item ret
an @code{<atk-layer>} which is the layer of the component

@end table

@end deffn

@deffn Function atk-component-get-mdi-zorder  (self@tie{}@code{<atk-component>}) @result{}@tie{} (ret@tie{}@code{int})
@deffnx Method get-mdi-zorder
Gets the zorder of the component. The value G_MININT will be returned if the
layer of the component is not ATK_LAYER_MDI or ATK_LAYER_WINDOW.

@table @var
@item component
an @code{<atk-component>}

@item ret
a gint which is the zorder of the component, i.e. the depth at which the
component is shown in relation to other components in the same container.

@end table

@end deffn

@deffn Function atk-component-get-position  (self@tie{}@code{<atk-component>}) (coord_type@tie{}@code{<atk-coord-type>}) @result{}@tie{} (x@tie{}@code{int}) (y@tie{}@code{int})
@deffnx Method get-position
Gets the position of @var{component} in the form of a point specifying
@var{component}'s top-left corner.

@table @var
@item component
an @code{<atk-component>}

@item x
address of @code{<gint>} to put x coordinate position

@item y
address of @code{<gint>} to put y coordinate position

@item coord-type
specifies whether the coordinates are relative to the screen or to the
components top level window

@end table

@end deffn

@deffn Function atk-component-get-size  (self@tie{}@code{<atk-component>}) @result{}@tie{} (width@tie{}@code{int}) (height@tie{}@code{int})
@deffnx Method get-size
Gets the size of the @var{component} in terms of width and height.

@table @var
@item component
an @code{<atk-component>}

@item width
address of @code{<gint>} to put width of @var{component}

@item height
address of @code{<gint>} to put height of @var{component}

@end table

@end deffn

@deffn Function atk-component-grab-focus  (self@tie{}@code{<atk-component>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method grab-focus
Grabs focus for this @var{component}.

@table @var
@item component
an @code{<atk-component>}

@item ret
@samp{@code{#t}} if successful, @samp{@code{#f}} otherwise.

@end table

@end deffn

@deffn Function atk-component-set-extents  (self@tie{}@code{<atk-component>}) (x@tie{}@code{int}) (y@tie{}@code{int}) (width@tie{}@code{int}) (height@tie{}@code{int}) (coord_type@tie{}@code{<atk-coord-type>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method set-extents
Sets the extents of @var{component}.

@table @var
@item component
an @code{<atk-component>}

@item x
x coordinate

@item y
y coordinate

@item width
width to set for @var{component}

@item height
height to set for @var{component}

@item coord-type
specifies whether the coordinates are relative to the screen or to the
components top level window

@item ret
@samp{@code{#t}} or @samp{@code{#f}} whether the extents were set or not

@end table

@end deffn

@deffn Function atk-component-set-position  (self@tie{}@code{<atk-component>}) (x@tie{}@code{int}) (y@tie{}@code{int}) (coord_type@tie{}@code{<atk-coord-type>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method set-position
Sets the postition of @var{component}.

@table @var
@item component
an @code{<atk-component>}

@item x
x coordinate

@item y
y coordinate

@item coord-type
specifies whether the coordinates are relative to the screen or to the
components top level window

@item ret
@samp{@code{#t}} or @samp{@code{#f}} whether or not the position was set or not

@end table

@end deffn

@deffn Function atk-component-set-size  (self@tie{}@code{<atk-component>}) (width@tie{}@code{int}) (height@tie{}@code{int}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method set-size
Set the size of the @var{component} in terms of width and height.

@table @var
@item component
an @code{<atk-component>}

@item width
width to set for @var{component}

@item height
height to set for @var{component}

@item ret
@samp{@code{#t}} or @samp{@code{#f}} whether the size was set or not

@end table

@end deffn

@deffn Function atk-component-get-alpha  (self@tie{}@code{<atk-component>}) @result{}@tie{} (ret@tie{}@code{double})
@deffnx Method get-alpha
Returns the alpha value (i.e. the opacity) for this @var{component}, on a scale
from 0 (fully transparent) to 1.0 (fully opaque).

@table @var
@item component
an @code{<atk-component>}

@item ret
An alpha value from 0 to 1.0, inclusive.

@end table

Since ATK 1.12

@end deffn


@c %end of fragment
