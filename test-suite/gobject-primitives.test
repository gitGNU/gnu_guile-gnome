;;;; -*- scheme -*-

(define-module (test-suite test-gobject-primitives)
  #:use-module (oop goops)
  #:use-module (gnome gobject)
  #:use-module (gnome gobject primitives)
  #:use-module (test-suite lib)
  #:use-module (test-suite exceptions))

(with-test-prefix "gclosure primitives"
  (define closure-without-args
    (gclosure-primitive-new
     (lambda () (make <gchararray> #:value "Hello World"))))

  (define closure-check-value-p
    (gclosure-primitive-new (lambda (x)
                              (or (gvalue? x)
                                  (throw 'wrong-type-arg "Not a GValue" x))
                              (or (eq? (gvalue->type x) gtype:glong)
                                  (throw 'wrong-type-arg "Wrong value type" x))
                              (or (eq? (gvalue-primitive-get x) 82)
                                  (throw 'wrong-type-arg "Wrong value" x))
                              #t)))

  (define long-arg
    (list->vector (list (make <glong> #:value 82))))

  (pass-if "gclosure-primitive-new"
           (gvalue? closure-without-args))

  (pass-if "gclosure-primitive-invoke"
           (unspecified? (gclosure-primitive-invoke closure-without-args #f #f)))

  (pass-if "gclosure-primitive-invoke"
           (gvalue? (gclosure-primitive-invoke closure-without-args
                                               gtype:gchararray
                                               #f)))

  (pass-if "gclosure-primitive-invoke"
           (equal? (gvalue->scm (gclosure-primitive-invoke closure-without-args
                                                           gtype:gchararray
                                                           #f))
                   "Hello World"))

  (pass-if-exception "gclosure-primitive-invoke"
                     exception:wrong-num-args
                     (gclosure-primitive-invoke closure-without-args
                                                gtype:gchararray
                                                long-arg))

  (pass-if "gclosure-primitive-invoke"
           (unspecified? (gclosure-primitive-invoke closure-check-value-p #f
                                                    long-arg)))

  )
