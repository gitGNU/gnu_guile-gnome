
@c %start of fragment

@deftp Class <gtk-event-box>
Derives from @code{<gtk-bin>}.

This class defines the following properties:

@table @code
@item visible-window
Whether the event box is visible, as opposed to invisible and only used to trap
events.

@item above-child
Whether the event-trapping window of the eventbox is above the window of the
child widget as opposed to below it.

@end table

@end deftp

@deffn Function gtk-event-box-new  @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
Creates a new @code{<gtk-event-box>}.

@table @var
@item ret
a new @code{<gtk-event-box>}.

@end table

@end deffn

@deffn Function gtk-event-box-set-above-child  (self@tie{}@code{<gtk-event-box>}) (above_child@tie{}@code{bool})
@deffnx Method set-above-child
Set whether the event box window is positioned above the windows of its child,
as opposed to below it. If the window is above, all events inside the event box
will go to the event box. If the window is below, events in windows of child
widgets will first got to that widget, and then to its parents.

The default is to keep the window below the child.

@table @var
@item event-box
a @code{<gtk-event-box>}

@item above-child
@samp{@code{#t}} if the event box window is above the windows of its child

@end table

Since 2.4

@end deffn

@deffn Function gtk-event-box-get-above-child  (self@tie{}@code{<gtk-event-box>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method get-above-child
Returns whether the event box window is above or below the windows of its child.
See @code{gtk-event-box-set-above-child} for details.

@table @var
@item event-box
a @code{<gtk-event-box>}

@item ret
@samp{@code{#t}} if the event box window is above the window of its child.

@end table

Since 2.4

@end deffn

@deffn Function gtk-event-box-set-visible-window  (self@tie{}@code{<gtk-event-box>}) (visible_window@tie{}@code{bool})
@deffnx Method set-visible-window
Set whether the event box uses a visible or invisible child window. The default
is to use visible windows.

In an invisible window event box, the window that that the event box creates is
a @samp{GDK_INPUT_ONLY} window, which means that it is invisible and only serves
to receive events.

A visible window event box creates a visible (@samp{GDK_INPUT_OUTPUT}) window
that acts as the parent window for all the widgets contained in the event box.

You should generally make your event box invisible if you just want to trap
events. Creating a visible window may cause artifacts that are visible to the
user, especially if the user is using a theme with gradients or pixmaps.

The main reason to create a non input-only event box is if you want to set the
background to a different color or draw on it.

There is one unexpected issue for an invisible event box that has its window
below the child. (See @code{gtk-event-box-set-above-child}.) Since the
input-only window is not an ancestor window of any windows that descendent
widgets of the event box create, events on these windows aren't propagated up by
the windowing system, but only by GTK+. The practical effect of this is if an
event isn't in the event mask for the descendant window (see
@code{gtk-widget-add-events}), it won't be received by the event box.

This problem doesn't occur for visible event boxes, because in that case, the
event box window is actually the ancestor of the descendant windows, not just at
the same place on the screen.

@table @var
@item event-box
a @code{<gtk-event-box>}

@item visible-window
boolean value

@end table

Since 2.4

@end deffn

@deffn Function gtk-event-box-get-visible-window  (self@tie{}@code{<gtk-event-box>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method get-visible-window
Returns whether the event box has a visible window. See
@code{gtk-event-box-set-visible-window} for details.

@table @var
@item event-box
a @code{<gtk-event-box>}

@item ret
@samp{@code{#t}} if the event box window is visible

@end table

Since 2.4

@end deffn


@c %end of fragment
