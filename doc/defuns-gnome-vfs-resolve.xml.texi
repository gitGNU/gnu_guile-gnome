
@c %start of fragment

@deffn Function gnome-vfs-resolve  (hostname@tie{}@code{mchars}) (handle@tie{}@code{<gnome-vfs-resolve-handle**>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Tries to resolve @var{hostname}. If the operation was successful you can get the
resolved addresses in form of @code{<gnome-vfs-address>} by calling
@code{gnome-vfs-resolve-next-address}.

@table @var
@item hostname
hostname you want to resolve.

@item handle
pointer to a pointer to a @code{<gnome-vfs-resolve-handle>}.

@item ret
A @code{<gnome-vfs-result>} indicating the success of the operation.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-resolve-next-address  (handle@tie{}@code{<gnome-vfs-resolve-handle*>}) (address@tie{}@code{<gnome-vfs-address**>}) @result{}@tie{} (ret@tie{}@code{bool})
Stores the next @code{<gnome-vfs-address>} available in @var{handle} of the
former lookup in @var{address}.

@table @var
@item handle
a @code{<gnome-vfs-resolve-handle>}.

@item address
a pointer to a pointer to a @code{<gnome-vfs-address>}.

@item ret
@samp{@code{#t}} if the next address was stored in @var{address} or
@samp{@code{#f}} if no other address is available.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-address-get-family-type  (self@tie{}@code{<gnome-vfs-address*>}) @result{}@tie{} (ret@tie{}@code{int})
Use this function to retrive the address family of @var{address}.

@table @var
@item address
A pointer to a @code{<gnome-vfs-address>}

@item ret
The address family of @var{address}.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-address-get-ipv4  (self@tie{}@code{<gnome-vfs-address*>}) @result{}@tie{} (ret@tie{}@code{unsigned-int32})
@table @var
@item address
A @code{<gnome-vfs-address>}.

@item ret
The associated IPv4 address in network byte order. Note that you should avoid
using this function because newly written code should be protocol independent.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-address-new-from-ipv4  (ipv4_address@tie{}@code{unsigned-int32}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-address*>})
Creates a new @code{<gnome-vfs-address>} from @var{ipv4-address}.

Note that this function should be avoided because newly written code should be
protocol independent.

@table @var
@item ipv4-address
A IPv4 Address in network byte order

@item ret
A new @code{<gnome-vfs-adress>}.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-address-new-from-string  (address@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-address*>})
Creates a new @code{<gnome-vfs-address>} from the given string or
@samp{@code{#f}} if @var{address} isn't a valid.

@table @var
@item address
A string representation of the address.

@item ret
The new @code{<gnome-vfs-address>}.

@end table

Since 2.8

@end deffn

@deffn Function gnome-vfs-address-to-string  (self@tie{}@code{<gnome-vfs-address*>}) @result{}@tie{} (ret@tie{}@code{mchars})
Translate @var{address} to a printable string.

@table @var
@item address
A pointer to a @code{<gnome-vfs-address>}

@item ret
A newly alloced string representation of @var{address} which the caller must
free.

@end table

Since 2.8

@end deffn


@c %end of fragment
