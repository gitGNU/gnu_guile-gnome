
@c %start of fragment

@deffn Function clutter-main 
Starts the Clutter mainloop.

@end deffn

@deffn Function clutter-main-quit 
Terminates the Clutter mainloop.

@end deffn

@deffn Function clutter-main-level  @result{}@tie{} (ret@tie{}@code{int})
Retrieves the depth of the Clutter mainloop.

@table @var
@item ret
The level of the mainloop.

@end table

@end deffn

@deffn Function clutter-get-debug-enabled  @result{}@tie{} (ret@tie{}@code{bool})
Check if clutter has debugging turned on.

@table @var
@item ret
TRUE if debugging is turned on, FALSE otherwise.

@end table

@end deffn

@deffn Function clutter-get-show-fps  @result{}@tie{} (ret@tie{}@code{bool})
Returns whether Clutter should print out the frames per second on the
console. You can enable this setting either using the
@samp{CLUTTER_SHOW_FPS} environment variable or passing the
@samp{--clutter-show-fps} command line argument. *

@table @var
@item ret
@samp{@code{#t}} if Clutter should show the FPS.

@end table

Since 0.4

@end deffn

@deffn Function clutter-get-timestamp  @result{}@tie{} (ret@tie{}@code{unsigned-long})
Returns the approximate number of microseconds passed since clutter was
intialised.

@table @var
@item ret
Number of microseconds since @code{clutter-init} was called.

@end table

@end deffn

@deffn Function clutter-get-actor-by-gid  (id@tie{}@code{unsigned-int32}) @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
Retrieves the @code{<clutter-actor>} with @var{id}.

@table @var
@item id
a @code{<clutter-actor>} ID.

@item ret
the actor with the passed id or @samp{@code{#f}}. The returned actor
does not have its reference count increased.

@end table

Since 0.6

@end deffn

@deffn Function clutter-set-default-frame-rate  (frames_per_sec@tie{}@code{unsigned-int})
Sets the default frame rate. This frame rate will be used to limit the
number of frames drawn if Clutter is not able to synchronize with the
vertical refresh rate of the display. When synchronization is possible,
this value is ignored.

@table @var
@item frames-per-sec
the new default frame rate

@end table

Since 0.6

@end deffn

@deffn Function clutter-get-default-frame-rate  @result{}@tie{} (ret@tie{}@code{unsigned-int})
Retrieves the default frame rate. See
@code{clutter-set-default-frame-rate}.

@table @var
@item ret
the default frame rate

@end table

Since 0.6

@end deffn

@deffn Function clutter-set-motion-events-enabled  (enable@tie{}@code{bool})
Sets whether per-actor motion events should be enabled or not (the
default is to enable them).

If @var{enable} is @samp{@code{#f}} the following events will not work:

@itemize 
@item
@item
@item
@end itemize

ClutterActor::motion-event, unless on the @code{<clutter-stage>}

ClutterActor::enter-event

ClutterActor::leave-event

@table @var
@item enable
@samp{@code{#t}} to enable per-actor motion events

@end table

Since 0.6

@end deffn

@deffn Function clutter-get-motion-events-enabled  @result{}@tie{} (ret@tie{}@code{bool})
Gets whether the per-actor motion events are enabled.

@table @var
@item ret
@samp{@code{#t}} if the motion events are enabled

@end table

Since 0.6

@end deffn

@deffn Function clutter-clear-glyph-cache 
Clears the internal cache of glyphs used by the Pango renderer. This
will free up some memory and GL texture resources. The cache will be
automatically refilled as more text is drawn.

Since 0.8

@end deffn

@deffn Function clutter-set-font-flags  (flags@tie{}@code{<clutter-font-flags>})
Sets the font quality options for subsequent text rendering operations.

Using mipmapped textures will improve the quality for scaled down text
but will use more texture memory.

Enabling hinting improves text quality for static text but may introduce
some artifacts if the text is animated.

@table @var
@item flags
The new flags

@end table

Since 1.0

@end deffn

@deffn Function clutter-get-font-flags  @result{}@tie{} (ret@tie{}@code{<clutter-font-flags>})
Gets the current font flags for rendering text. See
@code{clutter-set-font-flags}.

@table @var
@item ret
The font flags

@end table

Since 1.0

@end deffn

@deffn Function clutter-get-font-map  @result{}@tie{} (ret@tie{}@code{<pango-font-map>})
Retrieves the @code{<pango-font-map>} instance used by Clutter. You can
use the global font map object with the COGL Pango API.

@table @var
@item ret
the @code{<pango-font-map>} instance. The returned value is owned by
Clutter and it should never be unreferenced.

@end table

Since 1.0

@end deffn

@deffn Function clutter-get-default-text-direction  @result{}@tie{} (ret@tie{}@code{<clutter-text-direction>})
Retrieves the default direction for the text. The text direction is
determined by the locale and/or by the @samp{CLUTTER_TEXT_DIRECTION}
environment variable

The default text direction can be overridden on a per-actor basis by
using @code{clutter-actor-set-text-direction}

@table @var
@item ret
the default text direction

@end table

Since 1.2

@end deffn

@deffn Function clutter-get-accessibility-enabled  @result{}@tie{} (ret@tie{}@code{bool})
Returns whether Clutter has accessibility support enabled. As least, a
value of TRUE means that there are a proper AtkUtil implementation
available

@table @var
@item ret
@samp{@code{#t}} if Clutter has accessibility support enabled

@end table

Since 1.4

@end deffn

@deffn Function clutter-get-keyboard-grab  @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
Queries the current keyboard grab of clutter.

@table @var
@item ret
the actor currently holding the keyboard grab, or NULL if there is no
grab.

@end table

Since 0.6

@end deffn

@deffn Function clutter-get-pointer-grab  @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
Queries the current pointer grab of clutter.

@table @var
@item ret
the actor currently holding the pointer grab, or NULL if there is no
grab.

@end table

Since 0.6

@end deffn

@deffn Function clutter-grab-keyboard  (actor@tie{}@code{<clutter-actor>})
Grabs keyboard events, after the grab is done keyboard events
(@code{<"key-press-event">} and @code{<"key-release-event">}) are
delivered to this actor directly. The source set in the event will be
the actor that would have received the event if the keyboard grab was
not in effect.

Like pointer grabs, keyboard grabs should only be used as a last
resource.

See also @code{clutter-stage-set-key-focus} and
@code{clutter-actor-grab-key-focus} to perform a "soft" key grab and
assign key focus to a specific actor.

@table @var
@item actor
a @code{<clutter-actor>}

@end table

Since 0.6

@end deffn

@deffn Function clutter-grab-pointer  (actor@tie{}@code{<clutter-actor>})
Grabs pointer events, after the grab is done all pointer related events
(press, motion, release, enter, leave and scroll) are delivered to this
actor directly without passing through both capture and bubble phases of
the event delivery chain. The source set in the event will be the actor
that would have received the event if the pointer grab was not in
effect.

Grabs completely override the entire event delivery chain done by
Clutter. Pointer grabs should only be used as a last resource; using the
@code{<"captured-event">} signal should always be the preferred way to
intercept event delivery to reactive actors.

If you wish to grab all the pointer events for a specific input device,
you should use @code{clutter-grab-pointer-for-device}.

@table @var
@item actor
a @code{<clutter-actor>}

@end table

Since 0.6

@end deffn

@deffn Function clutter-ungrab-keyboard 
Removes an existing grab of the keyboard.

Since 0.6

@end deffn

@deffn Function clutter-ungrab-pointer 
Removes an existing grab of the pointer.

Since 0.6

@end deffn

@deffn Function clutter-grab-pointer-for-device  (actor@tie{}@code{<clutter-actor>}) (id@tie{}@code{int})
Grabs all the pointer events coming from the device @var{id} for
@var{actor}.

If @var{id} is -1 then this function is equivalent to
@code{clutter-grab-pointer}.

@table @var
@item actor
a @code{<clutter-actor>}

@item id
a device id, or -1

@end table

Since 0.8

@end deffn

@deffn Function clutter-ungrab-pointer-for-device  (id@tie{}@code{int})
Removes an existing grab of the pointer events for device @var{id}.

@table @var
@item id
a device id

@end table

Since 0.8

@end deffn

@deffn Function clutter-do-event  (event@tie{}@code{<clutter-event>})
Processes an event. This function should never be called by
applications.

@table @var
@item event
a @code{<clutter-event>}.

@end table

Since 0.4

@end deffn


@c %end of fragment
