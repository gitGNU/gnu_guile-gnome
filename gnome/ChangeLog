2004-03-26  Andreas Rottmann  <a.rottmann@gmx.at>

	* gobject.scm (gtype-class-define-signal): Use
	procedure->memoizing-macro instead of procedure->macro, which is
	deprecated.

2004-02-22  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (make-gparam-instance): Make params (read write) by
	default.
	(make-gobject-instance): Allow keyword initargs that are defined
	via :init-keyword. Call the <object> initializer directly to set
	these. Somewhat hacky, but doesn't really break any rules.
	(scm->gvalue): Work with closures.

2004-02-21  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (gtype-instance:write): If we get a GValue from
	somewhere else, the "primitive" code doesn't know how to make the
	class. So we have a new hacky method to accept a gtype as the arg
	and do the gtype->class in gobject.scm now.

2004-02-12  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (scm->gvalue): Add a case for setting flags.
	(allocate-instance): Use gvalue-primitive-new for basic types.
	(gvalue->scm, scm->gvalue): Simplifications based on basic types.
	All over: adapt to primitives changes.

2004-02-08  Andy Wingo  <wingo@pobox.com>

	* gobject.scm: Removed most of the commentary. Instead, refer to
	the tutorial.
	(exports): No more genum->value-table. New functions
	genum-class->value-table, gflags-class->value-table. New function
	genum->value.
	(initialize for <gtype-class>): Allow subclassing of <genum> and
	<gflags> to create new GTypes. You must pass #:vtable as an
	initarg.
	(gtype-instance-primitive): New helper (private).
	(initialize for <gclosure>): Allow either parameters and return
	val to be either <gtype> or <gtype-class> instances. If no return
	type is specified, set the slot to gtype:void, not #f.
	(make-pspec-args): Accept <gtype-class> when gtype? is the predicate.
	(gtype-class-create-signal): Accept <gtype-class> instances in the
	param types.

	* Makefile.am: Make the gnome build conditional, and some
	cleanups.

2004-01-14  Andy Wingo  <wingo@pobox.com>

	* gtk.scm: Move functions from generics.scm here, as everyone uses
	generics. Now re-exports ATK and Pango, using the new
	re-export-module macro.

	* gobject.scm (make-gobject-instance): Now a method so that
	<gtk-object> can implement explicit destruction. Exported.
	(<gobject-class>): New class whose get-n-set uses gobject-get-data
	and gobject-set-data! to implement instance-allocated slots.
	(gvalue->scm): Use %gtype-instance-value->scm to convert GObject
	GValues into GOOPS objects. An optimization to prevent excessive
	allocation and reffing.

2003-11-08  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (make-instance): New implementation for
	gtype-instances. `initialize' for gobjects is now called by the
	gobject system, not by goops. For params and interfaces, it is the
	same as before.
	(gtype-instance:initialize): Gone, replaced by the normal
	`initialize'.

2003-10-29  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (initialize): Allow a single symbol again as a flags
	#:value.

2003-10-27  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (initialize): For <gflags>, if the #:value is an
	integer, process it correctly.

2003-10-26  Andy Wingo  <wingo@pobox.com>

	* gobject.scm
	There were a lot of general cleanups and reorganizations here. The
	file should be more readable now.

	(gobject-get-property): Not a method anymore. We
	don't want people mistakenly overriding this function (override
	gobject:get-property instead).
	(gobject-set-property): Same.
	(gobject:set-property): Added docstring.
	(gobject:get-property): Same.
	(<gobject>): No more servant properties.
	(gobject:instance-init): Gone, use gtype-instance:instance-init.
	(gobject:class-init): Gone, initialize after you make the class.
	(gobject-class:install-property): Gone, the C code does The Right
	Thing now.
	(gtype-instance:class-init): Gone, like gobject:class-init.
	(class-is-a?): Gone.
	(gobject-type-register-static): Gone. Use gtype-register-static if
	you want to, but subclassing should be good enough.
	(initialize): For <gvalue>, we never see closures, so we remove
	that piece of code.

2003-10-25  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (get-direct-supers): Only add <gtype-instance> to
	the hierarchy if the type is instantiatable, not classed.
	(gobject-class-set-properties!): New function, split out of
	init-gobject class.
	(init-gobject-class): Expose slots described with #:param-spec
	options as gobject properties.
	(let-params): Removed, you can do all of this with GOOPS now.
	(make-gobject-property): Removed, GOOPS handles this now.
	(define-gobject-class): Removed, just use define-class.
	(initialize): For <gtype-class>, do most of the things we did in
	gtype->class here. If no #:gtype argument is passed, subclass the
	parent type.
	(gtype->class): Just make the class, no more voodoo here.
	(write): for <gparam>, don't try to write the pspec struct if it
	isn't set yet.
	(gtype-class-create-signal): Take a list of param types instead of
	a vector.

2003-10-25  Andreas Rottmann  <a.rottmann@gmx.at>

	* gobject.scm (scm->gvalue): Fixed wrt gvalue-array (recent
	changes broke this).
	
2003-10-24  Andreas Rottmann  <a.rottmann@gmx.at>

	* gobject.scm (gclosure-invoke): Fixed for closures without return
	type.

2003-10-23  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (gobject-get-property): Use gvalue->scm.
	(allocate-instance): Allocate GBoxedSCM instances in the
	<gtype-class> allocate-instance method.
	(let-params): #:name, not :name.

2003-10-22  Andy Wingo  <wingo@pobox.com>

	* gobject.scm: (get-metaclass): Removed, we always use
	<gtype-class> as a metaclass.
	(gtype->class): Always use <gtype-class> as a metaclass. Add some
	initialization for interfaces, but this can't be completed until
	an implementor has been initialized as well. So the job is
	finished in %gtype-bind-to-class for implementors.
	(gtype-instance:write): Work on <%gtype-instance>. This will
	probably move somewhere else in the future.
	(gtype-instance:write): Why we have implementations for <gtype>s
	is unknown to me. These will likely be removed.
	(gtype-class-get-vector-slot): Robustified to deal with strange
	objects in the CPL (like interfaces).
	(gtype-instance-signal-emit): Name changed from
	gobject-signal-emit, because it can operate on any gtype-instance.
	(gtype-instance-signal-connect-data): Same.
	(gtype-instance-signal-connect): Same.
	(gtype-instance-signal-connect-after): Same.
	(gtype-class-create-signal): Same.

2003-10-21  Andy Wingo  <wingo@pobox.com>

	* gobject.scm: General reorganizations.
	(get-parent-types): Removed, we only have one direct
	parent now (as well as interfaces if they're not already there).
	(gtype-class-ancestry): Removed, all this information is already
	encapsulated in the class precedence list.
	(make-class-slots): Change the name of gobject-signals to
	gsignals, and add it to all classed GTypes.
	(gtype-ancestry): Removed, either get this from the class
	precedence list or loop on gtype-parent yourself.
	(init-gobject-class): Only store signals from the class itself in
	the gsignals slot.
	(gtype-class-get-signal-names): New function.
	(get-direct-supers): New function, replaces get-parent-types. I'm
	schizophrenic ;)
	(gtype->class): Also initialize GObject (dunno why this wasn't
	done).

2003-10-21  Andreas Rottmann  <a.rottmann@gmx.at>

	* Makefile.am (SUBDIRS): Only include gtk and corba if we have
	detected them.

2003-10-15  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (gobject:instance-init): Remove class argument.
	(gtype-instance:instance-init): Remove class argument.

2003-10-12  Andy Wingo  <wingo@pobox.com>

	* gtk.scm: Import and re-export generics again, so we allow custom
	generics to be written.

	* gobject.scm (scm->gvalue): renamed from make-value-from-scm.
	Also deals with interfaces.
	(make-ginterface): Wrap interfaces using the standard
	goops<->GTypeInstance SMOB pairing.
	(exports): Export classes for <ginterface>, <gint64>, and
	<guint64>.

2003-07-27  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (make-value-from-scm): Make gboxed-scms when needed.

2003-08-26  Andreas Rottmann  <a.rottmann@gmx.at>

	* gtk.scm: Removed import of (gnome gtk generics), as no longer needed.

2003-06-18  Andy Wingo  <wingo@pobox.com>

	* gobject.scm (make-gparam-instance): Fix typo (name->nick).
	(make-gparam-instance): Make the pspec->flags actually set, with a
	#:flags initarg -- also required some changes in -primitives.c.

2003-06-07  Andy Wingo  <wingo@pobox.com>

	* gobject.scm: Made the commentary retrievable with
	file-commentary, see (ice-9 documentation) for more details.

	* glib.scm (g-timeout-add, g-idle-add): As it turns out,
	g-idle-source-new creates an idle source, but with priority
	G_PRIORITY_DEFAULT instead of G_PRIORITY_DEFAULT_IDLE. This means
	that after g-idle-add is called, no Gtk events get processed (Bad
	Thing (tm)). Now we set the priority manually to DEFAULT_IDLE.
	Thanks to Owen Taylor for pointers on this one.

2003-05-08  Andy Wingo  <wingo@pobox.com>

	* glib.scm: new file. Imports gobject/gw-glib and defines
	g-idle-add and g-timeout-add (in scheme).

	* gtk.scm: import glib.scm.
	

