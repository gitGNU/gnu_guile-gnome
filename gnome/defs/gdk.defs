;; -*- scheme -*-

(include type-overrides)
(include "gdk-types.defs")
(include overrides)

;; From /opt/gtk2/include/gtk-2.0/gdk/gdk.h

(define-function screen_width
  (c-name "gdk_screen_width")
  (return-type "gint")
)

(define-function screen_height
  (c-name "gdk_screen_height")
  (return-type "gint")
)

(define-function screen_width_mm
  (c-name "gdk_screen_width_mm")
  (return-type "gint")
)

(define-function screen_height_mm
  (c-name "gdk_screen_height_mm")
  (return-type "gint")
)

(define-function flush
  (c-name "gdk_flush")
  (return-type "none")
)

(define-function beep
  (c-name "gdk_beep")
  (return-type "none")
)

(define-function set_double_click_time
  (c-name "gdk_set_double_click_time")
  (return-type "none")
  (parameters
    '("guint" "msec")
  )
)

(define-function threads_enter
  (c-name "gdk_threads_enter")
  (return-type "none")
)

(define-function threads_leave
  (c-name "gdk_threads_leave")
  (return-type "none")
)

(define-function threads_init
  (c-name "gdk_threads_init")
  (return-type "none")
)


;; From /opt/gtk2/include/gtk-2.0/gdk/gdkcolor.h

(define-function gdk_colormap_get_type
  (c-name "gdk_colormap_get_type")
  (return-type "GType")
)

(define-function gdk_colormap_new
  (c-name "gdk_colormap_new")
  (is-constructor-of GdkColormap)
  (return-type "GdkColormap*")
  (parameters
    '("GdkVisual*" "visual")
    '("gboolean" "allocate")
  )
)

(define-function colormap_get_system
  (c-name "gdk_colormap_get_system")
  (return-type "GdkColormap*")
)

(define-function colormap_get_system_size
  (c-name "gdk_colormap_get_system_size")
  (return-type "gint")
)

;(define-method change
;  (of-object "GdkColormap")
;  (c-name "gdk_colormap_change")
;  (return-type "none")
;  (parameters
;    '("gint" "ncolors")
;  )
;)

(define-method alloc_color
  (of-object "GdkColormap")
  (c-name "gdk_colormap_alloc_color")
  (return-type "gboolean")
  (parameters
    '("GdkColor*" "color")
    '("gboolean" "writeable")
    '("gboolean" "best_match")
  )
)

(define-method get_visual
  (of-object "GdkColormap")
  (c-name "gdk_colormap_get_visual")
  (return-type "GdkVisual*")
)

(define-function color_parse
  (c-name "gdk_color_parse")
  (return-type "gint")
  (parameters
    '("const-gchar*" "spec")
    '("GdkColor*" "color")
  )
)

(define-method white
  (of-object "GdkColormap")
  (c-name "gdk_color_white")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method black
  (of-object "GdkColormap")
  (c-name "gdk_color_black")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method alloc
  (of-object "GdkColormap")
  (c-name "gdk_color_alloc")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method change
  (of-object "GdkColormap")
  (c-name "gdk_color_change")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkcursor.h

(define-function cursor_new
  (is-constructor-of GdkCursor)
  (c-name "gdk_cursor_new")
  (return-type "GdkCursor*")
  (parameters
    '("GdkCursorType" "cursor_type")
  )
)

(define-function cursor_new_from_pixmap
  (is-constructor-of GdkCursor)
  (c-name "gdk_cursor_new_from_pixmap")
  (return-type "GdkCursor*")
  (parameters
    '("GdkPixmap*" "source")
    '("GdkPixmap*" "mask")
    '("GdkColor*" "fg")
    '("GdkColor*" "bg")
    '("gint" "x")
    '("gint" "y")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkdnd.h

(define-function drag_context_get_type
  (c-name "gdk_drag_context_get_type")
  (return-type "GType")
)

(define-function drag_context_new
  (is-constructor-of GdkDragContext)
  (c-name "gdk_drag_context_new")
  (return-type "GdkDragContext*")
)

(define-method ref
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_unref")
  (return-type "none")
)

(define-method drag_status
  (of-object "GdkDragContext")
  (c-name "gdk_drag_status")
  (return-type "none")
  (parameters
    '("GdkDragAction" "action")
    '("guint32" "time")
  )
)

(define-method drop_reply
  (of-object "GdkDragContext")
  (c-name "gdk_drop_reply")
  (return-type "none")
  (parameters
    '("gboolean" "ok")
    '("guint32" "time")
  )
)

(define-method drop_finish
  (of-object "GdkDragContext")
  (c-name "gdk_drop_finish")
  (return-type "none")
  (parameters
    '("gboolean" "success")
    '("guint32" "time")
  )
)

(define-method drag_get_selection
  (of-object "GdkDragContext")
  (c-name "gdk_drag_get_selection")
  (return-type "GdkAtom")
)

(define-method drag_begin
  (of-object "GdkWindow")
  (c-name "gdk_drag_begin")
  (return-type "GdkDragContext*")
  (parameters
    '("GList*" "targets")
  )
)

(define-function drag_get_protocol
  (c-name "gdk_drag_get_protocol")
  (return-type "guint32")
  (parameters
    '("guint32" "xid")
    '("GdkDragProtocol*" "protocol")
  )
)

(define-method drag_find_window
  (of-object "GdkDragContext")
  (c-name "gdk_drag_find_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "drag_window")
    '("gint" "x_root")
    '("gint" "y_root")
    '("GdkWindow**" "dest_window")
    '("GdkDragProtocol*" "protocol")
  )
)

(define-method drag_motion
  (of-object "GdkDragContext")
  (c-name "gdk_drag_motion")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "dest_window")
    '("GdkDragProtocol" "protocol")
    '("gint" "x_root")
    '("gint" "y_root")
    '("GdkDragAction" "suggested_action")
    '("GdkDragAction" "possible_actions")
    '("guint32" "time")
  )
)

(define-method drag_drop
  (of-object "GdkDragContext")
  (c-name "gdk_drag_drop")
  (return-type "none")
  (parameters
    '("guint32" "time")
  )
)

(define-method drag_abort
  (of-object "GdkDragContext")
  (c-name "gdk_drag_abort")
  (return-type "none")
  (parameters
    '("guint32" "time")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkdrawable.h

(define-function gdk_drawable_get_type
  (c-name "gdk_drawable_get_type")
  (return-type "GType")
)

(define-method set_data
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_set_data")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_func")
  )
)

(define-method get_data
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_data")
  (return-type "gpointer")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_size
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method set_colormap
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_colormap
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_colormap")
  (return-type "GdkColormap*")
)

(define-method get_visual
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_visual")
  (return-type "GdkVisual*")
)

(define-method get_depth
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_depth")
  (return-type "gint")
)

(define-method ref
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_ref")
  (return-type "GdkDrawable*")
)

(define-method unref
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_unref")
  (return-type "none")
)

(define-method draw_point
  (of-object "GdkDrawable")
  (c-name "gdk_draw_point")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method draw_line
  (of-object "GdkDrawable")
  (c-name "gdk_draw_line")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x1")
    '("gint" "y1")
    '("gint" "x2")
    '("gint" "y2")
  )
)

(define-method draw_rectangle
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rectangle")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gboolean" "filled")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_arc
  (of-object "GdkDrawable")
  (c-name "gdk_draw_arc")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "filled")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("gint" "angle1")
    '("gint" "angle2")
  )
)

(define-method draw_polygon
  (of-object "GdkDrawable")
  (c-name "gdk_draw_polygon")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "filled")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_string
  (of-object "GdkDrawable")
  (c-name "gdk_draw_string")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "string")
  )
)

(define-method draw_text
  (of-object "GdkDrawable")
  (c-name "gdk_draw_text")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "text")
    '("gint" "text_length")
  )
)

(define-method draw_text_wc
  (of-object "GdkDrawable")
  (c-name "gdk_draw_text_wc")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
  )
)

(define-method draw_drawable
  (of-object "GdkDrawable")
  (c-name "gdk_draw_drawable")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkDrawable*" "src")
    '("gint" "xsrc")
    '("gint" "ysrc")
    '("gint" "xdest")
    '("gint" "ydest")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkImage*" "image")
    '("gint" "xsrc")
    '("gint" "ysrc")
    '("gint" "xdest")
    '("gint" "ydest")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_points
  (of-object "GdkDrawable")
  (c-name "gdk_draw_points")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_segments
  (of-object "GdkDrawable")
  (c-name "gdk_draw_segments")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkSegment*" "segs")
    '("gint" "nsegs")
  )
)

(define-method draw_lines
  (of-object "GdkDrawable")
  (c-name "gdk_draw_lines")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_glyphs
  (of-object "GdkDrawable")
  (c-name "gdk_draw_glyphs")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("PangoFont*" "font")
    '("gint" "x")
    '("gint" "y")
    '("PangoGlyphString*" "glyphs")
  )
)

(define-method draw_layout_line
  (of-object "GdkDrawable")
  (c-name "gdk_draw_layout_line")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayoutLine*" "line")
  )
)

(define-method draw_layout
  (of-object "GdkDrawable")
  (c-name "gdk_draw_layout")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayout*" "layout")
  )
)

(define-function gdk_draw_layout_line_with_colors
  (c-name "gdk_draw_layout_line_with_colors")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayoutLine*" "line")
    '("GdkColor*" "foreground")
    '("GdkColor*" "background")
  )
)

(define-function gdk_draw_layout_with_colors
  (c-name "gdk_draw_layout_with_colors")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayout*" "layout")
    '("GdkColor*" "foreground")
    '("GdkColor*" "background")
  )
)

(define-method get_image
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_image")
  (return-type "GdkImage*")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_clip_region
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_clip_region")
  (return-type "GdkRegion*")
)

(define-method get_visible_region
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_visible_region")
  (return-type "GdkRegion*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkevents.h

(define-function gdk_event_get_type
  (c-name "gdk_event_get_type")
  (return-type "GType")
)

(define-function events_pending
  (c-name "gdk_events_pending")
  (return-type "gboolean")
)

(define-function event_get
  (c-name "gdk_event_get")
  (return-type "GdkEvent*")
)

(define-function event_peek
  (c-name "gdk_event_peek")
  (return-type "GdkEvent*")
)

(define-function event_get_graphics_expose
  (c-name "gdk_event_get_graphics_expose")
  (return-type "GdkEvent*")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method put
  (of-object "GdkEvent")
  (c-name "gdk_event_put")
  (return-type "none")
)

(define-method copy
  (of-object "GdkEvent")
  (c-name "gdk_event_copy")
  (return-type "GdkEvent*")
)

(define-method free
  (of-object "GdkEvent")
  (c-name "gdk_event_free")
  (return-type "none")
)

(define-method get_time
  (of-object "GdkEvent")
  (c-name "gdk_event_get_time")
  (return-type "guint32")
)

(define-method get_state
  (of-object "GdkEvent")
  (c-name "gdk_event_get_state")
  (return-type "gboolean")
  (parameters
    '("GdkModifierType*" "state")
  )
)

(define-method get_coords
  (of-object "GdkEvent")
  (c-name "gdk_event_get_coords")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "x_win")
    '("gdouble*" "y_win")
  )
)

(define-method get_root_coords
  (of-object "GdkEvent")
  (c-name "gdk_event_get_root_coords")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "x_root")
    '("gdouble*" "y_root")
  )
)

(define-method get_axis
  (of-object "GdkEvent")
  (c-name "gdk_event_get_axis")
  (return-type "gboolean")
  (parameters
    '("GdkAxisUse" "axis_use")
    '("gdouble*" "value")
  )
)

(define-function gdk_event_handler_set
  (c-name "gdk_event_handler_set")
  (return-type "none")
  (parameters
    '("GdkEventFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function set_show_events
  (c-name "gdk_set_show_events")
  (return-type "none")
  (parameters
    '("gboolean" "show_events")
  )
)

(define-function get_show_events
  (c-name "gdk_get_show_events")
  (return-type "gboolean")
)

(define-function gdk_add_client_message_filter
  (c-name "gdk_add_client_message_filter")
  (return-type "none")
  (parameters
    '("GdkAtom" "message_type")
    '("GdkFilterFunc" "func")
    '("gpointer" "data")
  )
)

(define-function setting_get
  (c-name "gdk_setting_get")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
    '("GValue*" "value")
  )
)




;; From /opt/gtk2/include/gtk-2.0/gdk/gdkfont.h

(define-function font_load
  (is-constructor-of GdkFont)
  (c-name "gdk_font_load")
  (return-type "GdkFont*")
  (parameters
    '("const-gchar*" "font_name")
  )
)

(define-function fontset_load
  (c-name "gdk_fontset_load")
  (return-type "GdkFont*")
  (parameters
    '("const-gchar*" "fontset_name")
  )
)

(define-function font_from_description
  (c-name "gdk_font_from_description")
  (return-type "GdkFont*")
  (parameters
    '("PangoFontDescription*" "font_desc")
  )
)

(define-method id
  (of-object "GdkFont")
  (c-name "gdk_font_id")
  (return-type "gint")
)

(define-method string_width
  (of-object "GdkFont")
  (c-name "gdk_string_width")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method width
  (of-object "GdkFont")
  (c-name "gdk_text_width")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method text_width_wc
  (of-object "GdkFont")
  (c-name "gdk_text_width_wc")
  (return-type "gint")
  (parameters
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
  )
)

(define-method char_width
  (of-object "GdkFont")
  (c-name "gdk_char_width")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method char_width_wc
  (of-object "GdkFont")
  (c-name "gdk_char_width_wc")
  (return-type "gint")
  (parameters
    '("GdkWChar" "character")
  )
)

(define-method string_measure
  (of-object "GdkFont")
  (c-name "gdk_string_measure")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method measure
  (of-object "GdkFont")
  (c-name "gdk_text_measure")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method char_measure
  (of-object "GdkFont")
  (c-name "gdk_char_measure")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method string_height
  (of-object "GdkFont")
  (c-name "gdk_string_height")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method height
  (of-object "GdkFont")
  (c-name "gdk_text_height")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method char_height
  (of-object "GdkFont")
  (c-name "gdk_char_height")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method extents
  (of-object "GdkFont")
  (c-name "gdk_text_extents")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)

(define-method text_extents_wc
  (of-object "GdkFont")
  (c-name "gdk_text_extents_wc")
  (return-type "none")
  (parameters
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)

(define-method string_extents
  (of-object "GdkFont")
  (c-name "gdk_string_extents")
  (return-type "none")
  (parameters
    '("const-gchar*" "string")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkgc.h

(define-function gdk_gc_get_type
  (c-name "gdk_gc_get_type")
  (return-type "GType")
)

(define-function gc_new
  (c-name "gdk_gc_new")
  (return-type "GdkGC*")
  (parameters
    '("GdkDrawable*" "drawable")
  )
)

(define-method new_gc
  (of-object "GdkDrawable")
  (c-name "gdk_gc_new_with_values")
  (return-type "GdkGC*")
  (parameters
    '("GdkGCValues*" "values")
    '("GdkGCValuesMask" "values_mask")
  )
)

(define-method get_values
  (of-object "GdkGC")
  (c-name "gdk_gc_get_values")
  (return-type "none")
  (parameters
    '("GdkGCValues*" "values")
  )
)

(define-method set_values
  (of-object "GdkGC")
  (c-name "gdk_gc_set_values")
  (return-type "none")
  (parameters
    '("GdkGCValues*" "values")
    '("GdkGCValuesMask" "values_mask")
  )
)

(define-method set_foreground
  (of-object "GdkGC")
  (c-name "gdk_gc_set_foreground")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_background
  (of-object "GdkGC")
  (c-name "gdk_gc_set_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_font
  (of-object "GdkGC")
  (c-name "gdk_gc_set_font")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
  )
)

(define-method set_function
  (of-object "GdkGC")
  (c-name "gdk_gc_set_function")
  (return-type "none")
  (parameters
    '("GdkFunction" "function")
  )
)

(define-method set_fill
  (of-object "GdkGC")
  (c-name "gdk_gc_set_fill")
  (return-type "none")
  (parameters
    '("GdkFill" "fill")
  )
)

(define-method set_tile
  (of-object "GdkGC")
  (c-name "gdk_gc_set_tile")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "tile")
  )
)

(define-method set_stipple
  (of-object "GdkGC")
  (c-name "gdk_gc_set_stipple")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "stipple")
  )
)

(define-method set_ts_origin
  (of-object "GdkGC")
  (c-name "gdk_gc_set_ts_origin")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_clip_origin
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_origin")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_clip_mask
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "mask")
  )
)

(define-method set_clip_rectangle
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_rectangle")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rectangle")
  )
)

(define-method set_clip_region
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method set_subwindow
  (of-object "GdkGC")
  (c-name "gdk_gc_set_subwindow")
  (return-type "none")
  (parameters
    '("GdkSubwindowMode" "mode")
  )
)

(define-method set_exposures
  (of-object "GdkGC")
  (c-name "gdk_gc_set_exposures")
  (return-type "none")
  (parameters
    '("gboolean" "exposures")
  )
)

(define-method set_line_attributes
  (of-object "GdkGC")
  (c-name "gdk_gc_set_line_attributes")
  (return-type "none")
  (parameters
    '("gint" "line_width")
    '("GdkLineStyle" "line_style")
    '("GdkCapStyle" "cap_style")
    '("GdkJoinStyle" "join_style")
  )
)

;; this one has been changed for guile-gobject, gint8[] -> gint8*

(define-method set_dashes
  (of-object "GdkGC")
  (c-name "gdk_gc_set_dashes")
  (return-type "none")
  (parameters
    '("gint" "dash_offset")
    '("gint8*" "dash_list")
    '("gint" "n")
  )
)

(define-method offset
  (of-object "GdkGC")
  (c-name "gdk_gc_offset")
  (return-type "none")
  (parameters
    '("gint" "x_offset")
    '("gint" "y_offset")
  )
)

(define-method copy
  (of-object "GdkGC")
  (c-name "gdk_gc_copy")
  (return-type "none")
  (parameters
    '("GdkGC*" "src_gc")
  )
)

(define-method set_colormap
  (of-object "GdkGC")
  (c-name "gdk_gc_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_colormap
  (of-object "GdkGC")
  (c-name "gdk_gc_get_colormap")
  (return-type "GdkColormap*")
)

(define-method set_rgb_fg_color
  (of-object "GdkGC")
  (c-name "gdk_gc_set_rgb_fg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_rgb_bg_color
  (of-object "GdkGC")
  (c-name "gdk_gc_set_rgb_bg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)


;; From /opt/gtk2/include/gtk-2.0/gdk/gdkimage.h

(define-function gdk_image_get_type
  (c-name "gdk_image_get_type")
  (return-type "GType")
)

(define-function gdk_image_new
  (is-constructor-of GdkImage)
  (c-name "gdk_image_new")
  (return-type "GdkImage*")
  (parameters
    '("GdkImageType" "type")
    '("GdkVisual*" "visual")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method image_get
  (of-object "GdkDrawable")
  (deprecated "use GdkDrawable.get_image")
  (c-name "gdk_image_get")
  (return-type "GdkImage*")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method put_pixel
  (of-object "GdkImage")
  (c-name "gdk_image_put_pixel")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("guint32" "pixel")
  )
)

(define-method get_pixel
  (of-object "GdkImage")
  (c-name "gdk_image_get_pixel")
  (return-type "guint32")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_colormap
  (of-object "GdkImage")
  (c-name "gdk_image_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_colormap
  (of-object "GdkImage")
  (c-name "gdk_image_get_colormap")
  (return-type "GdkColormap*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkinput.h

(define-function device_get_type
  (c-name "gdk_device_get_type")
  (return-type "GType")
)

(define-function devices_list
  (c-name "gdk_devices_list")
  (return-type "GList*-of-GdkDevice*")
)

(define-method set_source
  (of-object "GdkDevice")
  (c-name "gdk_device_set_source")
  (return-type "none")
  (parameters
    '("GdkInputSource" "source")
  )
)

(define-method set_mode
  (of-object "GdkDevice")
  (c-name "gdk_device_set_mode")
  (return-type "gboolean")
  (parameters
    '("GdkInputMode" "mode")
  )
)

(define-method set_key
  (of-object "GdkDevice")
  (c-name "gdk_device_set_key")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method set_axis_use
  (of-object "GdkDevice")
  (c-name "gdk_device_set_axis_use")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("GdkAxisUse" "use")
  )
)

(define-method get_state
  (of-object "GdkDevice")
  (c-name "gdk_device_get_state")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("gdouble*" "axes")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_history
  (of-object "GdkDevice")
  (c-name "gdk_device_get_history")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "window")
    '("guint32" "start")
    '("guint32" "stop")
    '("GdkTimeCoord***" "events")
    '("gint*" "n_events")
  )
)

(define-function device_free_history
  (c-name "gdk_device_free_history")
  (return-type "none")
  (parameters
    '("GdkTimeCoord**" "events")
    '("gint" "n_events")
  )
)

(define-method get_axis
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axis")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "axes")
    '("GdkAxisUse" "use")
    '("gdouble*" "value")
  )
)

(define-method input_set_extension_events
  (of-object "GdkWindow")
  (c-name "gdk_input_set_extension_events")
  (return-type "none")
  (parameters
    '("gint" "mask")
    '("GdkExtensionMode" "mode")
  )
)

(define-function device_get_core_pointer
  (c-name "gdk_device_get_core_pointer")
  (return-type "GdkDevice*")
)



;; from /opt/gtk2/include/gtk-2.0/gdk/gdkkeys.h

(define-function gdk_keymap_get_type
  (c-name "gdk_keymap_get_type")
  (return-type "GType")
)

(define-function keymap_get_default
  (c-name "gdk_keymap_get_default")
  (return-type "GdkKeymap*")
)

(define-method lookup_key
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_lookup_key")
  (return-type "guint")
  (parameters
    '("const-GdkKeymapKey*" "key")
  )
)

(define-method translate_keyboard_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_translate_keyboard_state")
  (return-type "gboolean")
  (parameters
    '("guint" "hardware_keycode")
    '("GdkModifierType" "state")
    '("gint" "group")
    '("guint*" "keyval")
    '("gint*" "effective_group")
    '("gint*" "level")
    '("GdkModifierType*" "consumed_modifiers")
  )
)

(define-method get_entries_for_keyval
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_entries_for_keyval")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkKeymapKey**" "keys")
    '("gint*" "n_keys")
  )
)

(define-method get_entries_for_keycode
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_entries_for_keycode")
  (return-type "gboolean")
  (parameters
    '("guint" "hardware_keycode")
    '("GdkKeymapKey**" "keys")
    '("guint**" "keyvals")
    '("gint*" "n_entries")
  )
)

(define-method get_direction
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_direction")
  (return-type "PangoDirection")
)

(define-function keyval_name
  (c-name "gdk_keyval_name")
  (return-type "const-gchar*")
  (parameters
    '("guint" "keyval")
  )
)

(define-function keyval_from_name
  (c-name "gdk_keyval_from_name")
  (return-type "guint")
  (parameters
    '("const-gchar*" "keyval_name")
  )
)

(define-function keyval_convert_case
  (c-name "gdk_keyval_convert_case")
  (return-type "none")
  (parameters
    '("guint" "symbol")
    '("guint*" "lower")
    '("guint*" "upper")
  )
)

(define-function keyval_to_upper
  (c-name "gdk_keyval_to_upper")
  (return-type "guint")
  (parameters
    '("guint" "keyval")
  )
)

(define-function keyval_to_lower
  (c-name "gdk_keyval_to_lower")
  (return-type "guint")
  (parameters
    '("guint" "keyval")
  )
)

(define-function keyval_is_upper
  (c-name "gdk_keyval_is_upper")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
  )
)

(define-function keyval_is_lower
  (c-name "gdk_keyval_is_lower")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
  )
)

(define-function keyval_to_unicode
  (c-name "gdk_keyval_to_unicode")
  (return-type "guint32")
  (parameters
    '("guint" "keyval")
  )
)

(define-function unicode_to_keyval
  (c-name "gdk_unicode_to_keyval")
  (return-type "guint")
  (parameters
    '("guint32" "wc")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkpixbuf.h

(define-method render_to_drawable
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_to_drawable")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("GdkGC*" "gc")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
    '("GdkRgbDither" "dither")
    '("int" "x_dither")
    '("int" "y_dither")
  )
)

(define-method render_to_drawable_alpha
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_to_drawable_alpha")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
    '("GdkPixbufAlphaMode" "alpha_mode")
    '("int" "alpha_threshold")
    '("GdkRgbDither" "dither")
    '("int" "x_dither")
    '("int" "y_dither")
  )
)

(define-method render_pixmap_and_mask
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_pixmap_and_mask")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "pixmap_return")
    '("GdkBitmap**" "mask_return")
    '("int" "alpha_threshold" (default "127"))
  )
)

(define-method get_from_drawable
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_from_drawable")
  (return-type "GdkPixbuf*")
  (parameters
    '("GdkDrawable*" "src")
    '("GdkColormap*" "cmap")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
  )
)

(define-method get_from_image
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_from_image")
  (return-type "GdkPixbuf*")
  (parameters
    '("GdkImage*" "src")
    '("GdkColormap*" "cmap")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkpixmap.h

(define-function gdk_pixmap_get_type
  (c-name "gdk_pixmap_get_type")
  (return-type "GType")
)

(define-function gdk_pixmap_new
  (is-constructor-of GdkPixmap)
  (c-name "gdk_pixmap_new")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window" (null-ok))
    '("gint" "width")
    '("gint" "height")
    '("gint" "depth" (default -1))
  )
)

(define-function bitmap_create_from_data
  (c-name "gdk_bitmap_create_from_data")
  (return-type "GdkBitmap*")
  (parameters
    '("GdkWindow*" "window")
    '("const-guchar*" "data")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function pixmap_create_from_data
  (c-name "gdk_pixmap_create_from_data")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("const-guchar*" "data")
    '("gint" "width")
    '("gint" "height")
    '("gint" "depth")
    '("GdkColor*" "fg")
    '("GdkColor*" "bg")
  )
)

(define-function pixmap_create_from_xpm
  (c-name "gdk_pixmap_create_from_xpm")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("const-gchar*" "filename")
  )
)

(define-function pixmap_colormap_create_from_xpm
  (c-name "gdk_pixmap_colormap_create_from_xpm")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkColormap*" "colormap")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("const-gchar*" "filename")
  )
)

(define-function pixmap_create_from_xpm_d
  (c-name "gdk_pixmap_create_from_xpm_d")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("gchar**" "data")
  )
)

(define-function pixmap_colormap_create_from_xpm_d
  (c-name "gdk_pixmap_colormap_create_from_xpm_d")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkColormap*" "colormap")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("gchar**" "data")
  )
)

(define-function gdk_pixmap_foreign_new
  (c-name "gdk_pixmap_foreign_new")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkNativeWindow" "anid")
  )
)

(define-function gdk_pixmap_lookup
  (c-name "gdk_pixmap_lookup")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkNativeWindow" "anid")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkproperty.h

(define-function gdk_atom_name
  (c-name "gdk_atom_name")
  (return-type "gchar*")
  (parameters
   '("GdkAtom" "atom")
  )
)

(define-function atom_intern
  (c-name "gdk_atom_intern")
  (return-type "GdkAtom")
  (parameters
   '("gchar*" "atom_name")
    '("gboolean" "only_if_exists" (default "FALSE"))
  )
)

(define-method property_get
  (of-object "GdkWindow")
  (c-name "gdk_property_get")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "property")
    '("GdkAtom" "type")
    '("gulong" "offset")
    '("gulong" "length")
    '("gint" "pdelete")
    '("GdkAtom*" "actual_property_type")
    '("gint*" "actual_format")
    '("gint*" "actual_length")
    '("guchar**" "data")
  )
)

(define-method property_change
  (of-object "GdkWindow")
  (c-name "gdk_property_change")
  (return-type "none")
  (parameters
    '("GdkAtom" "property")
    '("GdkAtom" "type")
    '("gint" "format")
    '("GdkPropMode" "mode")
    '("const-guchar*" "data")
    '("gint" "nelements")
  )
)

(define-method property_delete
  (of-object "GdkWindow")
  (c-name "gdk_property_delete")
  (return-type "none")
  (parameters
    '("GdkAtom" "property")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkrgb.h

(define-function rgb_xpixel_from_rgb
  (c-name "gdk_rgb_xpixel_from_rgb")
  (return-type "gulong")
  (parameters
    '("guint32" "rgb")
  )
)

(define-function rgb_gc_set_foreground
  (c-name "gdk_rgb_gc_set_foreground")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("guint32" "rgb")
  )
)

(define-function rgb_gc_set_background
  (c-name "gdk_rgb_gc_set_background")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("guint32" "rgb")
  )
)

(define-method draw_rgb_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "rgb_buf")
    '("gint" "rowstride")
  )
)

(define-method draw_rgb_image_dithalign
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_image_dithalign")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "rgb_buf")
    '("gint" "rowstride")
    '("gint" "xdith")
    '("gint" "ydith")
  )
)

(define-method draw_rgb_32_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_32_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
  )
)

(define-method draw_gray_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_gray_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
  )
)

(define-function rgb_cmap_new
  (c-name "gdk_rgb_cmap_new")
  (return-type "GdkRgbCmap*")
  (parameters
    '("guint32*" "colors")
    '("gint" "n_colors")
  )
)

(define-method draw_indexed_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_indexed_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
    '("GdkRgbCmap*" "cmap")
  )
)

(define-function rgb_ditherable
  (c-name "gdk_rgb_ditherable")
  (return-type "gboolean")
)

(define-function rgb_set_verbose
  (c-name "gdk_rgb_set_verbose")
  (return-type "none")
  (parameters
    '("gboolean" "verbose")
  )
)

(define-function rgb_set_install
  (c-name "gdk_rgb_set_install")
  (return-type "none")
  (parameters
    '("gboolean" "install")
  )
)

(define-function rgb_set_min_colors
  (c-name "gdk_rgb_set_min_colors")
  (return-type "none")
  (parameters
    '("gint" "min_colors")
  )
)

(define-function rgb_get_cmap
  (c-name "gdk_rgb_get_cmap")
  (return-type "GdkColormap*")
)

(define-function rgb_get_visual
  (c-name "gdk_rgb_get_visual")
  (return-type "GdkVisual*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkselection.h

(define-function selection_owner_get
  (c-name "gdk_selection_owner_get")
  (return-type "GdkWindow*")
  (parameters
    '("GdkAtom" "selection")
  )
)

(define-method selection_convert
  (of-object "GdkWindow")
  (c-name "gdk_selection_convert")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint32" "time")
  )
)

(define-method selection_property_get
  (of-object "GdkWindow")
  (c-name "gdk_selection_property_get")
  (return-type "gboolean")
  (parameters
    '("guchar**" "data")
    '("GdkAtom*" "prop_type")
    '("gint*" "prop_format")
  )
)

(define-function selection_send_notify
  (c-name "gdk_selection_send_notify")
  (return-type "none")
  (parameters
    '("guint32" "requestor")
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("GdkAtom" "property")
    '("guint32" "time")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkvisual.h

(define-function visual_get_best_depth
  (c-name "gdk_visual_get_best_depth")
  (return-type "gint")
)

(define-function visual_get_best_type
  (c-name "gdk_visual_get_best_type")
  (return-type "GdkVisualType")
)

(define-function visual_get_system
  (c-name "gdk_visual_get_system")
  (return-type "GdkVisual*")
)

(define-function visual_get_best
  (c-name "gdk_visual_get_best")
  (return-type "GdkVisual*")
)

(define-function visual_get_best_with_depth
  (c-name "gdk_visual_get_best_with_depth")
  (return-type "GdkVisual*")
  (parameters
    '("gint" "depth")
  )
)

(define-function visual_get_best_with_type
  (c-name "gdk_visual_get_best_with_type")
  (return-type "GdkVisual*")
  (parameters
    '("GdkVisualType" "visual_type")
  )
)

(define-function visual_get_best_with_both
  (is-constructor-of GdkVisual)
  (c-name "gdk_visual_get_best_with_both")
  (return-type "GdkVisual*")
  (parameters
    '("gint" "depth")
    '("GdkVisualType" "visual_type")
  )
)

(define-function query_depths
  (c-name "gdk_query_depths")
  (return-type "none")
  (parameters
    '("gint**" "depths")
    '("gint*" "count")
  )
)

(define-function query_visual_types
  (c-name "gdk_query_visual_types")
  (return-type "none")
  (parameters
    '("GdkVisualType**" "visual_types")
    '("gint*" "count")
  )
)

(define-function list_visuals
  (c-name "gdk_list_visuals")
  (return-type "GList*-of-GdkVisual*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkwindow.h

(define-function gdk_window_object_get_type
  (c-name "gdk_window_object_get_type")
  (return-type "GType")
)

(define-function new
  (is-constructor-of GdkWindow)
  (c-name "gdk_window_new")
  (return-type "GdkWindow*")
  (parameters
    '("GdkWindow*" "parent")
    '("GdkWindowAttr*" "attributes")
    '("gint" "attributes_mask")
  )
)

(define-method destroy
  (of-object "GdkWindow")
  (c-name "gdk_window_destroy")
  (return-type "none")
)

(define-method get_window_type
  (of-object "GdkWindow")
  (c-name "gdk_window_get_window_type")
  (return-type "GdkWindowType")
)

(define-function window_at_pointer
  (c-name "gdk_window_at_pointer")
  (return-type "GdkWindow*")
  (parameters
    '("gint*" "win_x")
    '("gint*" "win_y")
  )
)

(define-method show
  (of-object "GdkWindow")
  (c-name "gdk_window_show")
  (return-type "none")
)

(define-method hide
  (of-object "GdkWindow")
  (c-name "gdk_window_hide")
  (return-type "none")
)

(define-method withdraw
  (of-object "GdkWindow")
  (c-name "gdk_window_withdraw")
  (return-type "none")
)

(define-method move
  (of-object "GdkWindow")
  (c-name "gdk_window_move")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method resize
  (of-object "GdkWindow")
  (c-name "gdk_window_resize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method move_resize
  (of-object "GdkWindow")
  (c-name "gdk_window_move_resize")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method reparent
  (of-object "GdkWindow")
  (c-name "gdk_window_reparent")
  (return-type "none")
  (parameters
    '("GdkWindow*" "new_parent")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method clear
  (of-object "GdkWindow")
  (c-name "gdk_window_clear")
  (return-type "none")
)

(define-method clear_area
  (of-object "GdkWindow")
  (c-name "gdk_window_clear_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method clear_area_e
  (of-object "GdkWindow")
  (c-name "gdk_window_clear_area_e")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method raise
  (of-object "GdkWindow")
  (c-name "gdk_window_raise")
  (return-type "none")
)

(define-method lower
  (of-object "GdkWindow")
  (c-name "gdk_window_lower")
  (return-type "none")
)

(define-method focus
  (of-object "GdkWindow")
  (c-name "gdk_window_focus")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method set_user_data
  (of-object "GdkWindow")
  (c-name "gdk_window_set_user_data")
  (return-type "none")
  (parameters
    '("gpointer" "user_data")
  )
)

(define-method set_override_redirect
  (of-object "GdkWindow")
  (c-name "gdk_window_set_override_redirect")
  (return-type "none")
  (parameters
    '("gboolean" "override_redirect")
  )
)

(define-method add_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_add_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method remove_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_remove_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method scroll
  (of-object "GdkWindow")
  (c-name "gdk_window_scroll")
  (return-type "none")
  (parameters
    '("gint" "dx")
    '("gint" "dy")
  )
)

(define-method shape_combine_mask
  (of-object "GdkWindow")
  (c-name "gdk_window_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method set_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_set_child_shapes")
  (return-type "none")
)

(define-method merge_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_merge_child_shapes")
  (return-type "none")
)

(define-method is_visible
  (of-object "GdkWindow")
  (c-name "gdk_window_is_visible")
  (return-type "gboolean")
)

(define-method is_viewable
  (of-object "GdkWindow")
  (c-name "gdk_window_is_viewable")
  (return-type "gboolean")
)

(define-method get_state
  (of-object "GdkWindow")
  (c-name "gdk_window_get_state")
  (return-type "GdkWindowState")
)

(define-method set_static_gravities
  (of-object "GdkWindow")
  (c-name "gdk_window_set_static_gravities")
  (return-type "gboolean")
  (parameters
    '("gboolean" "use_static")
  )
)

(define-function window_foreign_new
  (c-name "gdk_window_foreign_new")
  (return-type "GdkWindow*")
  (parameters
    '("GdkNativeWindow" "anid")
  )
)

(define-function window_lookup
  (c-name "gdk_window_lookup")
  (return-type "GdkWindow*")
  (parameters
    '("GdkNativeWindow" "anid")
  )
)

(define-method set_hints
  (of-object "GdkWindow")
  (c-name "gdk_window_set_hints")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "min_width")
    '("gint" "min_height")
    '("gint" "max_width")
    '("gint" "max_height")
    '("gint" "flags")
  )
)

(define-method set_type_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_type_hint")
  (return-type "none")
  (parameters
    '("GdkWindowTypeHint" "hint")
  )
)

(define-method set_modal_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_modal_hint")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method set_geometry_hints
  (of-object "GdkWindow")
  (c-name "gdk_window_set_geometry_hints")
  (return-type "none")
  (parameters
    '("GdkGeometry*" "geometry")
    '("GdkWindowHints" "flags")
  )
)

(define-function set_sm_client_id
  (c-name "gdk_set_sm_client_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "sm_client_id")
  )
)

(define-method begin_paint_rect
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_paint_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rectangle")
  )
)

(define-method begin_paint_region
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_paint_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method end_paint
  (of-object "GdkWindow")
  (c-name "gdk_window_end_paint")
  (return-type "none")
)

(define-method set_title
  (of-object "GdkWindow")
  (c-name "gdk_window_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_role
  (of-object "GdkWindow")
  (c-name "gdk_window_set_role")
  (return-type "none")
  (parameters
    '("const-gchar*" "role")
  )
)

(define-method set_transient_for
  (of-object "GdkWindow")
  (c-name "gdk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GdkWindow*" "leader")
  )
)

(define-method set_background
  (of-object "GdkWindow")
  (c-name "gdk_window_set_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_back_pixmap
  (of-object "GdkWindow")
  (c-name "gdk_window_set_back_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "pixmap")
    '("gboolean" "parent_relative")
  )
)

(define-method set_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_set_cursor")
  (return-type "none")
  (parameters
    '("GdkCursor*" "cursor" (null-ok))
  )
)

(define-method get_geometry
  (of-object "GdkWindow")
  (c-name "gdk_window_get_geometry")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
    '("gint*" "width")
    '("gint*" "height")
    '("gint*" "depth")
  )
)

(define-method get_position
  (of-object "GdkWindow")
  (c-name "gdk_window_get_position")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_origin")
  (return-type "gint")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_deskrelative_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_deskrelative_origin")
  (return-type "gboolean")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_root_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_root_origin")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_frame_extents
  (of-object "GdkWindow")
  (c-name "gdk_window_get_frame_extents")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rect")
  )
)

(define-method get_pointer
  (of-object "GdkWindow")
  (c-name "gdk_window_get_pointer")
  (return-type "GdkWindow*")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_parent
  (of-object "GdkWindow")
  (c-name "gdk_window_get_parent")
  (return-type "GdkWindow*")
)

(define-method get_toplevel
  (of-object "GdkWindow")
  (c-name "gdk_window_get_toplevel")
  (return-type "GdkWindow*")
)

(define-method get_children
  (of-object "GdkWindow")
  (c-name "gdk_window_get_children")
  (return-type "GList*-of-GdkWindow*")
)

(define-method peek_children
  (of-object "GdkWindow")
  (c-name "gdk_window_peek_children")
  (return-type "GList*-of-GdkWindow*")
)

(define-method get_events
  (of-object "GdkWindow")
  (c-name "gdk_window_get_events")
  (return-type "GdkEventMask")
)

(define-method set_events
  (of-object "GdkWindow")
  (c-name "gdk_window_set_events")
  (return-type "none")
  (parameters
    '("GdkEventMask" "event_mask")
  )
)

(define-method set_icon_list
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_list")
  (return-type "none")
  (parameters
    '("GList*-of-GdkPixbuf*" "pixbufs")
  )
)

(define-method set_icon
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon")
  (return-type "none")
  (parameters
    '("GdkWindow*" "icon_window")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method set_icon_name
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_group
  (of-object "GdkWindow")
  (c-name "gdk_window_set_group")
  (return-type "none")
  (parameters
    '("GdkWindow*" "leader")
  )
)

(define-method set_decorations
  (of-object "GdkWindow")
  (c-name "gdk_window_set_decorations")
  (return-type "none")
  (parameters
    '("GdkWMDecoration" "decorations")
  )
)

(define-method get_decorations
  (of-object "GdkWindow")
  (c-name "gdk_window_get_decorations")
  (return-type "gboolean")
  (parameters
    '("GdkWMDecoration*" "decorations")
  )
)

(define-method set_functions
  (of-object "GdkWindow")
  (c-name "gdk_window_set_functions")
  (return-type "none")
  (parameters
    '("GdkWMFunction" "functions")
  )
)

(define-function window_get_toplevels
  (c-name "gdk_window_get_toplevels")
  (return-type "GList*-of-GdkWindow*")
)

(define-method iconify
  (of-object "GdkWindow")
  (c-name "gdk_window_iconify")
  (return-type "none")
)

(define-method deiconify
  (of-object "GdkWindow")
  (c-name "gdk_window_deiconify")
  (return-type "none")
)

(define-method stick
  (of-object "GdkWindow")
  (c-name "gdk_window_stick")
  (return-type "none")
)

(define-method unstick
  (of-object "GdkWindow")
  (c-name "gdk_window_unstick")
  (return-type "none")
)

(define-method maximize
  (of-object "GdkWindow")
  (c-name "gdk_window_maximize")
  (return-type "none")
)

(define-method unmaximize
  (of-object "GdkWindow")
  (c-name "gdk_window_unmaximize")
  (return-type "none")
)

(define-method register_dnd
  (of-object "GdkWindow")
  (c-name "gdk_window_register_dnd")
  (return-type "none")
)

(define-method begin_resize_drag
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_resize_drag")
  (return-type "none")
  (parameters
    '("GdkWindowEdge" "edge")
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method begin_move_drag
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_move_drag")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method invalidate_rect
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rect")
    '("gboolean" "invalidate_children")
  )
)

(define-method invalidate_region
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
    '("gboolean" "invalidate_children")
  )
)

(define-method invalidate_maybe_recurse
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_maybe_recurse")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
    '("gboolean" "(*child_func")
    '("gpointer" "user_data")
  )
)

(define-method get_update_area
  (of-object "GdkWindow")
  (c-name "gdk_window_get_update_area")
  (return-type "GdkRegion*")
)

(define-method freeze_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_freeze_updates")
  (return-type "none")
)

(define-method thaw_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_thaw_updates")
  (return-type "none")
)

(define-function window_process_all_updates
  (c-name "gdk_window_process_all_updates")
  (return-type "none")
)

(define-method process_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_process_updates")
  (return-type "none")
  (parameters
    '("gboolean" "update_children")
  )
)

(define-function gdk_window_set_debug_updates
  (c-name "gdk_window_set_debug_updates")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-function gdk_window_constrain_size
  (c-name "gdk_window_constrain_size")
  (return-type "none")
  (parameters
    '("GdkGeometry*" "geometry")
    '("guint" "flags")
    '("gint" "width")
    '("gint" "height")
    '("gint*" "new_width")
    '("gint*" "new_height")
  )
)

(define-method get_internal_paint_info
  (of-object "GdkWindow")
  (c-name "gdk_window_get_internal_paint_info")
  (return-type "none")
  (parameters
    '("GdkDrawable**" "real_drawable")
    '("gint*" "x_offset")
    '("gint*" "y_offset")
  )
)

(define-function gdk_set_pointer_hooks
  (c-name "gdk_set_pointer_hooks")
  (return-type "GdkPointerHooks*")
  (parameters
    '("const-GdkPointerHooks*" "new_hooks")
  )
)

(define-function get_default_root_window
  (c-name "gdk_get_default_root_window")
  (return-type "GdkWindow*")
)

(define-function gdk_rectangle_intersect
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_intersect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "src1")
    '("GdkRectangle*" "src2")
    '("GdkRectangle*" "dest")
  )
)

(define-function gdk_rectangle_union
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_union")
  (return-type "void")
  (parameters
    '("GdkRectangle*" "src1")
    '("GdkRectangle*" "src2")
    '("GdkRectangle*" "dest")
  )
)

;; From /usr/include/gtk-2.0/gdk/gdkscreen.h 
(define-method get_number
  (of-object "GdkScreen")		      
  (c-name "gdk_screen_get_number")
  (return-type "gint"))
