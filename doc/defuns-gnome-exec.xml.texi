
@c %start of fragment

@deffn Function gnome-execute-shell  (dir@tie{}@code{mchars}) (commandline@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{int})
Like @code{gnome-execute-async-with-env}, but uses the user's shell to run the
desired program. Note that the pid of the shell is returned, not the pid of the
user's program.

@table @var
@item dir
Directory in which child should be executed, or @samp{@code{#f}} for current
directory

@item commandline
Shell command to execute

@item ret
process id of shell, or @samp{-1} on error.

@end table

@end deffn

@deffn Function gnome-execute-shell-fds  (dir@tie{}@code{mchars}) (commandline@tie{}@code{mchars}) (close_fds@tie{}@code{bool}) @result{}@tie{} (ret@tie{}@code{int})
Like @code{gnome-execute-async-with-env-fds}, but uses the user's shell to run
the desired program. Note that the pid of the shell is returned, not the pid of
the user's program.

@table @var
@item dir
Directory in which child should be executed, or @samp{@code{#f}} for current
directory

@item commandline
Shell command to execute

@item close-fds
Like close_fds in @code{gnome-execute-async-with-env-fds}

@item ret
process id of shell, or @samp{-1} on error.

@end table

@end deffn

@deffn Function gnome-execute-terminal-shell  (dir@tie{}@code{mchars}) (commandline@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{int})
Like @code{<gnome-execute-async>}, except that it runs the terminal as well.
Note that the pid of the terminal is returned, not the pid of the user's
program. If commandline is @samp{@code{#f}}, just the shell is run.

@table @var
@item dir
Directory in which child should be executed, or NULL for current directory

@item commandline
Shell command to execute

@item ret
process id of terminal, or @samp{-1} on error.

@end table

@end deffn

@deffn Function gnome-execute-terminal-shell-fds  (dir@tie{}@code{mchars}) (commandline@tie{}@code{mchars}) (close_fds@tie{}@code{bool}) @result{}@tie{} (ret@tie{}@code{int})
Like @code{gnome-execute-shell-fds}, except that it runs the terminal as well.
Note that the pid of the terminal is returned, not the pid of the user's
program. If commandline is @samp{@code{#f}}, just the shell is run.

@table @var
@item dir
Directory in which child should be executed, or @samp{@code{#f}} for current
directory

@item commandline
Shell command to execute

@item close-fds
Like close_fds in @code{gnome-execute-async-with-env-fds}

@item ret
process id of terminal, or @samp{-1} on error.

@end table

@end deffn


@c %end of fragment
