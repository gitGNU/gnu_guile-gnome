;; -*- scheme -*-
(include type-ignores) (include "glib-types.defs") (include overrides)

;; From /opt/gnome2/include/glib-2.0/glib/galloca.h

(define-function alloca
  (c-name "alloca")
  (return-type "char*")
  (parameters
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/garray.h

(define-function g_array_new
  (c-name "g_array_new")
  (is-constructor-of "GArray")
  (return-type "GArray*")
  (parameters
    '("gboolean" "zero_terminated")
    '("gboolean" "clear_")
    '("guint" "element_size")
  )
)

(define-function g_array_sized_new
  (c-name "g_array_sized_new")
  (is-constructor-of "GArraySized")
  (return-type "GArray*")
  (parameters
    '("gboolean" "zero_terminated")
    '("gboolean" "clear_")
    '("guint" "element_size")
    '("guint" "reserved_size")
  )
)

(define-function g_array_free
  (c-name "g_array_free")
  (return-type "gchar*")
  (parameters
    '("GArray*" "array")
    '("gboolean" "free_segment")
  )
)

(define-function g_array_append_vals
  (c-name "g_array_append_vals")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("gconstpointer" "data")
    '("guint" "len")
  )
)

(define-function g_array_prepend_vals
  (c-name "g_array_prepend_vals")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("gconstpointer" "data")
    '("guint" "len")
  )
)

(define-function g_array_insert_vals
  (c-name "g_array_insert_vals")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("guint" "index_")
    '("gconstpointer" "data")
    '("guint" "len")
  )
)

(define-function g_array_set_size
  (c-name "g_array_set_size")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("guint" "length")
  )
)

(define-function g_array_remove_index
  (c-name "g_array_remove_index")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_array_remove_index_fast
  (c-name "g_array_remove_index_fast")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_array_remove_range
  (c-name "g_array_remove_range")
  (return-type "GArray*")
  (parameters
    '("GArray*" "array")
    '("guint" "index_")
    '("guint" "length")
  )
)

(define-function g_array_sort
  (c-name "g_array_sort")
  (return-type "none")
  (parameters
    '("GArray*" "array")
    '("GCompareFunc" "compare_func")
  )
)

(define-function g_array_sort_with_data
  (c-name "g_array_sort_with_data")
  (return-type "none")
  (parameters
    '("GArray*" "array")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)

(define-function g_ptr_array_new
  (c-name "g_ptr_array_new")
  (is-constructor-of "GPtrArray")
  (return-type "GPtrArray*")
)

(define-function g_ptr_array_sized_new
  (c-name "g_ptr_array_sized_new")
  (is-constructor-of "GPtrArraySized")
  (return-type "GPtrArray*")
  (parameters
    '("guint" "reserved_size")
  )
)

(define-function g_ptr_array_free
  (c-name "g_ptr_array_free")
  (return-type "gpointer*")
  (parameters
    '("GPtrArray*" "array")
    '("gboolean" "free_seg")
  )
)

(define-function g_ptr_array_set_size
  (c-name "g_ptr_array_set_size")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("gint" "length")
  )
)

(define-function g_ptr_array_remove_index
  (c-name "g_ptr_array_remove_index")
  (return-type "gpointer")
  (parameters
    '("GPtrArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_ptr_array_remove_index_fast
  (c-name "g_ptr_array_remove_index_fast")
  (return-type "gpointer")
  (parameters
    '("GPtrArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_ptr_array_remove
  (c-name "g_ptr_array_remove")
  (return-type "gboolean")
  (parameters
    '("GPtrArray*" "array")
    '("gpointer" "data")
  )
)

(define-function g_ptr_array_remove_fast
  (c-name "g_ptr_array_remove_fast")
  (return-type "gboolean")
  (parameters
    '("GPtrArray*" "array")
    '("gpointer" "data")
  )
)

(define-function g_ptr_array_remove_range
  (c-name "g_ptr_array_remove_range")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("guint" "index_")
    '("guint" "length")
  )
)

(define-function g_ptr_array_add
  (c-name "g_ptr_array_add")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("gpointer" "data")
  )
)

(define-function g_ptr_array_sort
  (c-name "g_ptr_array_sort")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("GCompareFunc" "compare_func")
  )
)

(define-function g_ptr_array_sort_with_data
  (c-name "g_ptr_array_sort_with_data")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)

(define-function g_ptr_array_foreach
  (c-name "g_ptr_array_foreach")
  (return-type "none")
  (parameters
    '("GPtrArray*" "array")
    '("GFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_byte_array_new
  (c-name "g_byte_array_new")
  (is-constructor-of "GByteArray")
  (return-type "GByteArray*")
)

(define-function g_byte_array_sized_new
  (c-name "g_byte_array_sized_new")
  (is-constructor-of "GByteArraySized")
  (return-type "GByteArray*")
  (parameters
    '("guint" "reserved_size")
  )
)

(define-function g_byte_array_free
  (c-name "g_byte_array_free")
  (return-type "guint8*")
  (parameters
    '("GByteArray*" "array")
    '("gboolean" "free_segment")
  )
)

(define-function g_byte_array_append
  (c-name "g_byte_array_append")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("const-guint8*" "data")
    '("guint" "len")
  )
)

(define-function g_byte_array_prepend
  (c-name "g_byte_array_prepend")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("const-guint8*" "data")
    '("guint" "len")
  )
)

(define-function g_byte_array_set_size
  (c-name "g_byte_array_set_size")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("guint" "length")
  )
)

(define-function g_byte_array_remove_index
  (c-name "g_byte_array_remove_index")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_byte_array_remove_index_fast
  (c-name "g_byte_array_remove_index_fast")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("guint" "index_")
  )
)

(define-function g_byte_array_remove_range
  (c-name "g_byte_array_remove_range")
  (return-type "GByteArray*")
  (parameters
    '("GByteArray*" "array")
    '("guint" "index_")
    '("guint" "length")
  )
)

(define-function g_byte_array_sort
  (c-name "g_byte_array_sort")
  (return-type "none")
  (parameters
    '("GByteArray*" "array")
    '("GCompareFunc" "compare_func")
  )
)

(define-function g_byte_array_sort_with_data
  (c-name "g_byte_array_sort_with_data")
  (return-type "none")
  (parameters
    '("GByteArray*" "array")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gasyncqueue.h

(define-function g_async_queue_new
  (c-name "g_async_queue_new")
  (is-constructor-of "GAsyncQueue")
  (return-type "GAsyncQueue*")
)

(define-function g_async_queue_lock
  (c-name "g_async_queue_lock")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_unlock
  (c-name "g_async_queue_unlock")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_ref
  (c-name "g_async_queue_ref")
  (return-type "GAsyncQueue*")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_unref
  (c-name "g_async_queue_unref")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_ref_unlocked
  (c-name "g_async_queue_ref_unlocked")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_unref_and_unlock
  (c-name "g_async_queue_unref_and_unlock")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_push
  (c-name "g_async_queue_push")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("gpointer" "data")
  )
)

(define-function g_async_queue_push_unlocked
  (c-name "g_async_queue_push_unlocked")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("gpointer" "data")
  )
)

(define-function g_async_queue_push_sorted
  (c-name "g_async_queue_push_sorted")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("gpointer" "data")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_async_queue_push_sorted_unlocked
  (c-name "g_async_queue_push_sorted_unlocked")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("gpointer" "data")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_async_queue_pop
  (c-name "g_async_queue_pop")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_pop_unlocked
  (c-name "g_async_queue_pop_unlocked")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_try_pop
  (c-name "g_async_queue_try_pop")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_try_pop_unlocked
  (c-name "g_async_queue_try_pop_unlocked")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_timed_pop
  (c-name "g_async_queue_timed_pop")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
    '("GTimeVal*" "end_time")
  )
)

(define-function g_async_queue_timed_pop_unlocked
  (c-name "g_async_queue_timed_pop_unlocked")
  (return-type "gpointer")
  (parameters
    '("GAsyncQueue*" "queue")
    '("GTimeVal*" "end_time")
  )
)

(define-function g_async_queue_length
  (c-name "g_async_queue_length")
  (return-type "gint")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_length_unlocked
  (c-name "g_async_queue_length_unlocked")
  (return-type "gint")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)

(define-function g_async_queue_sort
  (c-name "g_async_queue_sort")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_async_queue_sort_unlocked
  (c-name "g_async_queue_sort_unlocked")
  (return-type "none")
  (parameters
    '("GAsyncQueue*" "queue")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function _g_async_queue_get_mutex
  (c-name "_g_async_queue_get_mutex")
  (return-type "GMutex*")
  (parameters
    '("GAsyncQueue*" "queue")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gatomic.h

(define-function g_atomic_int_exchange_and_add
  (c-name "g_atomic_int_exchange_and_add")
  (return-type "gint")
  (parameters
    '("volatile-gint*" "atomic")
    '("gint" "val")
  )
)

(define-function g_atomic_int_add
  (c-name "g_atomic_int_add")
  (return-type "none")
  (parameters
    '("volatile-gint*" "atomic")
    '("gint" "val")
  )
)

(define-function g_atomic_int_compare_and_exchange
  (c-name "g_atomic_int_compare_and_exchange")
  (return-type "gboolean")
  (parameters
    '("volatile-gint*" "atomic")
    '("gint" "oldval")
    '("gint" "newval")
  )
)

(define-function g_atomic_pointer_compare_and_exchange
  (c-name "g_atomic_pointer_compare_and_exchange")
  (return-type "gboolean")
  (parameters
    '("volatile-gpointer*" "atomic")
    '("gpointer" "oldval")
    '("gpointer" "newval")
  )
)

(define-function g_atomic_int_get
  (c-name "g_atomic_int_get")
  (return-type "gint")
  (parameters
    '("volatile-gint*" "atomic")
  )
)

(define-function g_atomic_int_set
  (c-name "g_atomic_int_set")
  (return-type "none")
  (parameters
    '("volatile-gint*" "atomic")
    '("gint" "newval")
  )
)

(define-function g_atomic_pointer_get
  (c-name "g_atomic_pointer_get")
  (return-type "gpointer")
  (parameters
    '("volatile-gpointer*" "atomic")
  )
)

(define-function g_atomic_pointer_set
  (c-name "g_atomic_pointer_set")
  (return-type "none")
  (parameters
    '("volatile-gpointer*" "atomic")
    '("gpointer" "newval")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gbacktrace.h

(define-function g_on_error_query
  (c-name "g_on_error_query")
  (return-type "none")
  (parameters
    '("const-gchar*" "prg_name")
  )
)

(define-function g_on_error_stack_trace
  (c-name "g_on_error_stack_trace")
  (return-type "none")
  (parameters
    '("const-gchar*" "prg_name")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gbase64.h

(define-function g_base64_encode_step
  (c-name "g_base64_encode_step")
  (return-type "gsize")
  (parameters
    '("const-guchar*" "in")
    '("gsize" "len")
    '("gboolean" "break_lines")
    '("gchar*" "out")
    '("gint*" "state")
    '("gint*" "save")
  )
)

(define-function g_base64_encode_close
  (c-name "g_base64_encode_close")
  (return-type "gsize")
  (parameters
    '("gboolean" "break_lines")
    '("gchar*" "out")
    '("gint*" "state")
    '("gint*" "save")
  )
)

(define-function g_base64_encode
  (c-name "g_base64_encode")
  (return-type "gchar*")
  (parameters
    '("const-guchar*" "data")
    '("gsize" "len")
  )
)

(define-function g_base64_decode_step
  (c-name "g_base64_decode_step")
  (return-type "gsize")
  (parameters
    '("const-gchar*" "in")
    '("gsize" "len")
    '("guchar*" "out")
    '("gint*" "state")
    '("guint*" "save")
  )
)

(define-function g_base64_decode
  (c-name "g_base64_decode")
  (return-type "guchar*")
  (parameters
    '("const-gchar*" "text")
    '("gsize*" "out_len")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gbookmarkfile.h

(define-function g_bookmark_file_error_quark
  (c-name "g_bookmark_file_error_quark")
  (return-type "GQuark")
)

(define-function g_bookmark_file_new
  (c-name "g_bookmark_file_new")
  (is-constructor-of "GBookmarkFile")
  (return-type "GBookmarkFile*")
)

(define-function g_bookmark_file_free
  (c-name "g_bookmark_file_free")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
  )
)

(define-function g_bookmark_file_load_from_file
  (c-name "g_bookmark_file_load_from_file")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_load_from_data
  (c-name "g_bookmark_file_load_from_data")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "data")
    '("gsize" "length")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_load_from_data_dirs
  (c-name "g_bookmark_file_load_from_data_dirs")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "file")
    '("gchar**" "full_path")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_to_data
  (c-name "g_bookmark_file_to_data")
  (return-type "gchar*")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_to_file
  (c-name "g_bookmark_file_to_file")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_title
  (c-name "g_bookmark_file_set_title")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "title")
  )
)

(define-function g_bookmark_file_get_title
  (c-name "g_bookmark_file_get_title")
  (return-type "gchar*")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_description
  (c-name "g_bookmark_file_set_description")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "description")
  )
)

(define-function g_bookmark_file_get_description
  (c-name "g_bookmark_file_get_description")
  (return-type "gchar*")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_mime_type
  (c-name "g_bookmark_file_set_mime_type")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "mime_type")
  )
)

(define-function g_bookmark_file_get_mime_type
  (c-name "g_bookmark_file_get_mime_type")
  (return-type "gchar*")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_groups
  (c-name "g_bookmark_file_set_groups")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar**" "groups")
    '("gsize" "length")
  )
)

(define-function g_bookmark_file_add_group
  (c-name "g_bookmark_file_add_group")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "group")
  )
)

(define-function g_bookmark_file_has_group
  (c-name "g_bookmark_file_has_group")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "group")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_get_groups
  (c-name "g_bookmark_file_get_groups")
  (return-type "gchar**")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_add_application
  (c-name "g_bookmark_file_add_application")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "name")
    '("const-gchar*" "exec")
  )
)

(define-function g_bookmark_file_has_application
  (c-name "g_bookmark_file_has_application")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "name")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_get_applications
  (c-name "g_bookmark_file_get_applications")
  (return-type "gchar**")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_app_info
  (c-name "g_bookmark_file_set_app_info")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "name")
    '("const-gchar*" "exec")
    '("gint" "count")
    '("time_t" "stamp")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_get_app_info
  (c-name "g_bookmark_file_get_app_info")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "name")
    '("gchar**" "exec")
    '("guint*" "count")
    '("time_t*" "stamp")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_is_private
  (c-name "g_bookmark_file_set_is_private")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("gboolean" "is_private")
  )
)

(define-function g_bookmark_file_get_is_private
  (c-name "g_bookmark_file_get_is_private")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_icon
  (c-name "g_bookmark_file_set_icon")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "href")
    '("const-gchar*" "mime_type")
  )
)

(define-function g_bookmark_file_get_icon
  (c-name "g_bookmark_file_get_icon")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("gchar**" "href")
    '("gchar**" "mime_type")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_added
  (c-name "g_bookmark_file_set_added")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("time_t" "added")
  )
)

(define-function g_bookmark_file_get_added
  (c-name "g_bookmark_file_get_added")
  (return-type "time_t")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_modified
  (c-name "g_bookmark_file_set_modified")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("time_t" "modified")
  )
)

(define-function g_bookmark_file_get_modified
  (c-name "g_bookmark_file_get_modified")
  (return-type "time_t")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_set_visited
  (c-name "g_bookmark_file_set_visited")
  (return-type "none")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("time_t" "visited")
  )
)

(define-function g_bookmark_file_get_visited
  (c-name "g_bookmark_file_get_visited")
  (return-type "time_t")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_has_item
  (c-name "g_bookmark_file_has_item")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
  )
)

(define-function g_bookmark_file_get_size
  (c-name "g_bookmark_file_get_size")
  (return-type "gint")
  (parameters
    '("GBookmarkFile*" "bookmark")
  )
)

(define-function g_bookmark_file_get_uris
  (c-name "g_bookmark_file_get_uris")
  (return-type "gchar**")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("gsize*" "length")
  )
)

(define-function g_bookmark_file_remove_group
  (c-name "g_bookmark_file_remove_group")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "group")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_remove_application
  (c-name "g_bookmark_file_remove_application")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("const-gchar*" "name")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_remove_item
  (c-name "g_bookmark_file_remove_item")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-function g_bookmark_file_move_item
  (c-name "g_bookmark_file_move_item")
  (return-type "gboolean")
  (parameters
    '("GBookmarkFile*" "bookmark")
    '("const-gchar*" "old_uri")
    '("const-gchar*" "new_uri")
    '("GError**" "error")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gcache.h

(define-function g_cache_new
  (c-name "g_cache_new")
  (is-constructor-of "GCache")
  (return-type "GCache*")
  (parameters
    '("GCacheNewFunc" "value_new_func")
    '("GCacheDestroyFunc" "value_destroy_func")
    '("GCacheDupFunc" "key_dup_func")
    '("GCacheDestroyFunc" "key_destroy_func")
    '("GHashFunc" "hash_key_func")
    '("GHashFunc" "hash_value_func")
    '("GEqualFunc" "key_equal_func")
  )
)

(define-function g_cache_destroy
  (c-name "g_cache_destroy")
  (return-type "none")
  (parameters
    '("GCache*" "cache")
  )
)

(define-function g_cache_insert
  (c-name "g_cache_insert")
  (return-type "gpointer")
  (parameters
    '("GCache*" "cache")
    '("gpointer" "key")
  )
)

(define-function g_cache_remove
  (c-name "g_cache_remove")
  (return-type "none")
  (parameters
    '("GCache*" "cache")
    '("gconstpointer" "value")
  )
)

(define-function g_cache_key_foreach
  (c-name "g_cache_key_foreach")
  (return-type "none")
  (parameters
    '("GCache*" "cache")
    '("GHFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_cache_value_foreach
  (c-name "g_cache_value_foreach")
  (return-type "none")
  (parameters
    '("GCache*" "cache")
    '("GHFunc" "func")
    '("gpointer" "user_data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gcompletion.h

(define-function g_completion_new
  (c-name "g_completion_new")
  (is-constructor-of "GCompletion")
  (return-type "GCompletion*")
  (parameters
    '("GCompletionFunc" "func")
  )
)

(define-function g_completion_add_items
  (c-name "g_completion_add_items")
  (return-type "none")
  (parameters
    '("GCompletion*" "cmp")
    '("GList*" "items")
  )
)

(define-function g_completion_remove_items
  (c-name "g_completion_remove_items")
  (return-type "none")
  (parameters
    '("GCompletion*" "cmp")
    '("GList*" "items")
  )
)

(define-function g_completion_clear_items
  (c-name "g_completion_clear_items")
  (return-type "none")
  (parameters
    '("GCompletion*" "cmp")
  )
)

(define-function g_completion_complete
  (c-name "g_completion_complete")
  (return-type "GList*")
  (parameters
    '("GCompletion*" "cmp")
    '("const-gchar*" "prefix")
    '("gchar**" "new_prefix")
  )
)

(define-function g_completion_complete_utf8
  (c-name "g_completion_complete_utf8")
  (return-type "GList*")
  (parameters
    '("GCompletion*" "cmp")
    '("const-gchar*" "prefix")
    '("gchar**" "new_prefix")
  )
)

(define-function g_completion_set_compare
  (c-name "g_completion_set_compare")
  (return-type "none")
  (parameters
    '("GCompletion*" "cmp")
    '("GCompletionStrncmpFunc" "strncmp_func")
  )
)

(define-function g_completion_free
  (c-name "g_completion_free")
  (return-type "none")
  (parameters
    '("GCompletion*" "cmp")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gconvert.h

(define-function g_convert_error_quark
  (c-name "g_convert_error_quark")
  (return-type "GQuark")
)

(define-function g_iconv_open
  (c-name "g_iconv_open")
  (return-type "GIConv")
  (parameters
    '("const-gchar*" "to_codeset")
    '("const-gchar*" "from_codeset")
  )
)

(define-function g_iconv
  (c-name "g_iconv")
  (return-type "size_t")
  (parameters
    '("GIConv" "converter")
    '("gchar**" "inbuf")
    '("gsize*" "inbytes_left")
    '("gchar**" "outbuf")
    '("gsize*" "outbytes_left")
  )
)

(define-function g_iconv_close
  (c-name "g_iconv_close")
  (return-type "gint")
  (parameters
    '("GIConv" "converter")
  )
)

(define-function g_convert
  (c-name "g_convert")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
    '("const-gchar*" "to_codeset")
    '("const-gchar*" "from_codeset")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_convert_with_iconv
  (c-name "g_convert_with_iconv")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
    '("GIConv" "converter")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_convert_with_fallback
  (c-name "g_convert_with_fallback")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
    '("const-gchar*" "to_codeset")
    '("const-gchar*" "from_codeset")
    '("gchar*" "fallback")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_locale_to_utf8
  (c-name "g_locale_to_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "opsysstring")
    '("gssize" "len")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_locale_from_utf8
  (c-name "g_locale_from_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "utf8string")
    '("gssize" "len")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_filename_to_utf8
  (c-name "g_filename_to_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "opsysstring")
    '("gssize" "len")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_filename_from_utf8
  (c-name "g_filename_from_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "utf8string")
    '("gssize" "len")
    '("gsize*" "bytes_read")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_filename_from_uri
  (c-name "g_filename_from_uri")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "uri")
    '("gchar**" "hostname")
    '("GError**" "error")
  )
)

(define-function g_filename_to_uri
  (c-name "g_filename_to_uri")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "hostname")
    '("GError**" "error")
  )
)

(define-function g_filename_display_name
  (c-name "g_filename_display_name")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_get_filename_charsets
  (c-name "g_get_filename_charsets")
  (return-type "gboolean")
  (parameters
    '("const-gchar***" "charsets")
  )
)

(define-function g_filename_display_basename
  (c-name "g_filename_display_basename")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_uri_list_extract_uris
  (c-name "g_uri_list_extract_uris")
  (return-type "gchar**")
  (parameters
    '("const-gchar*" "uri_list")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gdataset.h

(define-function g_datalist_init
  (c-name "g_datalist_init")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
  )
)

(define-function g_datalist_clear
  (c-name "g_datalist_clear")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
  )
)

(define-function g_datalist_id_get_data
  (c-name "g_datalist_id_get_data")
  (return-type "gpointer")
  (parameters
    '("GData**" "datalist")
    '("GQuark" "key_id")
  )
)

(define-function g_datalist_id_set_data_full
  (c-name "g_datalist_id_set_data_full")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
    '("GQuark" "key_id")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_func")
  )
)

(define-function g_datalist_id_remove_no_notify
  (c-name "g_datalist_id_remove_no_notify")
  (return-type "gpointer")
  (parameters
    '("GData**" "datalist")
    '("GQuark" "key_id")
  )
)

(define-function g_datalist_foreach
  (c-name "g_datalist_foreach")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
    '("GDataForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_datalist_set_flags
  (c-name "g_datalist_set_flags")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
    '("guint" "flags")
  )
)

(define-function g_datalist_unset_flags
  (c-name "g_datalist_unset_flags")
  (return-type "none")
  (parameters
    '("GData**" "datalist")
    '("guint" "flags")
  )
)

(define-function g_datalist_get_flags
  (c-name "g_datalist_get_flags")
  (return-type "guint")
  (parameters
    '("GData**" "datalist")
  )
)

(define-function g_dataset_destroy
  (c-name "g_dataset_destroy")
  (return-type "none")
  (parameters
    '("gconstpointer" "dataset_location")
  )
)

(define-function g_dataset_id_get_data
  (c-name "g_dataset_id_get_data")
  (return-type "gpointer")
  (parameters
    '("gconstpointer" "dataset_location")
    '("GQuark" "key_id")
  )
)

(define-function g_dataset_id_set_data_full
  (c-name "g_dataset_id_set_data_full")
  (return-type "none")
  (parameters
    '("gconstpointer" "dataset_location")
    '("GQuark" "key_id")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_func")
  )
)

(define-function g_dataset_id_remove_no_notify
  (c-name "g_dataset_id_remove_no_notify")
  (return-type "gpointer")
  (parameters
    '("gconstpointer" "dataset_location")
    '("GQuark" "key_id")
  )
)

(define-function g_dataset_foreach
  (c-name "g_dataset_foreach")
  (return-type "none")
  (parameters
    '("gconstpointer" "dataset_location")
    '("GDataForeachFunc" "func")
    '("gpointer" "user_data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gdate.h

(define-function g_date_new
  (c-name "g_date_new")
  (is-constructor-of "GDate")
  (return-type "GDate*")
)

(define-function g_date_new_dmy
  (c-name "g_date_new_dmy")
  (return-type "GDate*")
  (parameters
    '("GDateDay" "day")
    '("GDateMonth" "month")
    '("GDateYear" "year")
  )
)

(define-function g_date_new_julian
  (c-name "g_date_new_julian")
  (return-type "GDate*")
  (parameters
    '("guint32" "julian_day")
  )
)

(define-function g_date_free
  (c-name "g_date_free")
  (return-type "none")
  (parameters
    '("GDate*" "date")
  )
)

(define-function g_date_valid
  (c-name "g_date_valid")
  (return-type "gboolean")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_valid_day
  (c-name "g_date_valid_day")
  (return-type "gboolean")
  (parameters
    '("GDateDay" "day")
  )
)

(define-function g_date_valid_month
  (c-name "g_date_valid_month")
  (return-type "gboolean")
  (parameters
    '("GDateMonth" "month")
  )
)

(define-function g_date_valid_year
  (c-name "g_date_valid_year")
  (return-type "gboolean")
  (parameters
    '("GDateYear" "year")
  )
)

(define-function g_date_valid_weekday
  (c-name "g_date_valid_weekday")
  (return-type "gboolean")
  (parameters
    '("GDateWeekday" "weekday")
  )
)

(define-function g_date_valid_julian
  (c-name "g_date_valid_julian")
  (return-type "gboolean")
  (parameters
    '("guint32" "julian_date")
  )
)

(define-function g_date_valid_dmy
  (c-name "g_date_valid_dmy")
  (return-type "gboolean")
  (parameters
    '("GDateDay" "day")
    '("GDateMonth" "month")
    '("GDateYear" "year")
  )
)

(define-function g_date_get_weekday
  (c-name "g_date_get_weekday")
  (return-type "GDateWeekday")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_month
  (c-name "g_date_get_month")
  (return-type "GDateMonth")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_year
  (c-name "g_date_get_year")
  (return-type "GDateYear")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_day
  (c-name "g_date_get_day")
  (return-type "GDateDay")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_julian
  (c-name "g_date_get_julian")
  (return-type "guint32")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_day_of_year
  (c-name "g_date_get_day_of_year")
  (return-type "guint")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_monday_week_of_year
  (c-name "g_date_get_monday_week_of_year")
  (return-type "guint")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_sunday_week_of_year
  (c-name "g_date_get_sunday_week_of_year")
  (return-type "guint")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_get_iso8601_week_of_year
  (c-name "g_date_get_iso8601_week_of_year")
  (return-type "guint")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_clear
  (c-name "g_date_clear")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_dates")
  )
)

(define-function g_date_set_parse
  (c-name "g_date_set_parse")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("const-gchar*" "str")
  )
)

(define-function g_date_set_time_t
  (c-name "g_date_set_time_t")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("time_t" "timet")
  )
)

(define-function g_date_set_time_val
  (c-name "g_date_set_time_val")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GTimeVal*" "timeval")
  )
)

(define-function g_date_set_time
  (c-name "g_date_set_time")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GTime" "time_")
  )
)

(define-function g_date_set_month
  (c-name "g_date_set_month")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GDateMonth" "month")
  )
)

(define-function g_date_set_day
  (c-name "g_date_set_day")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GDateDay" "day")
  )
)

(define-function g_date_set_year
  (c-name "g_date_set_year")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GDateYear" "year")
  )
)

(define-function g_date_set_dmy
  (c-name "g_date_set_dmy")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("GDateDay" "day")
    '("GDateMonth" "month")
    '("GDateYear" "y")
  )
)

(define-function g_date_set_julian
  (c-name "g_date_set_julian")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint32" "julian_date")
  )
)

(define-function g_date_is_first_of_month
  (c-name "g_date_is_first_of_month")
  (return-type "gboolean")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_is_last_of_month
  (c-name "g_date_is_last_of_month")
  (return-type "gboolean")
  (parameters
    '("const-GDate*" "date")
  )
)

(define-function g_date_add_days
  (c-name "g_date_add_days")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_days")
  )
)

(define-function g_date_subtract_days
  (c-name "g_date_subtract_days")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_days")
  )
)

(define-function g_date_add_months
  (c-name "g_date_add_months")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_months")
  )
)

(define-function g_date_subtract_months
  (c-name "g_date_subtract_months")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_months")
  )
)

(define-function g_date_add_years
  (c-name "g_date_add_years")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_years")
  )
)

(define-function g_date_subtract_years
  (c-name "g_date_subtract_years")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("guint" "n_years")
  )
)

(define-function g_date_is_leap_year
  (c-name "g_date_is_leap_year")
  (return-type "gboolean")
  (parameters
    '("GDateYear" "year")
  )
)

(define-function g_date_get_days_in_month
  (c-name "g_date_get_days_in_month")
  (return-type "guint8")
  (parameters
    '("GDateMonth" "month")
    '("GDateYear" "year")
  )
)

(define-function g_date_get_monday_weeks_in_year
  (c-name "g_date_get_monday_weeks_in_year")
  (return-type "guint8")
  (parameters
    '("GDateYear" "year")
  )
)

(define-function g_date_get_sunday_weeks_in_year
  (c-name "g_date_get_sunday_weeks_in_year")
  (return-type "guint8")
  (parameters
    '("GDateYear" "year")
  )
)

(define-function g_date_days_between
  (c-name "g_date_days_between")
  (return-type "gint")
  (parameters
    '("const-GDate*" "date1")
    '("const-GDate*" "date2")
  )
)

(define-function g_date_compare
  (c-name "g_date_compare")
  (return-type "gint")
  (parameters
    '("const-GDate*" "lhs")
    '("const-GDate*" "rhs")
  )
)

(define-function g_date_to_struct_tm
  (c-name "g_date_to_struct_tm")
  (return-type "none")
  (parameters
    '("const-GDate*" "date")
    '("struct-tm*" "tm")
  )
)

(define-function g_date_clamp
  (c-name "g_date_clamp")
  (return-type "none")
  (parameters
    '("GDate*" "date")
    '("const-GDate*" "min_date")
    '("const-GDate*" "max_date")
  )
)

(define-function g_date_order
  (c-name "g_date_order")
  (return-type "none")
  (parameters
    '("GDate*" "date1")
    '("GDate*" "date2")
  )
)

(define-function g_date_strftime
  (c-name "g_date_strftime")
  (return-type "gsize")
  (parameters
    '("gchar*" "s")
    '("gsize" "slen")
    '("const-gchar*" "format")
    '("const-GDate*" "date")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gdir.h

(define-function g_dir_open
  (c-name "g_dir_open")
  (return-type "GDir*")
  (parameters
    '("const-gchar*" "path")
    '("guint" "flags")
    '("GError**" "error")
  )
)

(define-function g_dir_read_name
  (c-name "g_dir_read_name")
  (return-type "const-gchar*")
  (parameters
    '("GDir*" "dir")
  )
)

(define-function g_dir_rewind
  (c-name "g_dir_rewind")
  (return-type "none")
  (parameters
    '("GDir*" "dir")
  )
)

(define-function g_dir_close
  (c-name "g_dir_close")
  (return-type "none")
  (parameters
    '("GDir*" "dir")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gerror.h

(define-function g_error_new
  (c-name "g_error_new")
  (is-constructor-of "GError")
  (return-type "GError*")
  (parameters
    '("GQuark" "domain")
    '("gint" "code")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_error_new_literal
  (c-name "g_error_new_literal")
  (return-type "GError*")
  (parameters
    '("GQuark" "domain")
    '("gint" "code")
    '("const-gchar*" "message")
  )
)

(define-function g_error_free
  (c-name "g_error_free")
  (return-type "none")
  (parameters
    '("GError*" "error")
  )
)

(define-function g_error_copy
  (c-name "g_error_copy")
  (return-type "GError*")
  (parameters
    '("const-GError*" "error")
  )
)

(define-function g_error_matches
  (c-name "g_error_matches")
  (return-type "gboolean")
  (parameters
    '("const-GError*" "error")
    '("GQuark" "domain")
    '("gint" "code")
  )
)

(define-function g_set_error
  (c-name "g_set_error")
  (return-type "none")
  (parameters
    '("GError**" "err")
    '("GQuark" "domain")
    '("gint" "code")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_propagate_error
  (c-name "g_propagate_error")
  (return-type "none")
  (parameters
    '("GError**" "dest")
    '("GError*" "src")
  )
)

(define-function g_clear_error
  (c-name "g_clear_error")
  (return-type "none")
  (parameters
    '("GError**" "err")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gfileutils.h

(define-function g_file_error_quark
  (c-name "g_file_error_quark")
  (return-type "GQuark")
)

(define-function g_file_error_from_errno
  (c-name "g_file_error_from_errno")
  (return-type "GFileError")
  (parameters
    '("gint" "err_no")
  )
)

(define-function g_file_test
  (c-name "g_file_test")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("GFileTest" "test")
  )
)

(define-function g_file_get_contents
  (c-name "g_file_get_contents")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("gchar**" "contents")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_file_set_contents
  (c-name "g_file_set_contents")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "contents")
    '("gssize" "length")
    '("GError**" "error")
  )
)

(define-function g_file_read_link
  (c-name "g_file_read_link")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)

(define-function g_mkstemp
  (c-name "g_mkstemp")
  (return-type "gint")
  (parameters
    '("gchar*" "tmpl")
  )
)

(define-function g_file_open_tmp
  (c-name "g_file_open_tmp")
  (return-type "gint")
  (parameters
    '("const-gchar*" "tmpl")
    '("gchar**" "name_used")
    '("GError**" "error")
  )
)

(define-function g_build_path
  (c-name "g_build_path")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "separator")
    '("const-gchar*" "first_element")
  )
  (varargs #t)
)

(define-function g_build_pathv
  (c-name "g_build_pathv")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "separator")
    '("gchar**" "args")
  )
)

(define-function g_build_filename
  (c-name "g_build_filename")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "first_element")
  )
  (varargs #t)
)

(define-function g_build_filenamev
  (c-name "g_build_filenamev")
  (return-type "gchar*")
  (parameters
    '("gchar**" "args")
  )
)

(define-function g_mkdir_with_parents
  (c-name "g_mkdir_with_parents")
  (return-type "int")
  (parameters
    '("const-gchar*" "pathname")
    '("int" "mode")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/ghash.h

(define-function g_hash_table_new
  (c-name "g_hash_table_new")
  (is-constructor-of "GHashTable")
  (return-type "GHashTable*")
  (parameters
    '("GHashFunc" "hash_func")
    '("GEqualFunc" "key_equal_func")
  )
)

(define-function g_hash_table_new_full
  (c-name "g_hash_table_new_full")
  (return-type "GHashTable*")
  (parameters
    '("GHashFunc" "hash_func")
    '("GEqualFunc" "key_equal_func")
    '("GDestroyNotify" "key_destroy_func")
    '("GDestroyNotify" "value_destroy_func")
  )
)

(define-function g_hash_table_destroy
  (c-name "g_hash_table_destroy")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_hash_table_insert
  (c-name "g_hash_table_insert")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
    '("gpointer" "key")
    '("gpointer" "value")
  )
)

(define-function g_hash_table_replace
  (c-name "g_hash_table_replace")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
    '("gpointer" "key")
    '("gpointer" "value")
  )
)

(define-function g_hash_table_remove
  (c-name "g_hash_table_remove")
  (return-type "gboolean")
  (parameters
    '("GHashTable*" "hash_table")
    '("gconstpointer" "key")
  )
)

(define-function g_hash_table_remove_all
  (c-name "g_hash_table_remove_all")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_hash_table_steal
  (c-name "g_hash_table_steal")
  (return-type "gboolean")
  (parameters
    '("GHashTable*" "hash_table")
    '("gconstpointer" "key")
  )
)

(define-function g_hash_table_steal_all
  (c-name "g_hash_table_steal_all")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_hash_table_lookup
  (c-name "g_hash_table_lookup")
  (return-type "gpointer")
  (parameters
    '("GHashTable*" "hash_table")
    '("gconstpointer" "key")
  )
)

(define-function g_hash_table_lookup_extended
  (c-name "g_hash_table_lookup_extended")
  (return-type "gboolean")
  (parameters
    '("GHashTable*" "hash_table")
    '("gconstpointer" "lookup_key")
    '("gpointer*" "orig_key")
    '("gpointer*" "value")
  )
)

(define-function g_hash_table_foreach
  (c-name "g_hash_table_foreach")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
    '("GHFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_hash_table_find
  (c-name "g_hash_table_find")
  (return-type "gpointer")
  (parameters
    '("GHashTable*" "hash_table")
    '("GHRFunc" "predicate")
    '("gpointer" "user_data")
  )
)

(define-function g_hash_table_foreach_remove
  (c-name "g_hash_table_foreach_remove")
  (return-type "guint")
  (parameters
    '("GHashTable*" "hash_table")
    '("GHRFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_hash_table_foreach_steal
  (c-name "g_hash_table_foreach_steal")
  (return-type "guint")
  (parameters
    '("GHashTable*" "hash_table")
    '("GHRFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_hash_table_size
  (c-name "g_hash_table_size")
  (return-type "guint")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_hash_table_ref
  (c-name "g_hash_table_ref")
  (return-type "GHashTable*")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_hash_table_unref
  (c-name "g_hash_table_unref")
  (return-type "none")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function g_str_equal
  (c-name "g_str_equal")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "v1")
    '("gconstpointer" "v2")
  )
)

(define-function g_str_hash
  (c-name "g_str_hash")
  (return-type "guint")
  (parameters
    '("gconstpointer" "v")
  )
)

(define-function g_int_equal
  (c-name "g_int_equal")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "v1")
    '("gconstpointer" "v2")
  )
)

(define-function g_int_hash
  (c-name "g_int_hash")
  (return-type "guint")
  (parameters
    '("gconstpointer" "v")
  )
)

(define-function g_direct_hash
  (c-name "g_direct_hash")
  (return-type "guint")
  (parameters
    '("gconstpointer" "v")
  )
)

(define-function g_direct_equal
  (c-name "g_direct_equal")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "v1")
    '("gconstpointer" "v2")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/ghook.h

(define-function g_hook_list_init
  (c-name "g_hook_list_init")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("guint" "hook_size")
  )
)

(define-function g_hook_list_clear
  (c-name "g_hook_list_clear")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
  )
)

(define-function g_hook_alloc
  (c-name "g_hook_alloc")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
  )
)

(define-function g_hook_free
  (c-name "g_hook_free")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
  )
)

(define-function g_hook_ref
  (c-name "g_hook_ref")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
  )
)

(define-function g_hook_unref
  (c-name "g_hook_unref")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
  )
)

(define-function g_hook_destroy
  (c-name "g_hook_destroy")
  (return-type "gboolean")
  (parameters
    '("GHookList*" "hook_list")
    '("gulong" "hook_id")
  )
)

(define-function g_hook_destroy_link
  (c-name "g_hook_destroy_link")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
  )
)

(define-function g_hook_prepend
  (c-name "g_hook_prepend")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
  )
)

(define-function g_hook_insert_before
  (c-name "g_hook_insert_before")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "sibling")
    '("GHook*" "hook")
  )
)

(define-function g_hook_insert_sorted
  (c-name "g_hook_insert_sorted")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
    '("GHookCompareFunc" "func")
  )
)

(define-function g_hook_get
  (c-name "g_hook_get")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gulong" "hook_id")
  )
)

(define-function g_hook_find
  (c-name "g_hook_find")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "need_valids")
    '("GHookFindFunc" "func")
    '("gpointer" "data")
  )
)

(define-function g_hook_find_data
  (c-name "g_hook_find_data")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "need_valids")
    '("gpointer" "data")
  )
)

(define-function g_hook_find_func
  (c-name "g_hook_find_func")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "need_valids")
    '("gpointer" "func")
  )
)

(define-function g_hook_find_func_data
  (c-name "g_hook_find_func_data")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "need_valids")
    '("gpointer" "func")
    '("gpointer" "data")
  )
)

(define-function g_hook_first_valid
  (c-name "g_hook_first_valid")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "may_be_in_call")
  )
)

(define-function g_hook_next_valid
  (c-name "g_hook_next_valid")
  (return-type "GHook*")
  (parameters
    '("GHookList*" "hook_list")
    '("GHook*" "hook")
    '("gboolean" "may_be_in_call")
  )
)

(define-function g_hook_compare_ids
  (c-name "g_hook_compare_ids")
  (return-type "gint")
  (parameters
    '("GHook*" "new_hook")
    '("GHook*" "sibling")
  )
)

(define-function g_hook_list_invoke
  (c-name "g_hook_list_invoke")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "may_recurse")
  )
)

(define-function g_hook_list_invoke_check
  (c-name "g_hook_list_invoke_check")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "may_recurse")
  )
)

(define-function g_hook_list_marshal
  (c-name "g_hook_list_marshal")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "may_recurse")
    '("GHookMarshaller" "marshaller")
    '("gpointer" "marshal_data")
  )
)

(define-function g_hook_list_marshal_check
  (c-name "g_hook_list_marshal_check")
  (return-type "none")
  (parameters
    '("GHookList*" "hook_list")
    '("gboolean" "may_recurse")
    '("GHookCheckMarshaller" "marshaller")
    '("gpointer" "marshal_data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gi18n.h



;; From /opt/gnome2/include/glib-2.0/glib/gi18n-lib.h



;; From /opt/gnome2/include/glib-2.0/glib/giochannel.h

(define-function g_io_channel_init
  (c-name "g_io_channel_init")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_ref
  (c-name "g_io_channel_ref")
  (return-type "GIOChannel*")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_unref
  (c-name "g_io_channel_unref")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_read
  (c-name "g_io_channel_read")
  (return-type "GIOError")
  (parameters
    '("GIOChannel*" "channel")
    '("gchar*" "buf")
    '("gsize" "count")
    '("gsize*" "bytes_read")
  )
)

(define-function g_io_channel_write
  (c-name "g_io_channel_write")
  (return-type "GIOError")
  (parameters
    '("GIOChannel*" "channel")
    '("const-gchar*" "buf")
    '("gsize" "count")
    '("gsize*" "bytes_written")
  )
)

(define-function g_io_channel_seek
  (c-name "g_io_channel_seek")
  (return-type "GIOError")
  (parameters
    '("GIOChannel*" "channel")
    '("gint64" "offset")
    '("GSeekType" "type")
  )
)

(define-function g_io_channel_close
  (c-name "g_io_channel_close")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_shutdown
  (c-name "g_io_channel_shutdown")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gboolean" "flush")
    '("GError**" "err")
  )
)

(define-function g_io_add_watch_full
  (c-name "g_io_add_watch_full")
  (return-type "guint")
  (parameters
    '("GIOChannel*" "channel")
    '("gint" "priority")
    '("GIOCondition" "condition")
    '("GIOFunc" "func")
    '("gpointer" "user_data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_io_create_watch
  (c-name "g_io_create_watch")
  (return-type "GSource*")
  (parameters
    '("GIOChannel*" "channel")
    '("GIOCondition" "condition")
  )
)

(define-function g_io_add_watch
  (c-name "g_io_add_watch")
  (return-type "guint")
  (parameters
    '("GIOChannel*" "channel")
    '("GIOCondition" "condition")
    '("GIOFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_io_channel_set_buffer_size
  (c-name "g_io_channel_set_buffer_size")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
    '("gsize" "size")
  )
)

(define-function g_io_channel_get_buffer_size
  (c-name "g_io_channel_get_buffer_size")
  (return-type "gsize")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_get_buffer_condition
  (c-name "g_io_channel_get_buffer_condition")
  (return-type "GIOCondition")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_set_flags
  (c-name "g_io_channel_set_flags")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("GIOFlags" "flags")
    '("GError**" "error")
  )
)

(define-function g_io_channel_get_flags
  (c-name "g_io_channel_get_flags")
  (return-type "GIOFlags")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_set_line_term
  (c-name "g_io_channel_set_line_term")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
    '("const-gchar*" "line_term")
    '("gint" "length")
  )
)

(define-function g_io_channel_get_line_term
  (c-name "g_io_channel_get_line_term")
  (return-type "const-gchar*")
  (parameters
    '("GIOChannel*" "channel")
    '("gint*" "length")
  )
)

(define-function g_io_channel_set_buffered
  (c-name "g_io_channel_set_buffered")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
    '("gboolean" "buffered")
  )
)

(define-function g_io_channel_get_buffered
  (c-name "g_io_channel_get_buffered")
  (return-type "gboolean")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_set_encoding
  (c-name "g_io_channel_set_encoding")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("const-gchar*" "encoding")
    '("GError**" "error")
  )
)

(define-function g_io_channel_get_encoding
  (c-name "g_io_channel_get_encoding")
  (return-type "const-gchar*")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_set_close_on_unref
  (c-name "g_io_channel_set_close_on_unref")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
    '("gboolean" "do_close")
  )
)

(define-function g_io_channel_get_close_on_unref
  (c-name "g_io_channel_get_close_on_unref")
  (return-type "gboolean")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_flush
  (c-name "g_io_channel_flush")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("GError**" "error")
  )
)

(define-function g_io_channel_read_line
  (c-name "g_io_channel_read_line")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gchar**" "str_return")
    '("gsize*" "length")
    '("gsize*" "terminator_pos")
    '("GError**" "error")
  )
)

(define-function g_io_channel_read_line_string
  (c-name "g_io_channel_read_line_string")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("GString*" "buffer")
    '("gsize*" "terminator_pos")
    '("GError**" "error")
  )
)

(define-function g_io_channel_read_to_end
  (c-name "g_io_channel_read_to_end")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gchar**" "str_return")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_io_channel_read_chars
  (c-name "g_io_channel_read_chars")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gchar*" "buf")
    '("gsize" "count")
    '("gsize*" "bytes_read")
    '("GError**" "error")
  )
)

(define-function g_io_channel_read_unichar
  (c-name "g_io_channel_read_unichar")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gunichar*" "thechar")
    '("GError**" "error")
  )
)

(define-function g_io_channel_write_chars
  (c-name "g_io_channel_write_chars")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("const-gchar*" "buf")
    '("gssize" "count")
    '("gsize*" "bytes_written")
    '("GError**" "error")
  )
)

(define-function g_io_channel_write_unichar
  (c-name "g_io_channel_write_unichar")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gunichar" "thechar")
    '("GError**" "error")
  )
)

(define-function g_io_channel_seek_position
  (c-name "g_io_channel_seek_position")
  (return-type "GIOStatus")
  (parameters
    '("GIOChannel*" "channel")
    '("gint64" "offset")
    '("GSeekType" "type")
    '("GError**" "error")
  )
)

(define-function g_io_channel_new_file
  (c-name "g_io_channel_new_file")
  (return-type "GIOChannel*")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "mode")
    '("GError**" "error")
  )
)

(define-function g_io_channel_error_quark
  (c-name "g_io_channel_error_quark")
  (return-type "GQuark")
)

(define-function g_io_channel_error_from_errno
  (c-name "g_io_channel_error_from_errno")
  (return-type "GIOChannelError")
  (parameters
    '("gint" "en")
  )
)

(define-function g_io_channel_unix_new
  (c-name "g_io_channel_unix_new")
  (is-constructor-of "GIoChannelUnix")
  (return-type "GIOChannel*")
  (parameters
    '("int" "fd")
  )
)

(define-function g_io_channel_unix_get_fd
  (c-name "g_io_channel_unix_get_fd")
  (return-type "gint")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_win32_make_pollfd
  (c-name "g_io_channel_win32_make_pollfd")
  (return-type "none")
  (parameters
    '("GIOChannel*" "channel")
    '("GIOCondition" "condition")
    '("GPollFD*" "fd")
  )
)

(define-function g_io_channel_win32_poll
  (c-name "g_io_channel_win32_poll")
  (return-type "gint")
  (parameters
    '("GPollFD*" "fds")
    '("gint" "n_fds")
    '("gint" "timeout_")
  )
)

(define-function g_io_channel_win32_new_messages
  (c-name "g_io_channel_win32_new_messages")
  (return-type "GIOChannel*")
  (parameters
    '("guint" "hwnd")
  )
)

(define-function g_io_channel_win32_new_fd
  (c-name "g_io_channel_win32_new_fd")
  (return-type "GIOChannel*")
  (parameters
    '("gint" "fd")
  )
)

(define-function g_io_channel_win32_get_fd
  (c-name "g_io_channel_win32_get_fd")
  (return-type "gint")
  (parameters
    '("GIOChannel*" "channel")
  )
)

(define-function g_io_channel_win32_new_socket
  (c-name "g_io_channel_win32_new_socket")
  (return-type "GIOChannel*")
  (parameters
    '("gint" "socket")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gkeyfile.h

(define-function g_key_file_error_quark
  (c-name "g_key_file_error_quark")
  (return-type "GQuark")
)

(define-function g_key_file_new
  (c-name "g_key_file_new")
  (is-constructor-of "GKeyFile")
  (return-type "GKeyFile*")
)

(define-function g_key_file_free
  (c-name "g_key_file_free")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
  )
)

(define-function g_key_file_set_list_separator
  (c-name "g_key_file_set_list_separator")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("gchar" "separator")
  )
)

(define-function g_key_file_load_from_file
  (c-name "g_key_file_load_from_file")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "file")
    '("GKeyFileFlags" "flags")
    '("GError**" "error")
  )
)

(define-function g_key_file_load_from_data
  (c-name "g_key_file_load_from_data")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "data")
    '("gsize" "length")
    '("GKeyFileFlags" "flags")
    '("GError**" "error")
  )
)

(define-function g_key_file_load_from_data_dirs
  (c-name "g_key_file_load_from_data_dirs")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "file")
    '("gchar**" "full_path")
    '("GKeyFileFlags" "flags")
    '("GError**" "error")
  )
)

(define-function g_key_file_to_data
  (c-name "g_key_file_to_data")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_get_start_group
  (c-name "g_key_file_get_start_group")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
  )
)

(define-function g_key_file_get_groups
  (c-name "g_key_file_get_groups")
  (return-type "gchar**")
  (parameters
    '("GKeyFile*" "key_file")
    '("gsize*" "length")
  )
)

(define-function g_key_file_get_keys
  (c-name "g_key_file_get_keys")
  (return-type "gchar**")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_has_group
  (c-name "g_key_file_has_group")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
  )
)

(define-function g_key_file_has_key
  (c-name "g_key_file_has_key")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_get_value
  (c-name "g_key_file_get_value")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_value
  (c-name "g_key_file_set_value")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "value")
  )
)

(define-function g_key_file_get_string
  (c-name "g_key_file_get_string")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_string
  (c-name "g_key_file_set_string")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "string")
  )
)

(define-function g_key_file_get_locale_string
  (c-name "g_key_file_get_locale_string")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "locale")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_locale_string
  (c-name "g_key_file_set_locale_string")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "locale")
    '("const-gchar*" "string")
  )
)

(define-function g_key_file_get_boolean
  (c-name "g_key_file_get_boolean")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_boolean
  (c-name "g_key_file_set_boolean")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gboolean" "value")
  )
)

(define-function g_key_file_get_integer
  (c-name "g_key_file_get_integer")
  (return-type "gint")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_integer
  (c-name "g_key_file_set_integer")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gint" "value")
  )
)

(define-function g_key_file_get_double
  (c-name "g_key_file_get_double")
  (return-type "gdouble")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_double
  (c-name "g_key_file_set_double")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gdouble" "value")
  )
)

(define-function g_key_file_get_string_list
  (c-name "g_key_file_get_string_list")
  (return-type "gchar**")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_string_list
  (c-name "g_key_file_set_string_list")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*-const[]" "list")
    '("gsize" "length")
  )
)

(define-function g_key_file_get_locale_string_list
  (c-name "g_key_file_get_locale_string_list")
  (return-type "gchar**")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "locale")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_locale_string_list
  (c-name "g_key_file_set_locale_string_list")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "locale")
    '("const-gchar*-const[]" "list")
    '("gsize" "length")
  )
)

(define-function g_key_file_get_boolean_list
  (c-name "g_key_file_get_boolean_list")
  (return-type "gboolean*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_boolean_list
  (c-name "g_key_file_set_boolean_list")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gboolean[]" "list")
    '("gsize" "length")
  )
)

(define-function g_key_file_get_integer_list
  (c-name "g_key_file_get_integer_list")
  (return-type "gint*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_double_list
  (c-name "g_key_file_set_double_list")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gdouble[]" "list")
    '("gsize" "length")
  )
)

(define-function g_key_file_get_double_list
  (c-name "g_key_file_get_double_list")
  (return-type "gdouble*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gsize*" "length")
    '("GError**" "error")
  )
)

(define-function g_key_file_set_integer_list
  (c-name "g_key_file_set_integer_list")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("gint[]" "list")
    '("gsize" "length")
  )
)

(define-function g_key_file_set_comment
  (c-name "g_key_file_set_comment")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("const-gchar*" "comment")
    '("GError**" "error")
  )
)

(define-function g_key_file_get_comment
  (c-name "g_key_file_get_comment")
  (return-type "gchar*")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_remove_comment
  (c-name "g_key_file_remove_comment")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_remove_key
  (c-name "g_key_file_remove_key")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("const-gchar*" "key")
    '("GError**" "error")
  )
)

(define-function g_key_file_remove_group
  (c-name "g_key_file_remove_group")
  (return-type "none")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("GError**" "error")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/glist.h

(define-function g_list_alloc
  (c-name "g_list_alloc")
  (return-type "GList*")
)

(define-function g_list_free
  (c-name "g_list_free")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_free_1
  (c-name "g_list_free_1")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_append
  (c-name "g_list_append")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gpointer" "data")
  )
)

(define-function g_list_prepend
  (c-name "g_list_prepend")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gpointer" "data")
  )
)

(define-function g_list_insert
  (c-name "g_list_insert")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gpointer" "data")
    '("gint" "position")
  )
)

(define-function g_list_insert_sorted
  (c-name "g_list_insert_sorted")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-function g_list_insert_sorted_with_data
  (c-name "g_list_insert_sorted_with_data")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gpointer" "data")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_list_insert_before
  (c-name "g_list_insert_before")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("GList*" "sibling")
    '("gpointer" "data")
  )
)

(define-function g_list_concat
  (c-name "g_list_concat")
  (return-type "GList*")
  (parameters
    '("GList*" "list1")
    '("GList*" "list2")
  )
)

(define-function g_list_remove
  (c-name "g_list_remove")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_list_remove_all
  (c-name "g_list_remove_all")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_list_remove_link
  (c-name "g_list_remove_link")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("GList*" "llink")
  )
)

(define-function g_list_delete_link
  (c-name "g_list_delete_link")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("GList*" "link_")
  )
)

(define-function g_list_reverse
  (c-name "g_list_reverse")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_copy
  (c-name "g_list_copy")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_nth
  (c-name "g_list_nth")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("guint" "n")
  )
)

(define-function g_list_nth_prev
  (c-name "g_list_nth_prev")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("guint" "n")
  )
)

(define-function g_list_find
  (c-name "g_list_find")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_list_find_custom
  (c-name "g_list_find_custom")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("gconstpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-function g_list_position
  (c-name "g_list_position")
  (return-type "gint")
  (parameters
    '("GList*" "list")
    '("GList*" "llink")
  )
)

(define-function g_list_index
  (c-name "g_list_index")
  (return-type "gint")
  (parameters
    '("GList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_list_last
  (c-name "g_list_last")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_first
  (c-name "g_list_first")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_length
  (c-name "g_list_length")
  (return-type "guint")
  (parameters
    '("GList*" "list")
  )
)

(define-function g_list_foreach
  (c-name "g_list_foreach")
  (return-type "none")
  (parameters
    '("GList*" "list")
    '("GFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_list_sort
  (c-name "g_list_sort")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("GCompareFunc" "compare_func")
  )
)

(define-function g_list_sort_with_data
  (c-name "g_list_sort_with_data")
  (return-type "GList*")
  (parameters
    '("GList*" "list")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)

(define-function g_list_nth_data
  (c-name "g_list_nth_data")
  (return-type "gpointer")
  (parameters
    '("GList*" "list")
    '("guint" "n")
  )
)

(define-function g_list_push_allocator
  (c-name "g_list_push_allocator")
  (return-type "none")
  (parameters
    '("gpointer" "allocator")
  )
)

(define-function g_list_pop_allocator
  (c-name "g_list_pop_allocator")
  (return-type "none")
)



;; From /opt/gnome2/include/glib-2.0/glib/gmacros.h



;; From /opt/gnome2/include/glib-2.0/glib/gmain.h

(define-function g_main_context_new
  (c-name "g_main_context_new")
  (is-constructor-of "GMainContext")
  (return-type "GMainContext*")
)

(define-function g_main_context_ref
  (c-name "g_main_context_ref")
  (return-type "GMainContext*")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_unref
  (c-name "g_main_context_unref")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_default
  (c-name "g_main_context_default")
  (return-type "GMainContext*")
)

(define-function g_main_context_iteration
  (c-name "g_main_context_iteration")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
    '("gboolean" "may_block")
  )
)

(define-function g_main_context_pending
  (c-name "g_main_context_pending")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_find_source_by_id
  (c-name "g_main_context_find_source_by_id")
  (return-type "GSource*")
  (parameters
    '("GMainContext*" "context")
    '("guint" "source_id")
  )
)

(define-function g_main_context_find_source_by_user_data
  (c-name "g_main_context_find_source_by_user_data")
  (return-type "GSource*")
  (parameters
    '("GMainContext*" "context")
    '("gpointer" "user_data")
  )
)

(define-function g_main_context_find_source_by_funcs_user_data
  (c-name "g_main_context_find_source_by_funcs_user_data")
  (return-type "GSource*")
  (parameters
    '("GMainContext*" "context")
    '("GSourceFuncs*" "funcs")
    '("gpointer" "user_data")
  )
)

(define-function g_main_context_wakeup
  (c-name "g_main_context_wakeup")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_acquire
  (c-name "g_main_context_acquire")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_release
  (c-name "g_main_context_release")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_is_owner
  (c-name "g_main_context_is_owner")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_wait
  (c-name "g_main_context_wait")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
    '("GCond*" "cond")
    '("GMutex*" "mutex")
  )
)

(define-function g_main_context_prepare
  (c-name "g_main_context_prepare")
  (return-type "gboolean")
  (parameters
    '("GMainContext*" "context")
    '("gint*" "priority")
  )
)

(define-function g_main_context_query
  (c-name "g_main_context_query")
  (return-type "gint")
  (parameters
    '("GMainContext*" "context")
    '("gint" "max_priority")
    '("gint*" "timeout_")
    '("GPollFD*" "fds")
    '("gint" "n_fds")
  )
)

(define-function g_main_context_check
  (c-name "g_main_context_check")
  (return-type "gint")
  (parameters
    '("GMainContext*" "context")
    '("gint" "max_priority")
    '("GPollFD*" "fds")
    '("gint" "n_fds")
  )
)

(define-function g_main_context_dispatch
  (c-name "g_main_context_dispatch")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_set_poll_func
  (c-name "g_main_context_set_poll_func")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
    '("GPollFunc" "func")
  )
)

(define-function g_main_context_get_poll_func
  (c-name "g_main_context_get_poll_func")
  (return-type "GPollFunc")
  (parameters
    '("GMainContext*" "context")
  )
)

(define-function g_main_context_add_poll
  (c-name "g_main_context_add_poll")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
    '("GPollFD*" "fd")
    '("gint" "priority")
  )
)

(define-function g_main_context_remove_poll
  (c-name "g_main_context_remove_poll")
  (return-type "none")
  (parameters
    '("GMainContext*" "context")
    '("GPollFD*" "fd")
  )
)

(define-function g_main_depth
  (c-name "g_main_depth")
  (return-type "gint")
)

(define-function g_main_current_source
  (c-name "g_main_current_source")
  (return-type "GSource*")
)

(define-function g_main_loop_new
  (c-name "g_main_loop_new")
  (is-constructor-of "GMainLoop")
  (return-type "GMainLoop*")
  (parameters
    '("GMainContext*" "context")
    '("gboolean" "is_running")
  )
)

(define-function g_main_loop_run
  (c-name "g_main_loop_run")
  (return-type "none")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_main_loop_quit
  (c-name "g_main_loop_quit")
  (return-type "none")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_main_loop_ref
  (c-name "g_main_loop_ref")
  (return-type "GMainLoop*")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_main_loop_unref
  (c-name "g_main_loop_unref")
  (return-type "none")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_main_loop_is_running
  (c-name "g_main_loop_is_running")
  (return-type "gboolean")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_main_loop_get_context
  (c-name "g_main_loop_get_context")
  (return-type "GMainContext*")
  (parameters
    '("GMainLoop*" "loop")
  )
)

(define-function g_source_new
  (c-name "g_source_new")
  (is-constructor-of "GSource")
  (return-type "GSource*")
  (parameters
    '("GSourceFuncs*" "source_funcs")
    '("guint" "struct_size")
  )
)

(define-function g_source_ref
  (c-name "g_source_ref")
  (return-type "GSource*")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_unref
  (c-name "g_source_unref")
  (return-type "none")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_attach
  (c-name "g_source_attach")
  (return-type "guint")
  (parameters
    '("GSource*" "source")
    '("GMainContext*" "context")
  )
)

(define-function g_source_destroy
  (c-name "g_source_destroy")
  (return-type "none")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_set_priority
  (c-name "g_source_set_priority")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("gint" "priority")
  )
)

(define-function g_source_get_priority
  (c-name "g_source_get_priority")
  (return-type "gint")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_set_can_recurse
  (c-name "g_source_set_can_recurse")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("gboolean" "can_recurse")
  )
)

(define-function g_source_get_can_recurse
  (c-name "g_source_get_can_recurse")
  (return-type "gboolean")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_get_id
  (c-name "g_source_get_id")
  (return-type "guint")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_get_context
  (c-name "g_source_get_context")
  (return-type "GMainContext*")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_set_callback
  (c-name "g_source_set_callback")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("GSourceFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_source_set_funcs
  (c-name "g_source_set_funcs")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("GSourceFuncs*" "funcs")
  )
)

(define-function g_source_is_destroyed
  (c-name "g_source_is_destroyed")
  (return-type "gboolean")
  (parameters
    '("GSource*" "source")
  )
)

(define-function g_source_set_callback_indirect
  (c-name "g_source_set_callback_indirect")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("gpointer" "callback_data")
    '("GSourceCallbackFuncs*" "callback_funcs")
  )
)

(define-function g_source_add_poll
  (c-name "g_source_add_poll")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("GPollFD*" "fd")
  )
)

(define-function g_source_remove_poll
  (c-name "g_source_remove_poll")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("GPollFD*" "fd")
  )
)

(define-function g_source_get_current_time
  (c-name "g_source_get_current_time")
  (return-type "none")
  (parameters
    '("GSource*" "source")
    '("GTimeVal*" "timeval")
  )
)

(define-function g_idle_source_new
  (c-name "g_idle_source_new")
  (is-constructor-of "GIdleSource")
  (return-type "GSource*")
)

(define-function g_child_watch_source_new
  (c-name "g_child_watch_source_new")
  (is-constructor-of "GChildWatchSource")
  (return-type "GSource*")
  (parameters
    '("GPid" "pid")
  )
)

(define-function g_timeout_source_new
  (c-name "g_timeout_source_new")
  (is-constructor-of "GTimeoutSource")
  (return-type "GSource*")
  (parameters
    '("guint" "interval")
  )
)

(define-function g_get_current_time
  (c-name "g_get_current_time")
  (return-type "none")
  (parameters
    '("GTimeVal*" "result")
  )
)

(define-function g_source_remove
  (c-name "g_source_remove")
  (return-type "gboolean")
  (parameters
    '("guint" "tag")
  )
)

(define-function g_source_remove_by_user_data
  (c-name "g_source_remove_by_user_data")
  (return-type "gboolean")
  (parameters
    '("gpointer" "user_data")
  )
)

(define-function g_source_remove_by_funcs_user_data
  (c-name "g_source_remove_by_funcs_user_data")
  (return-type "gboolean")
  (parameters
    '("GSourceFuncs*" "funcs")
    '("gpointer" "user_data")
  )
)

(define-function g_timeout_add_full
  (c-name "g_timeout_add_full")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("guint" "interval")
    '("GSourceFunc" "function")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_timeout_add
  (c-name "g_timeout_add")
  (return-type "guint")
  (parameters
    '("guint" "interval")
    '("GSourceFunc" "function")
    '("gpointer" "data")
  )
)

(define-function g_child_watch_add_full
  (c-name "g_child_watch_add_full")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("GPid" "pid")
    '("GChildWatchFunc" "function")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_child_watch_add
  (c-name "g_child_watch_add")
  (return-type "guint")
  (parameters
    '("GPid" "pid")
    '("GChildWatchFunc" "function")
    '("gpointer" "data")
  )
)

(define-function g_idle_add
  (c-name "g_idle_add")
  (return-type "guint")
  (parameters
    '("GSourceFunc" "function")
    '("gpointer" "data")
  )
)

(define-function g_idle_add_full
  (c-name "g_idle_add_full")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("GSourceFunc" "function")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_idle_remove_by_data
  (c-name "g_idle_remove_by_data")
  (return-type "gboolean")
  (parameters
    '("gpointer" "data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gmappedfile.h

(define-function g_mapped_file_new
  (c-name "g_mapped_file_new")
  (is-constructor-of "GMappedFile")
  (return-type "GMappedFile*")
  (parameters
    '("const-gchar*" "filename")
    '("gboolean" "writable")
    '("GError**" "error")
  )
)

(define-function g_mapped_file_get_length
  (c-name "g_mapped_file_get_length")
  (return-type "gsize")
  (parameters
    '("GMappedFile*" "file")
  )
)

(define-function g_mapped_file_get_contents
  (c-name "g_mapped_file_get_contents")
  (return-type "gchar*")
  (parameters
    '("GMappedFile*" "file")
  )
)

(define-function g_mapped_file_free
  (c-name "g_mapped_file_free")
  (return-type "none")
  (parameters
    '("GMappedFile*" "file")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gmarkup.h

(define-function g_markup_error_quark
  (c-name "g_markup_error_quark")
  (return-type "GQuark")
)

(define-function g_markup_parse_context_new
  (c-name "g_markup_parse_context_new")
  (is-constructor-of "GMarkupParseContext")
  (return-type "GMarkupParseContext*")
  (parameters
    '("const-GMarkupParser*" "parser")
    '("GMarkupParseFlags" "flags")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_dnotify")
  )
)

(define-function g_markup_parse_context_free
  (c-name "g_markup_parse_context_free")
  (return-type "none")
  (parameters
    '("GMarkupParseContext*" "context")
  )
)

(define-function g_markup_parse_context_parse
  (c-name "g_markup_parse_context_parse")
  (return-type "gboolean")
  (parameters
    '("GMarkupParseContext*" "context")
    '("const-gchar*" "text")
    '("gssize" "text_len")
    '("GError**" "error")
  )
)

(define-function g_markup_parse_context_end_parse
  (c-name "g_markup_parse_context_end_parse")
  (return-type "gboolean")
  (parameters
    '("GMarkupParseContext*" "context")
    '("GError**" "error")
  )
)

(define-function g_markup_parse_context_get_element
  (c-name "g_markup_parse_context_get_element")
  (return-type "const-gchar*")
  (parameters
    '("GMarkupParseContext*" "context")
  )
)

(define-function g_markup_parse_context_get_position
  (c-name "g_markup_parse_context_get_position")
  (return-type "none")
  (parameters
    '("GMarkupParseContext*" "context")
    '("gint*" "line_number")
    '("gint*" "char_number")
  )
)

(define-function g_markup_escape_text
  (c-name "g_markup_escape_text")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "text")
    '("gssize" "length")
  )
)

(define-function g_markup_printf_escaped
  (c-name "g_markup_printf_escaped")
  (return-type "gchar*")
  (parameters
    '("const-char*" "format")
  )
  (varargs #t)
)

(define-function g_markup_vprintf_escaped
  (c-name "g_markup_vprintf_escaped")
  (return-type "gchar*")
  (parameters
    '("const-char*" "format")
    '("va_list" "args")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gmem.h

(define-function g_malloc
  (c-name "g_malloc")
  (return-type "gpointer")
  (parameters
    '("gulong" "n_bytes")
  )
)

(define-function g_malloc0
  (c-name "g_malloc0")
  (return-type "gpointer")
  (parameters
    '("gulong" "n_bytes")
  )
)

(define-function g_realloc
  (c-name "g_realloc")
  (return-type "gpointer")
  (parameters
    '("gpointer" "mem")
    '("gulong" "n_bytes")
  )
)

(define-function g_free
  (c-name "g_free")
  (return-type "none")
  (parameters
    '("gpointer" "mem")
  )
)

(define-function g_try_malloc
  (c-name "g_try_malloc")
  (return-type "gpointer")
  (parameters
    '("gulong" "n_bytes")
  )
)

(define-function g_try_malloc0
  (c-name "g_try_malloc0")
  (return-type "gpointer")
  (parameters
    '("gulong" "n_bytes")
  )
)

(define-function g_try_realloc
  (c-name "g_try_realloc")
  (return-type "gpointer")
  (parameters
    '("gpointer" "mem")
    '("gulong" "n_bytes")
  )
)

(define-function g_mem_set_vtable
  (c-name "g_mem_set_vtable")
  (return-type "none")
  (parameters
    '("GMemVTable*" "vtable")
  )
)

(define-function g_mem_is_system_malloc
  (c-name "g_mem_is_system_malloc")
  (return-type "gboolean")
)

(define-function g_mem_profile
  (c-name "g_mem_profile")
  (return-type "none")
)

(define-function g_mem_chunk_new
  (c-name "g_mem_chunk_new")
  (is-constructor-of "GMemChunk")
  (return-type "GMemChunk*")
  (parameters
    '("const-gchar*" "name")
    '("gint" "atom_size")
    '("gulong" "area_size")
    '("gint" "type")
  )
)

(define-function g_mem_chunk_destroy
  (c-name "g_mem_chunk_destroy")
  (return-type "none")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_alloc
  (c-name "g_mem_chunk_alloc")
  (return-type "gpointer")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_alloc0
  (c-name "g_mem_chunk_alloc0")
  (return-type "gpointer")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_free
  (c-name "g_mem_chunk_free")
  (return-type "none")
  (parameters
    '("GMemChunk*" "mem_chunk")
    '("gpointer" "mem")
  )
)

(define-function g_mem_chunk_clean
  (c-name "g_mem_chunk_clean")
  (return-type "none")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_reset
  (c-name "g_mem_chunk_reset")
  (return-type "none")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_print
  (c-name "g_mem_chunk_print")
  (return-type "none")
  (parameters
    '("GMemChunk*" "mem_chunk")
  )
)

(define-function g_mem_chunk_info
  (c-name "g_mem_chunk_info")
  (return-type "none")
)

(define-function g_blow_chunks
  (c-name "g_blow_chunks")
  (return-type "none")
)

(define-function g_allocator_free
  (c-name "g_allocator_free")
  (return-type "none")
  (parameters
    '("GAllocator*" "allocator")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gmessages.h

(define-function g_printf_string_upper_bound
  (c-name "g_printf_string_upper_bound")
  (return-type "gsize")
  (parameters
    '("const-gchar*" "format")
    '("va_list" "args")
  )
)

(define-function g_log_set_handler
  (c-name "g_log_set_handler")
  (return-type "guint")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "log_levels")
    '("GLogFunc" "log_func")
    '("gpointer" "user_data")
  )
)

(define-function g_log_remove_handler
  (c-name "g_log_remove_handler")
  (return-type "none")
  (parameters
    '("const-gchar*" "log_domain")
    '("guint" "handler_id")
  )
)

(define-function g_log_default_handler
  (c-name "g_log_default_handler")
  (return-type "none")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "log_level")
    '("const-gchar*" "message")
    '("gpointer" "unused_data")
  )
)

(define-function g_log_set_default_handler
  (c-name "g_log_set_default_handler")
  (return-type "GLogFunc")
  (parameters
    '("GLogFunc" "log_func")
    '("gpointer" "user_data")
  )
)

(define-function g_log
  (c-name "g_log")
  (return-type "none")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "log_level")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_logv
  (c-name "g_logv")
  (return-type "none")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "log_level")
    '("const-gchar*" "format")
    '("va_list" "args")
  )
)

(define-function g_log_set_fatal_mask
  (c-name "g_log_set_fatal_mask")
  (return-type "GLogLevelFlags")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "fatal_mask")
  )
)

(define-function g_log_set_always_fatal
  (c-name "g_log_set_always_fatal")
  (return-type "GLogLevelFlags")
  (parameters
    '("GLogLevelFlags" "fatal_mask")
  )
)

(define-function _g_log_fallback_handler
  (c-name "_g_log_fallback_handler")
  (return-type "none")
  (parameters
    '("const-gchar*" "log_domain")
    '("GLogLevelFlags" "log_level")
    '("const-gchar*" "message")
    '("gpointer" "unused_data")
  )
)

(define-function g_return_if_fail_warning
  (c-name "g_return_if_fail_warning")
  (return-type "none")
  (parameters
    '("const-char*" "log_domain")
    '("const-char*" "pretty_function")
    '("const-char*" "expression")
  )
)

(define-function g_assert_warning
  (c-name "g_assert_warning")
  (return-type "none")
  (parameters
    '("const-char*" "log_domain")
    '("const-char*" "file")
    '("const-int" "line")
    '("const-char*" "pretty_function")
    '("const-char*" "expression")
  )
)

(define-function g_error
  (c-name "g_error")
  (return-type "static-void")
  (parameters
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_set_print_handler
  (c-name "g_set_print_handler")
  (return-type "GPrintFunc")
  (parameters
    '("GPrintFunc" "func")
  )
)

(define-function g_printerr
  (c-name "g_printerr")
  (return-type "none")
  (parameters
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_set_printerr_handler
  (c-name "g_set_printerr_handler")
  (return-type "GPrintFunc")
  (parameters
    '("GPrintFunc" "func")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gnode.h

(define-function g_node_new
  (c-name "g_node_new")
  (is-constructor-of "GNode")
  (return-type "GNode*")
  (parameters
    '("gpointer" "data")
  )
)

(define-function g_node_destroy
  (c-name "g_node_destroy")
  (return-type "none")
  (parameters
    '("GNode*" "root")
  )
)

(define-function g_node_unlink
  (c-name "g_node_unlink")
  (return-type "none")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_copy_deep
  (c-name "g_node_copy_deep")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
    '("GCopyFunc" "copy_func")
    '("gpointer" "data")
  )
)

(define-function g_node_copy
  (c-name "g_node_copy")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_insert
  (c-name "g_node_insert")
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent")
    '("gint" "position")
    '("GNode*" "node")
  )
)

(define-function g_node_insert_before
  (c-name "g_node_insert_before")
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent")
    '("GNode*" "sibling")
    '("GNode*" "node")
  )
)

(define-function g_node_insert_after
  (c-name "g_node_insert_after")
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent")
    '("GNode*" "sibling")
    '("GNode*" "node")
  )
)

(define-function g_node_prepend
  (c-name "g_node_prepend")
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent")
    '("GNode*" "node")
  )
)

(define-function g_node_n_nodes
  (c-name "g_node_n_nodes")
  (return-type "guint")
  (parameters
    '("GNode*" "root")
    '("GTraverseFlags" "flags")
  )
)

(define-function g_node_get_root
  (c-name "g_node_get_root")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_is_ancestor
  (c-name "g_node_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GNode*" "node")
    '("GNode*" "descendant")
  )
)

(define-function g_node_depth
  (c-name "g_node_depth")
  (return-type "guint")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_find
  (c-name "g_node_find")
  (return-type "GNode*")
  (parameters
    '("GNode*" "root")
    '("GTraverseType" "order")
    '("GTraverseFlags" "flags")
    '("gpointer" "data")
  )
)

(define-function g_node_traverse
  (c-name "g_node_traverse")
  (return-type "none")
  (parameters
    '("GNode*" "root")
    '("GTraverseType" "order")
    '("GTraverseFlags" "flags")
    '("gint" "max_depth")
    '("GNodeTraverseFunc" "func")
    '("gpointer" "data")
  )
)

(define-function g_node_max_height
  (c-name "g_node_max_height")
  (return-type "guint")
  (parameters
    '("GNode*" "root")
  )
)

(define-function g_node_children_foreach
  (c-name "g_node_children_foreach")
  (return-type "none")
  (parameters
    '("GNode*" "node")
    '("GTraverseFlags" "flags")
    '("GNodeForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-function g_node_reverse_children
  (c-name "g_node_reverse_children")
  (return-type "none")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_n_children
  (c-name "g_node_n_children")
  (return-type "guint")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_nth_child
  (c-name "g_node_nth_child")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
    '("guint" "n")
  )
)

(define-function g_node_last_child
  (c-name "g_node_last_child")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_find_child
  (c-name "g_node_find_child")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
    '("GTraverseFlags" "flags")
    '("gpointer" "data")
  )
)

(define-function g_node_child_position
  (c-name "g_node_child_position")
  (return-type "gint")
  (parameters
    '("GNode*" "node")
    '("GNode*" "child")
  )
)

(define-function g_node_child_index
  (c-name "g_node_child_index")
  (return-type "gint")
  (parameters
    '("GNode*" "node")
    '("gpointer" "data")
  )
)

(define-function g_node_first_sibling
  (c-name "g_node_first_sibling")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_last_sibling
  (c-name "g_node_last_sibling")
  (return-type "GNode*")
  (parameters
    '("GNode*" "node")
  )
)

(define-function g_node_push_allocator
  (c-name "g_node_push_allocator")
  (return-type "none")
  (parameters
    '("gpointer" "dummy")
  )
)

(define-function g_node_pop_allocator
  (c-name "g_node_pop_allocator")
  (return-type "none")
)



;; From /opt/gnome2/include/glib-2.0/glib/goption.h

(define-function g_option_error_quark
  (c-name "g_option_error_quark")
  (return-type "GQuark")
)

(define-function g_option_context_new
  (c-name "g_option_context_new")
  (is-constructor-of "GOptionContext")
  (return-type "GOptionContext*")
  (parameters
    '("const-gchar*" "parameter_string")
  )
)

(define-function g_option_context_set_summary
  (c-name "g_option_context_set_summary")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("const-gchar*" "summary")
  )
)

(define-function g_option_context_get_summary
  (c-name "g_option_context_get_summary")
  (return-type "const-gchar*")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_context_set_description
  (c-name "g_option_context_set_description")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("const-gchar*" "description")
  )
)

(define-function g_option_context_get_description
  (c-name "g_option_context_get_description")
  (return-type "const-gchar*")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_context_free
  (c-name "g_option_context_free")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_context_set_help_enabled
  (c-name "g_option_context_set_help_enabled")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("gboolean" "help_enabled")
  )
)

(define-function g_option_context_get_help_enabled
  (c-name "g_option_context_get_help_enabled")
  (return-type "gboolean")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_context_set_ignore_unknown_options
  (c-name "g_option_context_set_ignore_unknown_options")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("gboolean" "ignore_unknown")
  )
)

(define-function g_option_context_get_ignore_unknown_options
  (c-name "g_option_context_get_ignore_unknown_options")
  (return-type "gboolean")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_context_add_main_entries
  (c-name "g_option_context_add_main_entries")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("const-GOptionEntry*" "entries")
    '("const-gchar*" "translation_domain")
  )
)

(define-function g_option_context_parse
  (c-name "g_option_context_parse")
  (return-type "gboolean")
  (parameters
    '("GOptionContext*" "context")
    '("gint*" "argc")
    '("gchar***" "argv")
    '("GError**" "error")
  )
)

(define-function g_option_context_set_translate_func
  (c-name "g_option_context_set_translate_func")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("GTranslateFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_notify")
  )
)

(define-function g_option_context_set_translation_domain
  (c-name "g_option_context_set_translation_domain")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("const-gchar*" "domain")
  )
)

(define-function g_option_context_add_group
  (c-name "g_option_context_add_group")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("GOptionGroup*" "group")
  )
)

(define-function g_option_context_set_main_group
  (c-name "g_option_context_set_main_group")
  (return-type "none")
  (parameters
    '("GOptionContext*" "context")
    '("GOptionGroup*" "group")
  )
)

(define-function g_option_context_get_main_group
  (c-name "g_option_context_get_main_group")
  (return-type "GOptionGroup*")
  (parameters
    '("GOptionContext*" "context")
  )
)

(define-function g_option_group_new
  (c-name "g_option_group_new")
  (is-constructor-of "GOptionGroup")
  (return-type "GOptionGroup*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "description")
    '("const-gchar*" "help_description")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-function g_option_group_set_parse_hooks
  (c-name "g_option_group_set_parse_hooks")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
    '("GOptionParseFunc" "pre_parse_func")
    '("GOptionParseFunc" "post_parse_func")
  )
)

(define-function g_option_group_set_error_hook
  (c-name "g_option_group_set_error_hook")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
    '("GOptionErrorFunc" "error_func")
  )
)

(define-function g_option_group_free
  (c-name "g_option_group_free")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
  )
)

(define-function g_option_group_add_entries
  (c-name "g_option_group_add_entries")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
    '("const-GOptionEntry*" "entries")
  )
)

(define-function g_option_group_set_translate_func
  (c-name "g_option_group_set_translate_func")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
    '("GTranslateFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_notify")
  )
)

(define-function g_option_group_set_translation_domain
  (c-name "g_option_group_set_translation_domain")
  (return-type "none")
  (parameters
    '("GOptionGroup*" "group")
    '("const-gchar*" "domain")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gpattern.h

(define-function g_pattern_spec_new
  (c-name "g_pattern_spec_new")
  (is-constructor-of "GPatternSpec")
  (return-type "GPatternSpec*")
  (parameters
    '("const-gchar*" "pattern")
  )
)

(define-function g_pattern_spec_free
  (c-name "g_pattern_spec_free")
  (return-type "none")
  (parameters
    '("GPatternSpec*" "pspec")
  )
)

(define-function g_pattern_spec_equal
  (c-name "g_pattern_spec_equal")
  (return-type "gboolean")
  (parameters
    '("GPatternSpec*" "pspec1")
    '("GPatternSpec*" "pspec2")
  )
)

(define-function g_pattern_match
  (c-name "g_pattern_match")
  (return-type "gboolean")
  (parameters
    '("GPatternSpec*" "pspec")
    '("guint" "string_length")
    '("const-gchar*" "string")
    '("const-gchar*" "string_reversed")
  )
)

(define-function g_pattern_match_string
  (c-name "g_pattern_match_string")
  (return-type "gboolean")
  (parameters
    '("GPatternSpec*" "pspec")
    '("const-gchar*" "string")
  )
)

(define-function g_pattern_match_simple
  (c-name "g_pattern_match_simple")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "pattern")
    '("const-gchar*" "string")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gprimes.h

(define-function g_spaced_primes_closest
  (c-name "g_spaced_primes_closest")
  (return-type "guint")
  (parameters
    '("guint" "num")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gprintf.h

(define-function g_printf
  (c-name "g_printf")
  (return-type "gint")
  (parameters
    '("gchar-const*" "format")
  )
  (varargs #t)
)

(define-function g_fprintf
  (c-name "g_fprintf")
  (return-type "gint")
  (parameters
    '("FILE*" "file")
    '("gchar-const*" "format")
  )
  (varargs #t)
)

(define-function g_sprintf
  (c-name "g_sprintf")
  (return-type "gint")
  (parameters
    '("gchar*" "string")
    '("gchar-const*" "format")
  )
  (varargs #t)
)

(define-function g_vprintf
  (c-name "g_vprintf")
  (return-type "gint")
  (parameters
    '("gchar-const*" "format")
    '("va_list" "args")
  )
)

(define-function g_vfprintf
  (c-name "g_vfprintf")
  (return-type "gint")
  (parameters
    '("FILE*" "file")
    '("gchar-const*" "format")
    '("va_list" "args")
  )
)

(define-function g_vsprintf
  (c-name "g_vsprintf")
  (return-type "gint")
  (parameters
    '("gchar*" "string")
    '("gchar-const*" "format")
    '("va_list" "args")
  )
)

(define-function g_vasprintf
  (c-name "g_vasprintf")
  (return-type "gint")
  (parameters
    '("gchar**" "string")
    '("gchar-const*" "format")
    '("va_list" "args")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gqsort.h

(define-function g_qsort_with_data
  (c-name "g_qsort_with_data")
  (return-type "none")
  (parameters
    '("gconstpointer" "pbase")
    '("gint" "total_elems")
    '("gsize" "size")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gquark.h

(define-function g_quark_try_string
  (c-name "g_quark_try_string")
  (return-type "GQuark")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-function g_quark_from_static_string
  (c-name "g_quark_from_static_string")
  (return-type "GQuark")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-function g_quark_from_string
  (c-name "g_quark_from_string")
  (return-type "GQuark")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-function g_quark_to_string
  (c-name "g_quark_to_string")
  (return-type "const-gchar*")
  (parameters
    '("GQuark" "quark")
  )
)

(define-function g_intern_string
  (c-name "g_intern_string")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-function g_intern_static_string
  (c-name "g_intern_static_string")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "string")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gqueue.h

(define-function g_queue_new
  (c-name "g_queue_new")
  (is-constructor-of "GQueue")
  (return-type "GQueue*")
)

(define-function g_queue_free
  (c-name "g_queue_free")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_is_empty
  (c-name "g_queue_is_empty")
  (return-type "gboolean")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_get_length
  (c-name "g_queue_get_length")
  (return-type "guint")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_reverse
  (c-name "g_queue_reverse")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_copy
  (c-name "g_queue_copy")
  (return-type "GQueue*")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_foreach
  (c-name "g_queue_foreach")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_queue_find
  (c-name "g_queue_find")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
    '("gconstpointer" "data")
  )
)

(define-function g_queue_find_custom
  (c-name "g_queue_find_custom")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
    '("gconstpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-function g_queue_sort
  (c-name "g_queue_sort")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)

(define-function g_queue_push_head
  (c-name "g_queue_push_head")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gpointer" "data")
  )
)

(define-function g_queue_push_tail
  (c-name "g_queue_push_tail")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gpointer" "data")
  )
)

(define-function g_queue_push_nth
  (c-name "g_queue_push_nth")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gpointer" "data")
    '("gint" "n")
  )
)

(define-function g_queue_pop_head
  (c-name "g_queue_pop_head")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_pop_tail
  (c-name "g_queue_pop_tail")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_pop_nth
  (c-name "g_queue_pop_nth")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
    '("guint" "n")
  )
)

(define-function g_queue_peek_head
  (c-name "g_queue_peek_head")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_peek_tail
  (c-name "g_queue_peek_tail")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_peek_nth
  (c-name "g_queue_peek_nth")
  (return-type "gpointer")
  (parameters
    '("GQueue*" "queue")
    '("guint" "n")
  )
)

(define-function g_queue_index
  (c-name "g_queue_index")
  (return-type "gint")
  (parameters
    '("GQueue*" "queue")
    '("gconstpointer" "data")
  )
)

(define-function g_queue_remove
  (c-name "g_queue_remove")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gconstpointer" "data")
  )
)

(define-function g_queue_remove_all
  (c-name "g_queue_remove_all")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gconstpointer" "data")
  )
)

(define-function g_queue_insert_before
  (c-name "g_queue_insert_before")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "sibling")
    '("gpointer" "data")
  )
)

(define-function g_queue_insert_after
  (c-name "g_queue_insert_after")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "sibling")
    '("gpointer" "data")
  )
)

(define-function g_queue_insert_sorted
  (c-name "g_queue_insert_sorted")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gpointer" "data")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_queue_push_head_link
  (c-name "g_queue_push_head_link")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "link_")
  )
)

(define-function g_queue_push_tail_link
  (c-name "g_queue_push_tail_link")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "link_")
  )
)

(define-function g_queue_push_nth_link
  (c-name "g_queue_push_nth_link")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("gint" "n")
    '("GList*" "link_")
  )
)

(define-function g_queue_pop_head_link
  (c-name "g_queue_pop_head_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_pop_tail_link
  (c-name "g_queue_pop_tail_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_pop_nth_link
  (c-name "g_queue_pop_nth_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
    '("guint" "n")
  )
)

(define-function g_queue_peek_head_link
  (c-name "g_queue_peek_head_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_peek_tail_link
  (c-name "g_queue_peek_tail_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
  )
)

(define-function g_queue_peek_nth_link
  (c-name "g_queue_peek_nth_link")
  (return-type "GList*")
  (parameters
    '("GQueue*" "queue")
    '("guint" "n")
  )
)

(define-function g_queue_link_index
  (c-name "g_queue_link_index")
  (return-type "gint")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "link_")
  )
)

(define-function g_queue_unlink
  (c-name "g_queue_unlink")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "link_")
  )
)

(define-function g_queue_delete_link
  (c-name "g_queue_delete_link")
  (return-type "none")
  (parameters
    '("GQueue*" "queue")
    '("GList*" "link_")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/grand.h

(define-function g_rand_new_with_seed
  (c-name "g_rand_new_with_seed")
  (return-type "GRand*")
  (parameters
    '("guint32" "seed")
  )
)

(define-function g_rand_new_with_seed_array
  (c-name "g_rand_new_with_seed_array")
  (return-type "GRand*")
  (parameters
    '("const-guint32*" "seed")
    '("guint" "seed_length")
  )
)

(define-function g_rand_new
  (c-name "g_rand_new")
  (is-constructor-of "GRand")
  (return-type "GRand*")
)

(define-function g_rand_free
  (c-name "g_rand_free")
  (return-type "none")
  (parameters
    '("GRand*" "rand_")
  )
)

(define-function g_rand_copy
  (c-name "g_rand_copy")
  (return-type "GRand*")
  (parameters
    '("GRand*" "rand_")
  )
)

(define-function g_rand_set_seed
  (c-name "g_rand_set_seed")
  (return-type "none")
  (parameters
    '("GRand*" "rand_")
    '("guint32" "seed")
  )
)

(define-function g_rand_set_seed_array
  (c-name "g_rand_set_seed_array")
  (return-type "none")
  (parameters
    '("GRand*" "rand_")
    '("const-guint32*" "seed")
    '("guint" "seed_length")
  )
)

(define-function g_rand_int
  (c-name "g_rand_int")
  (return-type "guint32")
  (parameters
    '("GRand*" "rand_")
  )
)

(define-function g_rand_int_range
  (c-name "g_rand_int_range")
  (return-type "gint32")
  (parameters
    '("GRand*" "rand_")
    '("gint32" "begin")
    '("gint32" "end")
  )
)

(define-function g_rand_double
  (c-name "g_rand_double")
  (return-type "gdouble")
  (parameters
    '("GRand*" "rand_")
  )
)

(define-function g_rand_double_range
  (c-name "g_rand_double_range")
  (return-type "gdouble")
  (parameters
    '("GRand*" "rand_")
    '("gdouble" "begin")
    '("gdouble" "end")
  )
)

(define-function g_random_set_seed
  (c-name "g_random_set_seed")
  (return-type "none")
  (parameters
    '("guint32" "seed")
  )
)

(define-function g_random_int
  (c-name "g_random_int")
  (return-type "guint32")
)

(define-function g_random_int_range
  (c-name "g_random_int_range")
  (return-type "gint32")
  (parameters
    '("gint32" "begin")
    '("gint32" "end")
  )
)

(define-function g_random_double
  (c-name "g_random_double")
  (return-type "gdouble")
)

(define-function g_random_double_range
  (c-name "g_random_double_range")
  (return-type "gdouble")
  (parameters
    '("gdouble" "begin")
    '("gdouble" "end")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/grel.h

(define-function g_relation_new
  (c-name "g_relation_new")
  (is-constructor-of "GRelation")
  (return-type "GRelation*")
  (parameters
    '("gint" "fields")
  )
)

(define-function g_relation_destroy
  (c-name "g_relation_destroy")
  (return-type "none")
  (parameters
    '("GRelation*" "relation")
  )
)

(define-function g_relation_index
  (c-name "g_relation_index")
  (return-type "none")
  (parameters
    '("GRelation*" "relation")
    '("gint" "field")
    '("GHashFunc" "hash_func")
    '("GEqualFunc" "key_equal_func")
  )
)

(define-function g_relation_insert
  (c-name "g_relation_insert")
  (return-type "none")
  (parameters
    '("GRelation*" "relation")
  )
  (varargs #t)
)

(define-function g_relation_delete
  (c-name "g_relation_delete")
  (return-type "gint")
  (parameters
    '("GRelation*" "relation")
    '("gconstpointer" "key")
    '("gint" "field")
  )
)

(define-function g_relation_select
  (c-name "g_relation_select")
  (return-type "GTuples*")
  (parameters
    '("GRelation*" "relation")
    '("gconstpointer" "key")
    '("gint" "field")
  )
)

(define-function g_relation_count
  (c-name "g_relation_count")
  (return-type "gint")
  (parameters
    '("GRelation*" "relation")
    '("gconstpointer" "key")
    '("gint" "field")
  )
)

(define-function g_relation_exists
  (c-name "g_relation_exists")
  (return-type "gboolean")
  (parameters
    '("GRelation*" "relation")
  )
  (varargs #t)
)

(define-function g_relation_print
  (c-name "g_relation_print")
  (return-type "none")
  (parameters
    '("GRelation*" "relation")
  )
)

(define-function g_tuples_destroy
  (c-name "g_tuples_destroy")
  (return-type "none")
  (parameters
    '("GTuples*" "tuples")
  )
)

(define-function g_tuples_index
  (c-name "g_tuples_index")
  (return-type "gpointer")
  (parameters
    '("GTuples*" "tuples")
    '("gint" "index_")
    '("gint" "field")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gscanner.h

(define-function g_scanner_new
  (c-name "g_scanner_new")
  (is-constructor-of "GScanner")
  (return-type "GScanner*")
  (parameters
    '("const-GScannerConfig*" "config_templ")
  )
)

(define-function g_scanner_destroy
  (c-name "g_scanner_destroy")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_input_file
  (c-name "g_scanner_input_file")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("gint" "input_fd")
  )
)

(define-function g_scanner_sync_file_offset
  (c-name "g_scanner_sync_file_offset")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_input_text
  (c-name "g_scanner_input_text")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("const-gchar*" "text")
    '("guint" "text_len")
  )
)

(define-function g_scanner_get_next_token
  (c-name "g_scanner_get_next_token")
  (return-type "GTokenType")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_peek_next_token
  (c-name "g_scanner_peek_next_token")
  (return-type "GTokenType")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_cur_token
  (c-name "g_scanner_cur_token")
  (return-type "GTokenType")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_cur_value
  (c-name "g_scanner_cur_value")
  (return-type "GTokenValue")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_cur_line
  (c-name "g_scanner_cur_line")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_cur_position
  (c-name "g_scanner_cur_position")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_eof
  (c-name "g_scanner_eof")
  (return-type "gboolean")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function g_scanner_set_scope
  (c-name "g_scanner_set_scope")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
    '("guint" "scope_id")
  )
)

(define-function g_scanner_scope_add_symbol
  (c-name "g_scanner_scope_add_symbol")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("guint" "scope_id")
    '("const-gchar*" "symbol")
    '("gpointer" "value")
  )
)

(define-function g_scanner_scope_remove_symbol
  (c-name "g_scanner_scope_remove_symbol")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("guint" "scope_id")
    '("const-gchar*" "symbol")
  )
)

(define-function g_scanner_scope_lookup_symbol
  (c-name "g_scanner_scope_lookup_symbol")
  (return-type "gpointer")
  (parameters
    '("GScanner*" "scanner")
    '("guint" "scope_id")
    '("const-gchar*" "symbol")
  )
)

(define-function g_scanner_scope_foreach_symbol
  (c-name "g_scanner_scope_foreach_symbol")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("guint" "scope_id")
    '("GHFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_scanner_lookup_symbol
  (c-name "g_scanner_lookup_symbol")
  (return-type "gpointer")
  (parameters
    '("GScanner*" "scanner")
    '("const-gchar*" "symbol")
  )
)

(define-function g_scanner_unexp_token
  (c-name "g_scanner_unexp_token")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("GTokenType" "expected_token")
    '("const-gchar*" "identifier_spec")
    '("const-gchar*" "symbol_spec")
    '("const-gchar*" "symbol_name")
    '("const-gchar*" "message")
    '("gint" "is_error")
  )
)

(define-function g_scanner_error
  (c-name "g_scanner_error")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_scanner_warn
  (c-name "g_scanner_warn")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
    '("const-gchar*" "format")
  )
  (varargs #t)
)



;; From /opt/gnome2/include/glib-2.0/glib/gshell.h

(define-function g_shell_error_quark
  (c-name "g_shell_error_quark")
  (return-type "GQuark")
)

(define-function g_shell_quote
  (c-name "g_shell_quote")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "unquoted_string")
  )
)

(define-function g_shell_unquote
  (c-name "g_shell_unquote")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "quoted_string")
    '("GError**" "error")
  )
)

(define-function g_shell_parse_argv
  (c-name "g_shell_parse_argv")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "command_line")
    '("gint*" "argcp")
    '("gchar***" "argvp")
    '("GError**" "error")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gslice.h

(define-function g_slice_alloc
  (c-name "g_slice_alloc")
  (return-type "gpointer")
  (parameters
    '("gsize" "block_size")
  )
)

(define-function g_slice_alloc0
  (c-name "g_slice_alloc0")
  (return-type "gpointer")
  (parameters
    '("gsize" "block_size")
  )
)

(define-function g_slice_free1
  (c-name "g_slice_free1")
  (return-type "none")
  (parameters
    '("gsize" "block_size")
    '("gpointer" "mem_block")
  )
)

(define-function g_slice_free_chain_with_offset
  (c-name "g_slice_free_chain_with_offset")
  (return-type "none")
  (parameters
    '("gsize" "block_size")
    '("gpointer" "mem_chain")
    '("gsize" "next_offset")
  )
)

(define-function g_slice_set_config
  (c-name "g_slice_set_config")
  (return-type "none")
  (parameters
    '("GSliceConfig" "ckey")
    '("gint64" "value")
  )
)

(define-function g_slice_get_config
  (c-name "g_slice_get_config")
  (return-type "gint64")
  (parameters
    '("GSliceConfig" "ckey")
  )
)

(define-function g_slice_get_config_state
  (c-name "g_slice_get_config_state")
  (return-type "gint64*")
  (parameters
    '("GSliceConfig" "ckey")
    '("gint64" "address")
    '("guint*" "n_values")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gslist.h

(define-function g_slist_alloc
  (c-name "g_slist_alloc")
  (return-type "GSList*")
)

(define-function g_slist_free
  (c-name "g_slist_free")
  (return-type "none")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_free_1
  (c-name "g_slist_free_1")
  (return-type "none")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_append
  (c-name "g_slist_append")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gpointer" "data")
  )
)

(define-function g_slist_prepend
  (c-name "g_slist_prepend")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gpointer" "data")
  )
)

(define-function g_slist_insert
  (c-name "g_slist_insert")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gpointer" "data")
    '("gint" "position")
  )
)

(define-function g_slist_insert_sorted
  (c-name "g_slist_insert_sorted")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-function g_slist_insert_sorted_with_data
  (c-name "g_slist_insert_sorted_with_data")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gpointer" "data")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_slist_insert_before
  (c-name "g_slist_insert_before")
  (return-type "GSList*")
  (parameters
    '("GSList*" "slist")
    '("GSList*" "sibling")
    '("gpointer" "data")
  )
)

(define-function g_slist_concat
  (c-name "g_slist_concat")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list1")
    '("GSList*" "list2")
  )
)

(define-function g_slist_remove
  (c-name "g_slist_remove")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_slist_remove_all
  (c-name "g_slist_remove_all")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_slist_remove_link
  (c-name "g_slist_remove_link")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("GSList*" "link_")
  )
)

(define-function g_slist_delete_link
  (c-name "g_slist_delete_link")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("GSList*" "link_")
  )
)

(define-function g_slist_reverse
  (c-name "g_slist_reverse")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_copy
  (c-name "g_slist_copy")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_nth
  (c-name "g_slist_nth")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("guint" "n")
  )
)

(define-function g_slist_find
  (c-name "g_slist_find")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_slist_find_custom
  (c-name "g_slist_find_custom")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("gconstpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-function g_slist_position
  (c-name "g_slist_position")
  (return-type "gint")
  (parameters
    '("GSList*" "list")
    '("GSList*" "llink")
  )
)

(define-function g_slist_index
  (c-name "g_slist_index")
  (return-type "gint")
  (parameters
    '("GSList*" "list")
    '("gconstpointer" "data")
  )
)

(define-function g_slist_last
  (c-name "g_slist_last")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_length
  (c-name "g_slist_length")
  (return-type "guint")
  (parameters
    '("GSList*" "list")
  )
)

(define-function g_slist_foreach
  (c-name "g_slist_foreach")
  (return-type "none")
  (parameters
    '("GSList*" "list")
    '("GFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_slist_sort
  (c-name "g_slist_sort")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("GCompareFunc" "compare_func")
  )
)

(define-function g_slist_sort_with_data
  (c-name "g_slist_sort_with_data")
  (return-type "GSList*")
  (parameters
    '("GSList*" "list")
    '("GCompareDataFunc" "compare_func")
    '("gpointer" "user_data")
  )
)

(define-function g_slist_nth_data
  (c-name "g_slist_nth_data")
  (return-type "gpointer")
  (parameters
    '("GSList*" "list")
    '("guint" "n")
  )
)

(define-function g_slist_push_allocator
  (c-name "g_slist_push_allocator")
  (return-type "none")
  (parameters
    '("gpointer" "dummy")
  )
)

(define-function g_slist_pop_allocator
  (c-name "g_slist_pop_allocator")
  (return-type "none")
)



;; From /opt/gnome2/include/glib-2.0/glib/gspawn.h

(define-function g_spawn_error_quark
  (c-name "g_spawn_error_quark")
  (return-type "GQuark")
)

(define-function g_spawn_async
  (c-name "g_spawn_async")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "working_directory")
    '("gchar**" "argv")
    '("gchar**" "envp")
    '("GSpawnFlags" "flags")
    '("GSpawnChildSetupFunc" "child_setup")
    '("gpointer" "user_data")
    '("GPid*" "child_pid")
    '("GError**" "error")
  )
)

(define-function g_spawn_async_with_pipes
  (c-name "g_spawn_async_with_pipes")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "working_directory")
    '("gchar**" "argv")
    '("gchar**" "envp")
    '("GSpawnFlags" "flags")
    '("GSpawnChildSetupFunc" "child_setup")
    '("gpointer" "user_data")
    '("GPid*" "child_pid")
    '("gint*" "standard_input")
    '("gint*" "standard_output")
    '("gint*" "standard_error")
    '("GError**" "error")
  )
)

(define-function g_spawn_sync
  (c-name "g_spawn_sync")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "working_directory")
    '("gchar**" "argv")
    '("gchar**" "envp")
    '("GSpawnFlags" "flags")
    '("GSpawnChildSetupFunc" "child_setup")
    '("gpointer" "user_data")
    '("gchar**" "standard_output")
    '("gchar**" "standard_error")
    '("gint*" "exit_status")
    '("GError**" "error")
  )
)

(define-function g_spawn_command_line_sync
  (c-name "g_spawn_command_line_sync")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "command_line")
    '("gchar**" "standard_output")
    '("gchar**" "standard_error")
    '("gint*" "exit_status")
    '("GError**" "error")
  )
)

(define-function g_spawn_command_line_async
  (c-name "g_spawn_command_line_async")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "command_line")
    '("GError**" "error")
  )
)

(define-function g_spawn_close_pid
  (c-name "g_spawn_close_pid")
  (return-type "none")
  (parameters
    '("GPid" "pid")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gstdio.h

(define-function g_access
  (c-name "g_access")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "mode")
  )
)

(define-function g_chdir
  (c-name "g_chdir")
  (return-type "int")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function g_unlink
  (c-name "g_unlink")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_rmdir
  (c-name "g_rmdir")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_access
  (c-name "g_access")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "mode")
  )
)

(define-function g_chmod
  (c-name "g_chmod")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "mode")
  )
)

(define-function g_open
  (c-name "g_open")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "flags")
    '("int" "mode")
  )
)

(define-function g_creat
  (c-name "g_creat")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "mode")
  )
)

(define-function g_rename
  (c-name "g_rename")
  (return-type "int")
  (parameters
    '("const-gchar*" "oldfilename")
    '("const-gchar*" "newfilename")
  )
)

(define-function g_mkdir
  (c-name "g_mkdir")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("int" "mode")
  )
)

(define-function g_chdir
  (c-name "g_chdir")
  (return-type "int")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function g_stat
  (c-name "g_stat")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("struct-stat*" "buf")
  )
)

(define-function g_lstat
  (c-name "g_lstat")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
    '("struct-stat*" "buf")
  )
)

(define-function g_unlink
  (c-name "g_unlink")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_remove
  (c-name "g_remove")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_rmdir
  (c-name "g_rmdir")
  (return-type "int")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function g_fopen
  (c-name "g_fopen")
  (return-type "FILE*")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "mode")
  )
)

(define-function g_freopen
  (c-name "g_freopen")
  (return-type "FILE*")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "mode")
    '("FILE*" "stream")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gstrfuncs.h

(define-function g_ascii_tolower
  (c-name "g_ascii_tolower")
  (return-type "gchar")
  (parameters
    '("gchar" "c")
  )
)

(define-function g_ascii_toupper
  (c-name "g_ascii_toupper")
  (return-type "gchar")
  (parameters
    '("gchar" "c")
  )
)

(define-function g_ascii_digit_value
  (c-name "g_ascii_digit_value")
  (return-type "gint")
  (parameters
    '("gchar" "c")
  )
)

(define-function g_ascii_xdigit_value
  (c-name "g_ascii_xdigit_value")
  (return-type "gint")
  (parameters
    '("gchar" "c")
  )
)

(define-function g_strdelimit
  (c-name "g_strdelimit")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
    '("const-gchar*" "delimiters")
    '("gchar" "new_delimiter")
  )
)

(define-function g_strcanon
  (c-name "g_strcanon")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
    '("const-gchar*" "valid_chars")
    '("gchar" "substitutor")
  )
)

(define-function g_strerror
  (c-name "g_strerror")
  (return-type "const-gchar*")
  (parameters
    '("gint" "errnum")
  )
)

(define-function g_strsignal
  (c-name "g_strsignal")
  (return-type "const-gchar*")
  (parameters
    '("gint" "signum")
  )
)

(define-function g_strreverse
  (c-name "g_strreverse")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
  )
)

(define-function g_strlcpy
  (c-name "g_strlcpy")
  (return-type "gsize")
  (parameters
    '("gchar*" "dest")
    '("const-gchar*" "src")
    '("gsize" "dest_size")
  )
)

(define-function g_strlcat
  (c-name "g_strlcat")
  (return-type "gsize")
  (parameters
    '("gchar*" "dest")
    '("const-gchar*" "src")
    '("gsize" "dest_size")
  )
)

(define-function g_strstr_len
  (c-name "g_strstr_len")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "haystack")
    '("gssize" "haystack_len")
    '("const-gchar*" "needle")
  )
)

(define-function g_strrstr
  (c-name "g_strrstr")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "haystack")
    '("const-gchar*" "needle")
  )
)

(define-function g_strrstr_len
  (c-name "g_strrstr_len")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "haystack")
    '("gssize" "haystack_len")
    '("const-gchar*" "needle")
  )
)

(define-function g_str_has_suffix
  (c-name "g_str_has_suffix")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("const-gchar*" "suffix")
  )
)

(define-function g_str_has_prefix
  (c-name "g_str_has_prefix")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("const-gchar*" "prefix")
  )
)

(define-function g_strtod
  (c-name "g_strtod")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "nptr")
    '("gchar**" "endptr")
  )
)

(define-function g_ascii_strtod
  (c-name "g_ascii_strtod")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "nptr")
    '("gchar**" "endptr")
  )
)

(define-function g_ascii_strtoull
  (c-name "g_ascii_strtoull")
  (return-type "guint64")
  (parameters
    '("const-gchar*" "nptr")
    '("gchar**" "endptr")
    '("guint" "base")
  )
)

(define-function g_ascii_strtoll
  (c-name "g_ascii_strtoll")
  (return-type "gint64")
  (parameters
    '("const-gchar*" "nptr")
    '("gchar**" "endptr")
    '("guint" "base")
  )
)

(define-function g_ascii_dtostr
  (c-name "g_ascii_dtostr")
  (return-type "gchar*")
  (parameters
    '("gchar*" "buffer")
    '("gint" "buf_len")
    '("gdouble" "d")
  )
)

(define-function g_ascii_formatd
  (c-name "g_ascii_formatd")
  (return-type "gchar*")
  (parameters
    '("gchar*" "buffer")
    '("gint" "buf_len")
    '("const-gchar*" "format")
    '("gdouble" "d")
  )
)

(define-function g_strchug
  (c-name "g_strchug")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
  )
)

(define-function g_strchomp
  (c-name "g_strchomp")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
  )
)

(define-function g_ascii_strcasecmp
  (c-name "g_ascii_strcasecmp")
  (return-type "gint")
  (parameters
    '("const-gchar*" "s1")
    '("const-gchar*" "s2")
  )
)

(define-function g_ascii_strncasecmp
  (c-name "g_ascii_strncasecmp")
  (return-type "gint")
  (parameters
    '("const-gchar*" "s1")
    '("const-gchar*" "s2")
    '("gsize" "n")
  )
)

(define-function g_ascii_strdown
  (c-name "g_ascii_strdown")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_ascii_strup
  (c-name "g_ascii_strup")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_strcasecmp
  (c-name "g_strcasecmp")
  (return-type "gint")
  (parameters
    '("const-gchar*" "s1")
    '("const-gchar*" "s2")
  )
)

(define-function g_strncasecmp
  (c-name "g_strncasecmp")
  (return-type "gint")
  (parameters
    '("const-gchar*" "s1")
    '("const-gchar*" "s2")
    '("guint" "n")
  )
)

(define-function g_strdown
  (c-name "g_strdown")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
  )
)

(define-function g_strup
  (c-name "g_strup")
  (return-type "gchar*")
  (parameters
    '("gchar*" "string")
  )
)

(define-function g_strdup
  (c-name "g_strdup")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-function g_strdup_printf
  (c-name "g_strdup_printf")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_strdup_vprintf
  (c-name "g_strdup_vprintf")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "format")
    '("va_list" "args")
  )
)

(define-function g_strndup
  (c-name "g_strndup")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gsize" "n")
  )
)

(define-function g_strnfill
  (c-name "g_strnfill")
  (return-type "gchar*")
  (parameters
    '("gsize" "length")
    '("gchar" "fill_char")
  )
)

(define-function g_strconcat
  (c-name "g_strconcat")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "string1")
  )
  (varargs #t)
)

(define-function g_strjoin
  (c-name "g_strjoin")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "separator")
  )
  (varargs #t)
)

(define-function g_strcompress
  (c-name "g_strcompress")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "source")
  )
)

(define-function g_strescape
  (c-name "g_strescape")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "source")
    '("const-gchar*" "exceptions")
  )
)

(define-function g_memdup
  (c-name "g_memdup")
  (return-type "gpointer")
  (parameters
    '("gconstpointer" "mem")
    '("guint" "byte_size")
  )
)

(define-function g_strsplit
  (c-name "g_strsplit")
  (return-type "gchar**")
  (parameters
    '("const-gchar*" "string")
    '("const-gchar*" "delimiter")
    '("gint" "max_tokens")
  )
)

(define-function g_strsplit_set
  (c-name "g_strsplit_set")
  (return-type "gchar**")
  (parameters
    '("const-gchar*" "string")
    '("const-gchar*" "delimiters")
    '("gint" "max_tokens")
  )
)

(define-function g_strjoinv
  (c-name "g_strjoinv")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "separator")
    '("gchar**" "str_array")
  )
)

(define-function g_strfreev
  (c-name "g_strfreev")
  (return-type "none")
  (parameters
    '("gchar**" "str_array")
  )
)

(define-function g_strdupv
  (c-name "g_strdupv")
  (return-type "gchar**")
  (parameters
    '("gchar**" "str_array")
  )
)

(define-function g_strv_length
  (c-name "g_strv_length")
  (return-type "guint")
  (parameters
    '("gchar**" "str_array")
  )
)

(define-function g_stpcpy
  (c-name "g_stpcpy")
  (return-type "gchar*")
  (parameters
    '("gchar*" "dest")
    '("const-char*" "src")
  )
)

(define-function g_strip_context
  (c-name "g_strip_context")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "msgid")
    '("const-gchar*" "msgval")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gstring.h

(define-function g_string_chunk_new
  (c-name "g_string_chunk_new")
  (is-constructor-of "GStringChunk")
  (return-type "GStringChunk*")
  (parameters
    '("gsize" "size")
  )
)

(define-function g_string_chunk_free
  (c-name "g_string_chunk_free")
  (return-type "none")
  (parameters
    '("GStringChunk*" "chunk")
  )
)

(define-function g_string_chunk_insert
  (c-name "g_string_chunk_insert")
  (return-type "gchar*")
  (parameters
    '("GStringChunk*" "chunk")
    '("const-gchar*" "string")
  )
)

(define-function g_string_chunk_insert_len
  (c-name "g_string_chunk_insert_len")
  (return-type "gchar*")
  (parameters
    '("GStringChunk*" "chunk")
    '("const-gchar*" "string")
    '("gssize" "len")
  )
)

(define-function g_string_new
  (c-name "g_string_new")
  (is-constructor-of "GString")
  (return-type "GString*")
  (parameters
    '("const-gchar*" "init")
  )
)

(define-function g_string_new_len
  (c-name "g_string_new_len")
  (return-type "GString*")
  (parameters
    '("const-gchar*" "init")
    '("gssize" "len")
  )
)

(define-function g_string_sized_new
  (c-name "g_string_sized_new")
  (is-constructor-of "GStringSized")
  (return-type "GString*")
  (parameters
    '("gsize" "dfl_size")
  )
)

(define-function g_string_free
  (c-name "g_string_free")
  (return-type "gchar*")
  (parameters
    '("GString*" "string")
    '("gboolean" "free_segment")
  )
)

(define-function g_string_equal
  (c-name "g_string_equal")
  (return-type "gboolean")
  (parameters
    '("const-GString*" "v")
    '("const-GString*" "v2")
  )
)

(define-function g_string_hash
  (c-name "g_string_hash")
  (return-type "guint")
  (parameters
    '("const-GString*" "str")
  )
)

(define-function g_string_assign
  (c-name "g_string_assign")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "rval")
  )
)

(define-function g_string_truncate
  (c-name "g_string_truncate")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gsize" "len")
  )
)

(define-function g_string_set_size
  (c-name "g_string_set_size")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gsize" "len")
  )
)

(define-function g_string_insert_len
  (c-name "g_string_insert_len")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gssize" "pos")
    '("const-gchar*" "val")
    '("gssize" "len")
  )
)

(define-function g_string_append
  (c-name "g_string_append")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "val")
  )
)

(define-function g_string_append_len
  (c-name "g_string_append_len")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "val")
    '("gssize" "len")
  )
)

(define-function g_string_append_c
  (c-name "g_string_append_c")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gchar" "c")
  )
)

(define-function g_string_append_unichar
  (c-name "g_string_append_unichar")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gunichar" "wc")
  )
)

(define-function g_string_prepend
  (c-name "g_string_prepend")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "val")
  )
)

(define-function g_string_prepend_c
  (c-name "g_string_prepend_c")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gchar" "c")
  )
)

(define-function g_string_prepend_unichar
  (c-name "g_string_prepend_unichar")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gunichar" "wc")
  )
)

(define-function g_string_prepend_len
  (c-name "g_string_prepend_len")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "val")
    '("gssize" "len")
  )
)

(define-function g_string_insert
  (c-name "g_string_insert")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gssize" "pos")
    '("const-gchar*" "val")
  )
)

(define-function g_string_insert_c
  (c-name "g_string_insert_c")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gssize" "pos")
    '("gchar" "c")
  )
)

(define-function g_string_insert_unichar
  (c-name "g_string_insert_unichar")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gssize" "pos")
    '("gunichar" "wc")
  )
)

(define-function g_string_erase
  (c-name "g_string_erase")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
    '("gssize" "pos")
    '("gssize" "len")
  )
)

(define-function g_string_ascii_down
  (c-name "g_string_ascii_down")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
  )
)

(define-function g_string_ascii_up
  (c-name "g_string_ascii_up")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
  )
)

(define-function g_string_printf
  (c-name "g_string_printf")
  (return-type "none")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_string_append_printf
  (c-name "g_string_append_printf")
  (return-type "none")
  (parameters
    '("GString*" "string")
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function g_string_append_c_inline
  (c-name "g_string_append_c_inline")
  (return-type "static-inline-GString*")
  (parameters
    '("GString*" "gstring")
    '("gchar" "c")
  )
)

(define-function g_string_up
  (c-name "g_string_up")
  (return-type "GString*")
  (parameters
    '("GString*" "string")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gthread.h

(define-function g_thread_error_quark
  (c-name "g_thread_error_quark")
  (return-type "extern-GQuark")
)

(define-function guint64
  (c-name "guint64")
  (return-type "GLIB_VAR")
  (parameters
  )
)

(define-function g_thread_init
  (c-name "g_thread_init")
  (return-type "none")
  (parameters
    '("GThreadFunctions*" "vtable")
  )
)

(define-function g_thread_init_with_errorcheck_mutexes
  (c-name "g_thread_init_with_errorcheck_mutexes")
  (return-type "none")
  (parameters
    '("GThreadFunctions*" "vtable")
  )
)

(define-function g_static_mutex_get_mutex_impl
  (c-name "g_static_mutex_get_mutex_impl")
  (return-type "GMutex*")
  (parameters
    '("GMutex**" "mutex")
  )
)

(define-function g_thread_create_full
  (c-name "g_thread_create_full")
  (return-type "GThread*")
  (parameters
    '("GThreadFunc" "func")
    '("gpointer" "data")
    '("gulong" "stack_size")
    '("gboolean" "joinable")
    '("gboolean" "bound")
    '("GThreadPriority" "priority")
    '("GError**" "error")
  )
)

(define-function g_thread_self
  (c-name "g_thread_self")
  (return-type "GThread*")
)

(define-function g_thread_exit
  (c-name "g_thread_exit")
  (return-type "none")
  (parameters
    '("gpointer" "retval")
  )
)

(define-function g_thread_join
  (c-name "g_thread_join")
  (return-type "gpointer")
  (parameters
    '("GThread*" "thread")
  )
)

(define-function g_thread_set_priority
  (c-name "g_thread_set_priority")
  (return-type "none")
  (parameters
    '("GThread*" "thread")
    '("GThreadPriority" "priority")
  )
)

(define-function g_static_mutex_init
  (c-name "g_static_mutex_init")
  (return-type "none")
  (parameters
    '("GStaticMutex*" "mutex")
  )
)

(define-function g_static_mutex_free
  (c-name "g_static_mutex_free")
  (return-type "none")
  (parameters
    '("GStaticMutex*" "mutex")
  )
)

(define-function g_static_private_init
  (c-name "g_static_private_init")
  (return-type "none")
  (parameters
    '("GStaticPrivate*" "private_key")
  )
)

(define-function g_static_private_get
  (c-name "g_static_private_get")
  (return-type "gpointer")
  (parameters
    '("GStaticPrivate*" "private_key")
  )
)

(define-function g_static_private_set
  (c-name "g_static_private_set")
  (return-type "none")
  (parameters
    '("GStaticPrivate*" "private_key")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function g_static_private_free
  (c-name "g_static_private_free")
  (return-type "none")
  (parameters
    '("GStaticPrivate*" "private_key")
  )
)

(define-function g_static_rec_mutex_init
  (c-name "g_static_rec_mutex_init")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rec_mutex_lock
  (c-name "g_static_rec_mutex_lock")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rec_mutex_trylock
  (c-name "g_static_rec_mutex_trylock")
  (return-type "gboolean")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rec_mutex_unlock
  (c-name "g_static_rec_mutex_unlock")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rec_mutex_lock_full
  (c-name "g_static_rec_mutex_lock_full")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
    '("guint" "depth")
  )
)

(define-function g_static_rec_mutex_unlock_full
  (c-name "g_static_rec_mutex_unlock_full")
  (return-type "guint")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rec_mutex_free
  (c-name "g_static_rec_mutex_free")
  (return-type "none")
  (parameters
    '("GStaticRecMutex*" "mutex")
  )
)

(define-function g_static_rw_lock_init
  (c-name "g_static_rw_lock_init")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_reader_lock
  (c-name "g_static_rw_lock_reader_lock")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_reader_trylock
  (c-name "g_static_rw_lock_reader_trylock")
  (return-type "gboolean")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_reader_unlock
  (c-name "g_static_rw_lock_reader_unlock")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_writer_lock
  (c-name "g_static_rw_lock_writer_lock")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_writer_trylock
  (c-name "g_static_rw_lock_writer_trylock")
  (return-type "gboolean")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_writer_unlock
  (c-name "g_static_rw_lock_writer_unlock")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_static_rw_lock_free
  (c-name "g_static_rw_lock_free")
  (return-type "none")
  (parameters
    '("GStaticRWLock*" "lock")
  )
)

(define-function g_thread_foreach
  (c-name "g_thread_foreach")
  (return-type "none")
  (parameters
    '("GFunc" "thread_func")
    '("gpointer" "user_data")
  )
)

(define-function g_once_impl
  (c-name "g_once_impl")
  (return-type "gpointer")
  (parameters
    '("GOnce*" "once")
    '("GThreadFunc" "func")
    '("gpointer" "arg")
  )
)

(define-function glib_dummy_decl
  (c-name "glib_dummy_decl")
  (return-type "extern-void")
)



;; From /opt/gnome2/include/glib-2.0/glib/gthreadpool.h

(define-function g_thread_pool_new
  (c-name "g_thread_pool_new")
  (is-constructor-of "GThreadPool")
  (return-type "GThreadPool*")
  (parameters
    '("GFunc" "func")
    '("gpointer" "user_data")
    '("gint" "max_threads")
    '("gboolean" "exclusive")
    '("GError**" "error")
  )
)

(define-function g_thread_pool_push
  (c-name "g_thread_pool_push")
  (return-type "none")
  (parameters
    '("GThreadPool*" "pool")
    '("gpointer" "data")
    '("GError**" "error")
  )
)

(define-function g_thread_pool_set_max_threads
  (c-name "g_thread_pool_set_max_threads")
  (return-type "none")
  (parameters
    '("GThreadPool*" "pool")
    '("gint" "max_threads")
    '("GError**" "error")
  )
)

(define-function g_thread_pool_get_max_threads
  (c-name "g_thread_pool_get_max_threads")
  (return-type "gint")
  (parameters
    '("GThreadPool*" "pool")
  )
)

(define-function g_thread_pool_get_num_threads
  (c-name "g_thread_pool_get_num_threads")
  (return-type "guint")
  (parameters
    '("GThreadPool*" "pool")
  )
)

(define-function g_thread_pool_unprocessed
  (c-name "g_thread_pool_unprocessed")
  (return-type "guint")
  (parameters
    '("GThreadPool*" "pool")
  )
)

(define-function g_thread_pool_free
  (c-name "g_thread_pool_free")
  (return-type "none")
  (parameters
    '("GThreadPool*" "pool")
    '("gboolean" "immediate")
    '("gboolean" "wait_")
  )
)

(define-function g_thread_pool_set_max_unused_threads
  (c-name "g_thread_pool_set_max_unused_threads")
  (return-type "none")
  (parameters
    '("gint" "max_threads")
  )
)

(define-function g_thread_pool_get_max_unused_threads
  (c-name "g_thread_pool_get_max_unused_threads")
  (return-type "gint")
)

(define-function g_thread_pool_get_num_unused_threads
  (c-name "g_thread_pool_get_num_unused_threads")
  (return-type "guint")
)

(define-function g_thread_pool_stop_unused_threads
  (c-name "g_thread_pool_stop_unused_threads")
  (return-type "none")
)

(define-function g_thread_pool_set_sort_function
  (c-name "g_thread_pool_set_sort_function")
  (return-type "none")
  (parameters
    '("GThreadPool*" "pool")
    '("GCompareDataFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_thread_pool_set_max_idle_time
  (c-name "g_thread_pool_set_max_idle_time")
  (return-type "none")
  (parameters
    '("guint" "interval")
  )
)

(define-function g_thread_pool_get_max_idle_time
  (c-name "g_thread_pool_get_max_idle_time")
  (return-type "guint")
)



;; From /opt/gnome2/include/glib-2.0/glib/gtimer.h

(define-function g_timer_new
  (c-name "g_timer_new")
  (is-constructor-of "GTimer")
  (return-type "GTimer*")
)

(define-function g_timer_destroy
  (c-name "g_timer_destroy")
  (return-type "none")
  (parameters
    '("GTimer*" "timer")
  )
)

(define-function g_timer_start
  (c-name "g_timer_start")
  (return-type "none")
  (parameters
    '("GTimer*" "timer")
  )
)

(define-function g_timer_stop
  (c-name "g_timer_stop")
  (return-type "none")
  (parameters
    '("GTimer*" "timer")
  )
)

(define-function g_timer_reset
  (c-name "g_timer_reset")
  (return-type "none")
  (parameters
    '("GTimer*" "timer")
  )
)

(define-function g_timer_continue
  (c-name "g_timer_continue")
  (return-type "none")
  (parameters
    '("GTimer*" "timer")
  )
)

(define-function g_timer_elapsed
  (c-name "g_timer_elapsed")
  (return-type "gdouble")
  (parameters
    '("GTimer*" "timer")
    '("gulong*" "microseconds")
  )
)

(define-function g_usleep
  (c-name "g_usleep")
  (return-type "none")
  (parameters
    '("gulong" "microseconds")
  )
)

(define-function g_time_val_add
  (c-name "g_time_val_add")
  (return-type "none")
  (parameters
    '("GTimeVal*" "time_")
    '("glong" "microseconds")
  )
)

(define-function g_time_val_from_iso8601
  (c-name "g_time_val_from_iso8601")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "iso_date")
    '("GTimeVal*" "time_")
  )
)

(define-function g_time_val_to_iso8601
  (c-name "g_time_val_to_iso8601")
  (return-type "gchar*")
  (parameters
    '("GTimeVal*" "time_")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gtree.h

(define-function g_tree_new
  (c-name "g_tree_new")
  (is-constructor-of "GTree")
  (return-type "GTree*")
  (parameters
    '("GCompareFunc" "key_compare_func")
  )
)

(define-function g_tree_new_with_data
  (c-name "g_tree_new_with_data")
  (return-type "GTree*")
  (parameters
    '("GCompareDataFunc" "key_compare_func")
    '("gpointer" "key_compare_data")
  )
)

(define-function g_tree_new_full
  (c-name "g_tree_new_full")
  (return-type "GTree*")
  (parameters
    '("GCompareDataFunc" "key_compare_func")
    '("gpointer" "key_compare_data")
    '("GDestroyNotify" "key_destroy_func")
    '("GDestroyNotify" "value_destroy_func")
  )
)

(define-function g_tree_destroy
  (c-name "g_tree_destroy")
  (return-type "none")
  (parameters
    '("GTree*" "tree")
  )
)

(define-function g_tree_insert
  (c-name "g_tree_insert")
  (return-type "none")
  (parameters
    '("GTree*" "tree")
    '("gpointer" "key")
    '("gpointer" "value")
  )
)

(define-function g_tree_replace
  (c-name "g_tree_replace")
  (return-type "none")
  (parameters
    '("GTree*" "tree")
    '("gpointer" "key")
    '("gpointer" "value")
  )
)

(define-function g_tree_remove
  (c-name "g_tree_remove")
  (return-type "gboolean")
  (parameters
    '("GTree*" "tree")
    '("gconstpointer" "key")
  )
)

(define-function g_tree_steal
  (c-name "g_tree_steal")
  (return-type "gboolean")
  (parameters
    '("GTree*" "tree")
    '("gconstpointer" "key")
  )
)

(define-function g_tree_lookup
  (c-name "g_tree_lookup")
  (return-type "gpointer")
  (parameters
    '("GTree*" "tree")
    '("gconstpointer" "key")
  )
)

(define-function g_tree_lookup_extended
  (c-name "g_tree_lookup_extended")
  (return-type "gboolean")
  (parameters
    '("GTree*" "tree")
    '("gconstpointer" "lookup_key")
    '("gpointer*" "orig_key")
    '("gpointer*" "value")
  )
)

(define-function g_tree_foreach
  (c-name "g_tree_foreach")
  (return-type "none")
  (parameters
    '("GTree*" "tree")
    '("GTraverseFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function g_tree_traverse
  (c-name "g_tree_traverse")
  (return-type "none")
  (parameters
    '("GTree*" "tree")
    '("GTraverseFunc" "traverse_func")
    '("GTraverseType" "traverse_type")
    '("gpointer" "user_data")
  )
)

(define-function g_tree_search
  (c-name "g_tree_search")
  (return-type "gpointer")
  (parameters
    '("GTree*" "tree")
    '("GCompareFunc" "search_func")
    '("gconstpointer" "user_data")
  )
)

(define-function g_tree_height
  (c-name "g_tree_height")
  (return-type "gint")
  (parameters
    '("GTree*" "tree")
  )
)

(define-function g_tree_nnodes
  (c-name "g_tree_nnodes")
  (return-type "gint")
  (parameters
    '("GTree*" "tree")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gtypes.h



;; From /opt/gnome2/include/glib-2.0/glib/gunicode.h

(define-function g_get_charset
  (c-name "g_get_charset")
  (return-type "gboolean")
  (parameters
    '("const-char**" "charset")
  )
)

(define-function g_unichar_isalnum
  (c-name "g_unichar_isalnum")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isalpha
  (c-name "g_unichar_isalpha")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_iscntrl
  (c-name "g_unichar_iscntrl")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isdigit
  (c-name "g_unichar_isdigit")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isgraph
  (c-name "g_unichar_isgraph")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_islower
  (c-name "g_unichar_islower")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isprint
  (c-name "g_unichar_isprint")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_ispunct
  (c-name "g_unichar_ispunct")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isspace
  (c-name "g_unichar_isspace")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isupper
  (c-name "g_unichar_isupper")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isxdigit
  (c-name "g_unichar_isxdigit")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_istitle
  (c-name "g_unichar_istitle")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_isdefined
  (c-name "g_unichar_isdefined")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_iswide
  (c-name "g_unichar_iswide")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_iswide_cjk
  (c-name "g_unichar_iswide_cjk")
  (return-type "gboolean")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_toupper
  (c-name "g_unichar_toupper")
  (return-type "gunichar")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_tolower
  (c-name "g_unichar_tolower")
  (return-type "gunichar")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_totitle
  (c-name "g_unichar_totitle")
  (return-type "gunichar")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_digit_value
  (c-name "g_unichar_digit_value")
  (return-type "gint")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_xdigit_value
  (c-name "g_unichar_xdigit_value")
  (return-type "gint")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_type
  (c-name "g_unichar_type")
  (return-type "GUnicodeType")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unichar_break_type
  (c-name "g_unichar_break_type")
  (return-type "GUnicodeBreakType")
  (parameters
    '("gunichar" "c")
  )
)

(define-function g_unicode_canonical_ordering
  (c-name "g_unicode_canonical_ordering")
  (return-type "none")
  (parameters
    '("gunichar*" "string")
    '("gsize" "len")
  )
)

(define-function g_unicode_canonical_decomposition
  (c-name "g_unicode_canonical_decomposition")
  (return-type "gunichar*")
  (parameters
    '("gunichar" "ch")
    '("gsize*" "result_len")
  )
)

(define-function g_utf8_get_char
  (c-name "g_utf8_get_char")
  (return-type "gunichar")
  (parameters
    '("const-gchar*" "p")
  )
)

(define-function g_utf8_get_char_validated
  (c-name "g_utf8_get_char_validated")
  (return-type "gunichar")
  (parameters
    '("const-gchar*" "p")
    '("gssize" "max_len")
  )
)

(define-function g_utf8_offset_to_pointer
  (c-name "g_utf8_offset_to_pointer")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("glong" "offset")
  )
)

(define-function g_utf8_pointer_to_offset
  (c-name "g_utf8_pointer_to_offset")
  (return-type "glong")
  (parameters
    '("const-gchar*" "str")
    '("const-gchar*" "pos")
  )
)

(define-function g_utf8_prev_char
  (c-name "g_utf8_prev_char")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "p")
  )
)

(define-function g_utf8_find_next_char
  (c-name "g_utf8_find_next_char")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "p")
    '("const-gchar*" "end")
  )
)

(define-function g_utf8_find_prev_char
  (c-name "g_utf8_find_prev_char")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("const-gchar*" "p")
  )
)

(define-function g_utf8_strlen
  (c-name "g_utf8_strlen")
  (return-type "glong")
  (parameters
    '("const-gchar*" "p")
    '("gssize" "max")
  )
)

(define-function g_utf8_strncpy
  (c-name "g_utf8_strncpy")
  (return-type "gchar*")
  (parameters
    '("gchar*" "dest")
    '("const-gchar*" "src")
    '("gsize" "n")
  )
)

(define-function g_utf8_strchr
  (c-name "g_utf8_strchr")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "p")
    '("gssize" "len")
    '("gunichar" "c")
  )
)

(define-function g_utf8_strrchr
  (c-name "g_utf8_strrchr")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "p")
    '("gssize" "len")
    '("gunichar" "c")
  )
)

(define-function g_utf8_strreverse
  (c-name "g_utf8_strreverse")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_utf8_to_utf16
  (c-name "g_utf8_to_utf16")
  (return-type "gunichar2*")
  (parameters
    '("const-gchar*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_utf8_to_ucs4
  (c-name "g_utf8_to_ucs4")
  (return-type "gunichar*")
  (parameters
    '("const-gchar*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_utf8_to_ucs4_fast
  (c-name "g_utf8_to_ucs4_fast")
  (return-type "gunichar*")
  (parameters
    '("const-gchar*" "str")
    '("glong" "len")
    '("glong*" "items_written")
  )
)

(define-function g_utf16_to_ucs4
  (c-name "g_utf16_to_ucs4")
  (return-type "gunichar*")
  (parameters
    '("const-gunichar2*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_utf16_to_utf8
  (c-name "g_utf16_to_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gunichar2*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_ucs4_to_utf16
  (c-name "g_ucs4_to_utf16")
  (return-type "gunichar2*")
  (parameters
    '("const-gunichar*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_ucs4_to_utf8
  (c-name "g_ucs4_to_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gunichar*" "str")
    '("glong" "len")
    '("glong*" "items_read")
    '("glong*" "items_written")
    '("GError**" "error")
  )
)

(define-function g_unichar_to_utf8
  (c-name "g_unichar_to_utf8")
  (return-type "gint")
  (parameters
    '("gunichar" "c")
    '("gchar*" "outbuf")
  )
)

(define-function g_utf8_validate
  (c-name "g_utf8_validate")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "max_len")
    '("const-gchar**" "end")
  )
)

(define-function g_unichar_validate
  (c-name "g_unichar_validate")
  (return-type "gboolean")
  (parameters
    '("gunichar" "ch")
  )
)

(define-function g_utf8_strup
  (c-name "g_utf8_strup")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_utf8_strdown
  (c-name "g_utf8_strdown")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_utf8_casefold
  (c-name "g_utf8_casefold")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_utf8_normalize
  (c-name "g_utf8_normalize")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
    '("GNormalizeMode" "mode")
  )
)

(define-function g_utf8_collate
  (c-name "g_utf8_collate")
  (return-type "gint")
  (parameters
    '("const-gchar*" "str1")
    '("const-gchar*" "str2")
  )
)

(define-function g_utf8_collate_key
  (c-name "g_utf8_collate_key")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_utf8_collate_key_for_filename
  (c-name "g_utf8_collate_key_for_filename")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
    '("gssize" "len")
  )
)

(define-function g_unichar_get_mirror_char
  (c-name "g_unichar_get_mirror_char")
  (return-type "gboolean")
  (parameters
    '("gunichar" "ch")
    '("gunichar*" "mirrored_ch")
  )
)

(define-function _g_utf8_make_valid
  (c-name "_g_utf8_make_valid")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "name")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gutils.h

(define-function g_get_user_name
  (c-name "g_get_user_name")
  (return-type "const-gchar*")
)

(define-function g_get_real_name
  (c-name "g_get_real_name")
  (return-type "const-gchar*")
)

(define-function g_get_home_dir
  (c-name "g_get_home_dir")
  (return-type "const-gchar*")
)

(define-function g_get_tmp_dir
  (c-name "g_get_tmp_dir")
  (return-type "const-gchar*")
)

(define-function g_get_host_name
  (c-name "g_get_host_name")
  (return-type "const-gchar*")
)

(define-function g_get_prgname
  (c-name "g_get_prgname")
  (return-type "gchar*")
)

(define-function g_set_prgname
  (c-name "g_set_prgname")
  (return-type "none")
  (parameters
    '("const-gchar*" "prgname")
  )
)

(define-function g_get_application_name
  (c-name "g_get_application_name")
  (return-type "const-gchar*")
)

(define-function g_set_application_name
  (c-name "g_set_application_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "application_name")
  )
)

(define-function g_get_user_data_dir
  (c-name "g_get_user_data_dir")
  (return-type "const-gchar*")
)

(define-function g_get_user_config_dir
  (c-name "g_get_user_config_dir")
  (return-type "const-gchar*")
)

(define-function g_get_user_cache_dir
  (c-name "g_get_user_cache_dir")
  (return-type "const-gchar*")
)

(define-function g_get_system_data_dirs
  (c-name "g_get_system_data_dirs")
  (return-type "const-gchar*-G_CONST_RETURN*")
)

(define-function g_win32_get_system_data_dirs_for_module
  (c-name "g_win32_get_system_data_dirs_for_module")
  (return-type "const-gchar*-G_CONST_RETURN*")
  (parameters
    '("gconstpointer" "address")
  )
)

(define-function g_win32_get_system_data_dirs
  (c-name "g_win32_get_system_data_dirs")
  (return-type "static-inline-const-gchar*-G_CONST_RETURN*")
)

(define-function g_get_language_names
  (c-name "g_get_language_names")
  (return-type "const-gchar*-G_CONST_RETURN*")
)

(define-function g_parse_debug_string
  (c-name "g_parse_debug_string")
  (return-type "guint")
  (parameters
    '("const-gchar*" "string")
    '("const-GDebugKey*" "keys")
    '("guint" "nkeys")
  )
)

(define-function g_snprintf
  (c-name "g_snprintf")
  (return-type "gint")
  (parameters
    '("gchar*" "string")
    '("gulong" "n")
    '("gchar-const*" "format")
  )
  (varargs #t)
)

(define-function g_vsnprintf
  (c-name "g_vsnprintf")
  (return-type "gint")
  (parameters
    '("gchar*" "string")
    '("gulong" "n")
    '("gchar-const*" "format")
    '("va_list" "args")
  )
)

(define-function g_path_is_absolute
  (c-name "g_path_is_absolute")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function g_path_skip_root
  (c-name "g_path_skip_root")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function g_basename
  (c-name "g_basename")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function g_get_current_dir
  (c-name "g_get_current_dir")
  (return-type "gchar*")
)

(define-function g_path_get_basename
  (c-name "g_path_get_basename")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function g_path_get_dirname
  (c-name "g_path_get_dirname")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function g_nullify_pointer
  (c-name "g_nullify_pointer")
  (return-type "none")
  (parameters
    '("gpointer*" "nullify_location")
  )
)

(define-function g_getenv
  (c-name "g_getenv")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "variable")
  )
)

(define-function g_setenv
  (c-name "g_setenv")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "variable")
    '("const-gchar*" "value")
    '("gboolean" "overwrite")
  )
)

(define-function g_unsetenv
  (c-name "g_unsetenv")
  (return-type "none")
  (parameters
    '("const-gchar*" "variable")
  )
)

(define-function g_listenv
  (c-name "g_listenv")
  (return-type "gchar**")
)

(define-function _g_getenv_nomalloc
  (c-name "_g_getenv_nomalloc")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "variable")
    '("gchar" "buffer[1024]")
  )
)

(define-function g_atexit
  (c-name "g_atexit")
  (return-type "none")
  (parameters
    '("GVoidFunc" "func")
  )
)

(define-function atexit
  (c-name "atexit")
  (return-type "int")
  (parameters
    '("void" "(*")
  )
)

(define-function g_find_program_in_path
  (c-name "g_find_program_in_path")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "program")
  )
)

(define-function g_bit_nth_lsf
  (c-name "g_bit_nth_lsf")
  (return-type "G_INLINE_FUNC-gint")
  (parameters
    '("gulong" "mask")
    '("gint" "nth_bit")
  )
)

(define-function g_bit_nth_msf
  (c-name "g_bit_nth_msf")
  (return-type "G_INLINE_FUNC-gint")
  (parameters
    '("gulong" "mask")
    '("gint" "nth_bit")
  )
)

(define-function g_bit_storage
  (c-name "g_bit_storage")
  (return-type "G_INLINE_FUNC-guint")
  (parameters
    '("gulong" "number")
  )
)

(define-function g_trash_stack_push
  (c-name "g_trash_stack_push")
  (return-type "G_INLINE_FUNC-void")
  (parameters
    '("GTrashStack**" "stack_p")
    '("gpointer" "data_p")
  )
)

(define-function g_trash_stack_pop
  (c-name "g_trash_stack_pop")
  (return-type "G_INLINE_FUNC-gpointer")
  (parameters
    '("GTrashStack**" "stack_p")
  )
)

(define-function g_trash_stack_peek
  (c-name "g_trash_stack_peek")
  (return-type "G_INLINE_FUNC-gpointer")
  (parameters
    '("GTrashStack**" "stack_p")
  )
)

(define-function g_trash_stack_height
  (c-name "g_trash_stack_height")
  (return-type "G_INLINE_FUNC-guint")
  (parameters
    '("GTrashStack**" "stack_p")
  )
)

(define-function g_bit_nth_lsf
  (c-name "g_bit_nth_lsf")
  (return-type "G_INLINE_FUNC-gint")
  (parameters
    '("gulong" "mask")
    '("gint" "nth_bit")
  )
)

(define-function glib_check_version
  (c-name "glib_check_version")
  (return-type "const-gchar*")
  (parameters
    '("guint" "required_major")
    '("guint" "required_minor")
    '("guint" "required_micro")
  )
)



;; From /opt/gnome2/include/glib-2.0/glib/gwin32.h

(define-function g_win32_ftruncate
  (c-name "g_win32_ftruncate")
  (return-type "gint")
  (parameters
    '("gint" "f")
    '("guint" "size")
  )
)

(define-function g_win32_getlocale
  (c-name "g_win32_getlocale")
  (return-type "gchar*")
)

(define-function g_win32_error_message
  (c-name "g_win32_error_message")
  (return-type "gchar*")
  (parameters
    '("gint" "error")
  )
)

(define-function g_win32_get_package_installation_directory
  (c-name "g_win32_get_package_installation_directory")
  (return-type "gchar*")
  (parameters
    '("gchar*" "package")
    '("gchar*" "dll_name")
  )
)

(define-function g_win32_get_package_installation_subdirectory
  (c-name "g_win32_get_package_installation_subdirectory")
  (return-type "gchar*")
  (parameters
    '("gchar*" "package")
    '("gchar*" "dll_name")
    '("gchar*" "subdir")
  )
)

(define-function g_win32_get_windows_version
  (c-name "g_win32_get_windows_version")
  (return-type "guint")
)

(define-function g_win32_locale_filename_from_utf8
  (c-name "g_win32_locale_filename_from_utf8")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "utf8filename")
  )
)


