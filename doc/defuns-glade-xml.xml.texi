
@c %start of fragment

@deftp Class <glade-xml>
This @code{<gobject>} class defines no properties, other than those defined by
its superclasses.

@end deftp

@deffn Function glade-xml-new  (fname@tie{}@code{mchars}) (root@tie{}@code{mchars}) (domain@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{<glade-xml>})
Creates a new GladeXML object (and the corresponding widgets) from the XML file
@var{fname}. Optionally it will only build the interface from the widget node
@var{root} (if it is not @samp{@code{#f}}). This feature is useful if you only
want to build say a toolbar or menu from the XML file, but not the window it is
embedded in. Note also that the XML parse tree is cached to speed up creating
another GladeXML object for the same file

@table @var
@item fname
the XML file name.

@item root
the widget node in @var{fname} to start building from (or @samp{@code{#f}})

@item domain
the translation domain for the XML file (or @samp{@code{#f}} for default)

@item ret
the newly created GladeXML object, or NULL on failure.

@end table

@end deffn

@deffn Function glade-xml-new-from-buffer  (buffer@tie{}@code{mchars}) (root@tie{}@code{mchars}) (domain@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{<glade-xml>})
Creates a new GladeXML object (and the corresponding widgets) from the buffer
@var{buffer}. Optionally it will only build the interface from the widget node
@var{root} (if it is not @samp{@code{#f}}). This feature is useful if you only
want to build say a toolbar or menu from the XML document, but not the window it
is embedded in.

@table @var
@item buffer
the memory buffer containing the XML document.

@item size
the size of the buffer.

@item root
the widget node in @var{buffer} to start building from (or @samp{@code{#f}})

@item domain
the translation domain to use for this interface (or @samp{@code{#f}})

@item ret
the newly created GladeXML object, or NULL on failure.

@end table

@end deffn

@deffn Function glade-xml-signal-connect  (self@tie{}@code{<glade-xml>}) (handlername@tie{}@code{mchars}) (proc@tie{}@code{scm})
@deffnx Method signal-connect
In the glade interface descriptions, signal handlers are specified for widgets
by name. This function allows you to connect a C function to all signals in the
GladeXML file with the given signal handler name.

@table @var
@item self
the GladeXML object

@item handlername
the signal handler name

@item func
the signal handler function

@end table

@end deffn

@deffn Function glade-xml-signal-autoconnect  (self@tie{}@code{<glade-xml>}) (module@tie{}@code{scm})
@deffnx Method signal-autoconnect
This function is a variation of glade_xml_signal_connect. It uses gmodule's
introspective features (by openning the module @samp{@code{#f}}) to look at the
application's symbol table. From here it tries to match the signal handler names
given in the interface description with symbols in the application and connects
the signals.

Note that this function will not work correctly if gmodule is not supported on
the platform.

@table @var
@item self
the GladeXML object.

@end table

@end deffn

@deffn Function glade-xml-get-widget  (self@tie{}@code{<glade-xml>}) (name@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{<gtk-widget>})
@deffnx Method get-widget
This function is used to get a pointer to the GtkWidget corresponding to
@var{name} in the interface description. You would use this if you have to do
anything to the widget after loading.

@table @var
@item self
the GladeXML object.

@item name
the name of the widget.

@item ret
the widget matching @var{name}, or @samp{@code{#f}} if none exists.

@end table

@end deffn

@deffn Function glade-xml-get-widget-prefix  (self@tie{}@code{<glade-xml>}) (name@tie{}@code{mchars}) @result{}@tie{} (ret@tie{}@code{glist-of})
@deffnx Method get-widget-prefix
This function is used to get a list of pointers to the GtkWidget(s) with names
that start with the string @var{name} in the interface description. You would
use this if you have to do something to all of these widgets after loading.

@table @var
@item self
the GladeXML object.

@item name
the name of the widget.

@item ret
A list of the widget that match @var{name} as the start of their name, or
@samp{@code{#f}} if none exists.

@end table

@end deffn

@deffn Function glade-get-widget-name  (widget@tie{}@code{<gtk-widget>}) @result{}@tie{} (ret@tie{}@code{mchars})
Used to get the name of a widget that was generated by a GladeXML object.

@table @var
@item widget
the widget

@item ret
the name of the widget.

@end table

@end deffn

@deffn Function glade-get-widget-tree  (widget@tie{}@code{<gtk-widget>}) @result{}@tie{} (ret@tie{}@code{<glade-xml>})
This function is used to get the GladeXML object that built this widget.

@table @var
@item widget
the widget

@item ret
the GladeXML object that built this widget.

@end table

@end deffn


@c %end of fragment
