
@c %start of fragment

@node GstGhostPad
@chapter GstGhostPad
Pseudo link pads

@section Overview
GhostPads are useful when organizing pipelines with @code{<gst-bin>} like
elements. The idea here is to create hierarchical element graphs. The bin
element contains a sub-graph. Now one would like to treat the bin-element like
other @code{<gst-elements>}. This is where GhostPads come into play. A GhostPad
acts as a proxy for another pad. Thus the bin can have sink and source
ghost-pads that are associated with sink and source pads of the child elements.

If the target pad is known at creation time, @code{gst-ghost-pad-new} is the
function to use to get a ghost-pad. Otherwise one can use
@code{gst-ghost-pad-new-no-target} to create the ghost-pad and use
@code{gst-ghost-pad-set-target} to establish the association later on.

Note that GhostPads add overhead to the data processing of a pipeline.

Last reviewed on 2005-11-18 (0.9.5)

@section Usage
@include defuns-gstghostpad.xml.texi

@c %end of fragment
