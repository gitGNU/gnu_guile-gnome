;; -*- scheme -*-
;; guile-gnome
;; Copyright (C) 2005 Andreas Rottmann <rotty at debian dot org>
;; Copyright (C) 2003,2004 Andy Wingo <wingo at pobox dot com>
;;
;; This program is free software; you can redistribute it and/or    
;; modify it under the terms of the GNU General Public License as   
;; published by the Free Software Foundation; either version 2 of   
;; the License, or (at your option) any later version.              
;;                                                                  
;; This program is distributed in the hope that it will be useful,  
;; but WITHOUT ANY WARRANTY; without even the implied warranty of   
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    
;; GNU General Public License for more details.                     
;;                                                                  
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, contact:
;;
;; Free Software Foundation           Voice:  +1-617-542-5942
;; 59 Temple Place - Suite 330        Fax:    +1-617-542-2652
;; Boston, MA  02111-1307,  USA       gnu@gnu.org

;;; Commentary:
;;
;;Custom wrapper definitions.
;;
;;; Code:

;; stealing most of these from python-gtk2

(define-boxed Event
  (in-module "Gdk")
  (c-name "GdkEvent")
  (gtype-id "GDK_TYPE_EVENT")
)

(define-boxed Cursor
  (in-module "Gdk")
  (c-name "GdkCursor")
  (gtype-id "GDK_TYPE_CURSOR")
)

(define-boxed Font
  (in-module "Gdk")
  (c-name "GdkFont")
  (gtype-id "GDK_TYPE_FONT")
)


;; dunno why h2defs doesn't get this one
(define-enum CursorType
  (in-module "Gdk")
  (c-name "GdkCursorType")
  (gtype-id "GDK_TYPE_CURSOR_TYPE")
)

(define-function gdk-event->event-struct
  (c-name "gdk_event_to_vector")
  (overrides "gdk-event->vector") ;; hackeroo
  (return-type "SCM")
  (leave-guile-mode #f)
  (parameters '("GdkEvent*" "event")))

(define-method set_icon
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon")
  (overrides "gdk_window_set_icon")
  (return-type "none")
  (parameters
    '("GdkWindow*" "icon_window" (null-ok))
    '("GdkPixmap*" "pixmap" (null-ok))
    '("GdkBitmap*" "mask" (null-ok))
  )
)

(define-method list_devices
  (of-object "GdkDisplay")
  (c-name "gdk_display_list_devices")
  (overrides "gdk_display_list_devices")
  (return-type "const-GList*-of-GdkDevice*")
)

(define-function list_devices
  (c-name "gdk_devices_list")
  (overrides "gdk_devices_list")
  (return-type "const-GList*-of-GdkDevice*")
)

(define-method list_displays
  (of-object "GdkDisplayManager")
  (c-name "gdk_display_manager_list_displays")
  (overrides "gdk_display_manager_list_displays")
  (return-type "GSList*-of-GdkDisplay*")
)

(define-method list_visuals
  (of-object "GdkScreen")
  (c-name "gdk_screen_list_visuals")
  (overrides "gdk_screen_list_visuals")
  (return-type "GList*-of-GdkVisual*")
)

(define-method get_toplevel_windows
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_toplevel_windows")
  (overrides "gdk_screen_get_toplevel_windows")
  (return-type "GList*-of-GdkWindow*")
)

(define-method get_window_stack
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_window_stack")
  (overrides "gdk_screen_get_window_stack")
  (return-type "GList*-of-GdkWindow*")
)
(define-function gdk_list_visuals
  (c-name "gdk_list_visuals")
  (overrides "gdk_list_visuals")
  (return-type "GList*-of-GdkVisual*")
)

(define-method get_children
  (of-object "GdkWindow")
  (c-name "gdk_window_get_children")
  (overrides "gdk_window_get_children")
  (return-type "GList*-of-GdkWindow*")
)

(define-method set_icon_list
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_list")
  (overrides "gdk_window_set_icon_list")
  (return-type "none")
  (parameters
    '("GList*-of-GdkPixbuf*" "pixbufs")
  )
)

(define-function gdk_window_get_toplevels
  (c-name "gdk_window_get_toplevels")
  (overrides "gdk_window_get_toplevels")
  (return-type "GList*-of-GdkWindow*")
)

(ignore-glob "gdk_colormap_*"
             "*libgtk_only"
             "gdk_x11_*"
             "gdkx_*"
             "*_foreign_new"
             )

(ignore "gdk_atom_intern_static_string"
        "gdk_color_hash"
        "gdk_color_equal"
        "gdk_colors_alloc"
        "gdk_colors_store"
        "gdk_device_free_history"
        "gdk_display_add_client_message_filter"
        "gdk_display_set_pointer_hooks"
        "gdk_display_store_clipboard"
        "gdk_drag_begin"
        "gdk_draw_rgb_image_dithalign"
        "gdk_draw_rgb_32_image_dithalign"
        "gdk_draw_trapezoids"
        "gdk_event_new"
        "gdk_event_send_client_message"
        "gdk_event_send_client_message_for_display"
        "gdk_event_send_clientmessage_toall"
        "gdk_event_set_screen"
        "gdk_font_equal"
        "gdk_font_from_description_for_display"
        "gdk_font_get_display"
        "gdk_font_load_for_display"
        "gdk_fontset_load_for_display"
        "gdk_free_compound_text"
        "gdk_free_text_list"
        "gdk_image_new_bitmap"
        "gdk_init"
        "gdk_init_check"
        "gdk_input_add"
        "gdk_input_add_full"
        "gdk_input_remove"
        "gdk_net_wm_supports"
        "gdk_pango_layout_get_clip_region"
        "gdk_pango_layout_line_get_clip_region"
        "gdk_parse_args"
        "gdk_pixmap_lookup_for_display"
        "gdk_pixbuf_new_from_xpm_data"
        "gdk_pixbuf_render_pixmap_and_mask_for_colormap"
        "gdk_spawn_on_screen"
        "gdk_spawn_on_screen_with_pipes"
        "gdk_string_to_compound_text"
        "gdk_string_to_compound_text_for_display"
        "gdk_synthesize_window_state"
        "gdk_text_property_to_text_list"
        "gdk_text_property_to_text_list_for_display"
        "gdk_text_property_to_utf8_list"
        "gdk_text_property_to_utf8_list_for_display"
        "gdk_threads_set_lock_functions"
        "gdk_utf8_to_compound_text"
        "gdk_utf8_to_compound_text_for_display"
        "gdk_utf8_to_string_target"
        "gdk_wcstombs"
        "gdk_window_destroy_notify"
        "gdk_window_get_user_data"
        "gdk_window_peek_children"
        "gdk_window_invalidate_maybe_recurse"
        "gdk_window_lookup_for_display" 
        "gdk_xid_table_lookup"
        "gdk_xid_table_lookup_for_display"
        "gdkx_colormap_get"
        "gdkx_visual_get")
