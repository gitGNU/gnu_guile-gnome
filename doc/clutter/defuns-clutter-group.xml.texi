
@c %start of fragment

@deffn Function clutter-group-new  @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
@samp{clutter_group_new} has been deprecated since version 1.10 and
should not be used in newly-written code. Use @code{clutter-actor-new}
instead.

Create a new @code{<clutter-group>}.

@table @var
@item ret
the newly created @code{<clutter-group>} actor

@end table

@end deffn

@deffn Function clutter-group-remove-all  (self@tie{}@code{<clutter-group>})
@deffnx Method remove-all
@samp{clutter_group_remove_all} has been deprecated since version 1.10
and should not be used in newly-written code. Use
@code{clutter-actor-remove-all-children} instead.

Removes all children actors from the @code{<clutter-group>}.

@table @var
@item self
A @code{<clutter-group>}

@end table

@end deffn

@deffn Function clutter-group-get-n-children  (self@tie{}@code{<clutter-group>}) @result{}@tie{} (ret@tie{}@code{int})
@deffnx Method get-n-children
@samp{clutter_group_get_n_children} has been deprecated since version
1.10 and should not be used in newly-written code. Use
@code{clutter-actor-get-n-children} instead.

Gets the number of actors held in the group.

@table @var
@item self
A @code{<clutter-group>}

@item ret
The number of child actors held in the group.

@end table

Since 0.2

@end deffn

@deffn Function clutter-group-get-nth-child  (self@tie{}@code{<clutter-group>}) (index_@tie{}@code{int}) @result{}@tie{} (ret@tie{}@code{<clutter-actor>})
@deffnx Method get-nth-child
@samp{clutter_group_get_nth_child} has been deprecated since version
1.10 and should not be used in newly-written code. Use
@code{clutter-actor-get-child-at-index} instead.

Gets a groups child held at @var{index} in stack.

@table @var
@item self
A @code{<clutter-group>}

@item index
the position of the requested actor.

@item ret
A Clutter actor, or @samp{@code{#f}} if @var{index} is invalid.

@end table

Since 0.2

@end deffn


@c %end of fragment
