
@c %start of fragment

@node Visuals
@chapter Visuals
Low-level display hardware information

@section Overview
A @code{<gdk-visual>} describes a particular video hardware display format. It
includes information about the number of bits used for each color, the way the
bits are translated into an RGB value for display, and the way the bits are
stored in memory. For example, a piece of display hardware might support 24-bit
color, 16-bit color, or 8-bit color; meaning 24/16/8-bit pixel sizes. For a
given pixel size, pixels can be in different formats; for example the "red"
element of an RGB pixel may be in the top 8 bits of the pixel, or may be in the
lower 4 bits.

Usually you can avoid thinking about visuals in GTK+. Visuals are useful to
interpret the contents of a @code{<gdk-image>}, but you should avoid
@code{<gdk-image>} precisely because its contents depend on the display
hardware; use @code{<gdk-pixbuf>} instead, for all but the most low-level
purposes. Also, anytime you provide a @code{<gdk-colormap>}, the visual is
implied as part of the colormap (@code{gdk-colormap-get-visual}), so you won't
have to provide a visual in addition.

There are several standard visuals. The visual returned by
@code{gdk-visual-get-system} is the system's default visual.
@code{gdk-rgb-get-visual} return the visual most suited to displaying full-color
image data. If you use the calls in @code{<gdk-rgb>}, you should create your
windows using this visual (and the colormap returned by
@code{gdk-rgb-get-colormap}).

A number of functions are provided for determining the "best" available visual.
For the purposes of making this determination, higher bit depths are considered
better, and for visuals of the same bit depth, @samp{GDK_VISUAL_PSEUDO_COLOR} is
preferred at 8bpp, otherwise, the visual types are ranked in the order of
(highest to lowest) @samp{GDK_VISUAL_DIRECT_COLOR},
@samp{GDK_VISUAL_TRUE_COLOR}, @samp{GDK_VISUAL_PSEUDO_COLOR},
@samp{GDK_VISUAL_STATIC_COLOR}, @samp{GDK_VISUAL_GRAYSCALE}, then
@samp{GDK_VISUAL_STATIC_GRAY}.

@section Usage
@include defuns-visuals.xml.texi

@c %end of fragment
