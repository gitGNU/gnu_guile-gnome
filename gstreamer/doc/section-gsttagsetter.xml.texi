
@c %start of fragment

@node GstTagSetter
@chapter GstTagSetter
Element interface that allows setting and retrieval of media metadata

@section Overview
@section 
Element interface that allows setting of media metadata.

Elements that support changing a stream's metadata will implement this
interface. Examples of such elements are 'vorbisenc', 'theoraenc' and
'id3v2mux'.

If you just want to retrieve metadata in your application then all you need to
do is watch for tag messages on your pipeline's bus. This interface is only for
setting metadata, not for extracting it. To set tags from the application, find
tagsetter elements and set tags using e.g. @code{gst-tag-setter-merge-tags} or
@code{gst-tag-setter-add-tags}. The application should do that before the
element goes to @samp{GST_STATE_PAUSED}.

Elements implementing the @code{<gst-tag-setter>} interface often have to merge
any tags received from upstream and the tags set by the application via the
interface. This can be done like this:

@example 

GstTagMergeMode merge_mode;
const GstTagList *application_tags;
const GstTagList *event_tags;
GstTagSetter *tagsetter;
GstTagList *result;
 
tagsetter = GST_TAG_SETTER (element);
 
merge_mode = gst_tag_setter_get_tag_merge_mode (tagsetter);
tagsetter_tags = gst_tag_setter_get_tag_list (tagsetter);
event_tags = (const GstTagList *) element->event_tags;
 
GST_LOG_OBJECT (tagsetter, "merging tags, merge mode = %d", merge_mode);
GST_LOG_OBJECT (tagsetter, "event tags: %" GST_PTR_FORMAT, event_tags);
GST_LOG_OBJECT (tagsetter, "set   tags: %" GST_PTR_FORMAT, application_tags);
 
result = gst_tag_list_merge (application_tags, event_tags, merge_mode);
 
GST_LOG_OBJECT (tagsetter, "final tags: %" GST_PTR_FORMAT, result);
@end example

Last reviewed on 2006-05-18 (0.10.6)

@section Usage
@include defuns-gsttagsetter.xml.texi

@c %end of fragment
