
@c %start of fragment

@deffn Function clutter-shader-new  @result{}@tie{} (ret@tie{}@code{<clutter-shader>})
@samp{clutter_shader_new} has been deprecated since version 1.8 and
should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Create a new @code{<clutter-shader>} instance.

@table @var
@item ret
a new @code{<clutter-shader>}.

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-set-vertex-source  (self@tie{}@code{<clutter-shader>}) (data@tie{}@code{mchars}) (length@tie{}@code{ssize_t})
@deffnx Method set-vertex-source
@samp{clutter_shader_set_vertex_source} has been deprecated since
version 1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Sets the GLSL source code to be used by a @code{<clutter-shader>} for
the vertex program.

@table @var
@item shader
a @code{<clutter-shader>}

@item data
GLSL source code.

@item length
length of source buffer (currently ignored)

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-get-vertex-source  (self@tie{}@code{<clutter-shader>}) @result{}@tie{} (ret@tie{}@code{mchars})
@deffnx Method get-vertex-source
@samp{clutter_shader_get_vertex_source} has been deprecated since
version 1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Query the current GLSL vertex source set on @var{shader}.

@table @var
@item shader
a @code{<clutter-shader>}

@item ret
the source of the vertex shader for this ClutterShader object or
@samp{@code{#f}}. The returned string is owned by the shader object and
should never be modified or freed

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-set-fragment-source  (self@tie{}@code{<clutter-shader>}) (data@tie{}@code{mchars}) (length@tie{}@code{ssize_t})
@deffnx Method set-fragment-source
@samp{clutter_shader_set_fragment_source} has been deprecated since
version 1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Sets the GLSL source code to be used by a @code{<clutter-shader>} for
the fragment program.

@table @var
@item shader
a @code{<clutter-shader>}

@item data
GLSL source code.

@item length
length of source buffer (currently ignored)

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-get-fragment-source  (self@tie{}@code{<clutter-shader>}) @result{}@tie{} (ret@tie{}@code{mchars})
@deffnx Method get-fragment-source
@samp{clutter_shader_get_fragment_source} has been deprecated since
version 1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Query the current GLSL fragment source set on @var{shader}.

@table @var
@item shader
a @code{<clutter-shader>}

@item ret
the source of the fragment shader for this ClutterShader object or
@samp{@code{#f}}. The returned string is owned by the shader object and
should never be modified or freed

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-compile  (self@tie{}@code{<clutter-shader>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method compile
@samp{clutter_shader_compile} has been deprecated since version 1.8 and
should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Compiles and links GLSL sources set for vertex and fragment shaders for
a @code{<clutter-shader>}. If the compilation fails and a
@code{<g-error>} return location is provided the error will contain the
errors from the compiler, if any.

@table @var
@item shader
a @code{<clutter-shader>}

@item error
return location for a @code{<g-error>}, or @samp{@code{#f}}

@item ret
returns TRUE if the shader was succesfully compiled.

@end table

Since 0.8

@end deffn

@deffn Function clutter-shader-release  (self@tie{}@code{<clutter-shader>})
@deffnx Method release
@samp{clutter_shader_release} has been deprecated since version 1.8 and
should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Frees up any GL context resources held by the shader.

@table @var
@item shader
a @code{<clutter-shader>}

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-is-compiled  (self@tie{}@code{<clutter-shader>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method is-compiled
@samp{clutter_shader_is_compiled} has been deprecated since version 1.8
and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Checks whether @var{shader} is is currently compiled, linked and bound
to the GL context.

@table @var
@item shader
a @code{<clutter-shader>}

@item ret
@samp{@code{#t}} if the shader is compiled, linked and ready for use.

@end table

Since 0.8

@end deffn

@deffn Function clutter-shader-set-is-enabled  (self@tie{}@code{<clutter-shader>}) (enabled@tie{}@code{bool})
@deffnx Method set-is-enabled
@samp{clutter_shader_set_is_enabled} has been deprecated since version
1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Enables a shader. This function will attempt to compile and link the
shader, if it isn't already.

When @var{enabled} is @samp{@code{#f}} the default state of the GL
pipeline will be used instead.

@table @var
@item shader
a @code{<clutter-shader>}

@item enabled
The new state of the shader.

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-get-is-enabled  (self@tie{}@code{<clutter-shader>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method get-is-enabled
@samp{clutter_shader_get_is_enabled} has been deprecated since version
1.8 and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Checks whether @var{shader} is enabled.

@table @var
@item shader
a @code{<clutter-shader>}

@item ret
@samp{@code{#t}} if the shader is enabled.

@end table

Since 0.6

@end deffn

@deffn Function clutter-shader-set-uniform  (self@tie{}@code{<clutter-shader>}) (name@tie{}@code{mchars}) (value@tie{}@code{<gvalue>})
@deffnx Method set-uniform
@samp{clutter_shader_set_uniform} has been deprecated since version 1.8
and should not be used in newly-written code. Use
@code{<clutter-shader-effect>} instead.

Sets a user configurable variable in the GLSL shader programs attached
to a @code{<clutter-shader>}.

@table @var
@item shader
a @code{<clutter-shader>}.

@item name
name of uniform in GLSL shader program to set.

@item value
a @code{<clutter-shader-float>}, @code{<clutter-shader-int>} or
@code{<clutter-shader-matrix>}@code{<gvalue>}.

@end table

Since 1.0

@end deffn


@c %end of fragment
