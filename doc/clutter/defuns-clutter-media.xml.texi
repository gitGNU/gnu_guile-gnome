
@c %start of fragment

@deffn Function clutter-media-set-uri  (self@tie{}@code{<clutter-media>}) (uri@tie{}@code{mchars})
@deffnx Method set-uri
Sets the URI of @var{media} to @var{uri}.

@table @var
@item media
a @code{<clutter-media>}

@item uri
the URI of the media stream

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-get-uri  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{mchars})
@deffnx Method get-uri
Retrieves the URI from @var{media}.

@table @var
@item media
a @code{<clutter-media>}

@item ret
the URI of the media stream. Use @code{g-free} to free the returned
string

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-set-playing  (self@tie{}@code{<clutter-media>}) (playing@tie{}@code{bool})
@deffnx Method set-playing
Starts or stops playing of @var{media}.

@table @var
@item media
a @code{<clutter-media>}

@item playing
@samp{@code{#t}} to start playing

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-get-playing  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method get-playing
Retrieves the playing status of @var{media}.

@table @var
@item media
A @code{<clutter-media>} object

@item ret
@samp{@code{#t}} if playing, @samp{@code{#f}} if stopped.

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-set-progress  (self@tie{}@code{<clutter-media>}) (progress@tie{}@code{double})
@deffnx Method set-progress
Sets the playback progress of @var{media}. The @var{progress} is a
normalized value between 0.0 (begin) and 1.0 (end).

@table @var
@item media
a @code{<clutter-media>}

@item progress
the progress of the playback, between 0.0 and 1.0

@end table

Since 1.0

@end deffn

@deffn Function clutter-media-get-progress  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{double})
@deffnx Method get-progress
Retrieves the playback progress of @var{media}.

@table @var
@item media
a @code{<clutter-media>}

@item ret
the playback progress, between 0.0 and 1.0

@end table

Since 1.0

@end deffn

@deffn Function clutter-media-set-audio-volume  (self@tie{}@code{<clutter-media>}) (volume@tie{}@code{double})
@deffnx Method set-audio-volume
Sets the playback volume of @var{media} to @var{volume}.

@table @var
@item media
a @code{<clutter-media>}

@item volume
the volume as a double between 0.0 and 1.0

@end table

Since 1.0

@end deffn

@deffn Function clutter-media-get-audio-volume  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{double})
@deffnx Method get-audio-volume
Retrieves the playback volume of @var{media}.

@table @var
@item media
a @code{<clutter-media>}

@item ret
The playback volume between 0.0 and 1.0

@end table

Since 1.0

@end deffn

@deffn Function clutter-media-get-can-seek  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{bool})
@deffnx Method get-can-seek
Retrieves whether @var{media} is seekable or not.

@table @var
@item media
a @code{<clutter-media>}

@item ret
@samp{@code{#t}} if @var{media} can seek, @samp{@code{#f}} otherwise.

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-get-buffer-fill  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{double})
@deffnx Method get-buffer-fill
Retrieves the amount of the stream that is buffered.

@table @var
@item media
a @code{<clutter-media>}

@item ret
the fill level, between 0.0 and 1.0

@end table

Since 1.0

@end deffn

@deffn Function clutter-media-get-duration  (self@tie{}@code{<clutter-media>}) @result{}@tie{} (ret@tie{}@code{double})
@deffnx Method get-duration
Retrieves the duration of the media stream that @var{media} represents.

@table @var
@item media
a @code{<clutter-media>}

@item ret
the duration of the media stream, in seconds

@end table

Since 0.2

@end deffn

@deffn Function clutter-media-set-filename  (self@tie{}@code{<clutter-media>}) (filename@tie{}@code{mchars})
@deffnx Method set-filename
Sets the source of @var{media} using a file path.

@table @var
@item media
a @code{<clutter-media>}

@item filename
A filename

@end table

Since 0.2

@end deffn


@c %end of fragment
