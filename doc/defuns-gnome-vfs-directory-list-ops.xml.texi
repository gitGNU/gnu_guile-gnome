
@c %start of fragment

@deffn Function gnome-vfs-directory-open  (text_uri@tie{}@code{mchars}) (options@tie{}@code{<gnome-vfs-file-info-options>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-directory-handle*>})
Open directory @var{text-uri} for reading. On return, @@*handle will point to a
@code{<gnome-vfs-directory-handle>} object which can be used to read the
directory entries one by one.

@table @var
@item handle
pointer to a pointer to a @code{<gnome-vfs-directory-handle>} object.

@item text-uri
string representing the uri to open.

@item options
options for reading file information.

@item ret
an integer representing the result of the operation.

@end table

@end deffn

@deffn Function gnome-vfs-directory-open-from-uri  (uri@tie{}@code{<gnome-vfsuri*>}) (options@tie{}@code{<gnome-vfs-file-info-options>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-directory-handle*>})
Open directory @var{text-uri} for reading. On return, @@*handle will point to a
@code{<gnome-vfs-directory-handle>} object which can be used to read the
directory entries one by one.

@table @var
@item handle
pointer to a pointer to a @code{<gnome-vfs-directory-handle>} object.

@item uri
uri to open.

@item options
options for reading file information.

@item ret
an integer representing the result of the operation.

@end table

@end deffn

@deffn Function gnome-vfs-directory-read-next  (handle@tie{}@code{<gnome-vfs-directory-handle*>}) (file_info@tie{}@code{<gnome-vfs-file-info*>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Read the next directory entry from @var{handle}.

@table @var
@item handle
a directory handle.

@item file-info
pointer to a @code{<gnome-vfs-file-info>} struct where the data about the
directory at @var{handle} will be stored.

@item ret
an integer value representing the result of the operation.

@end table

@end deffn

@deffn Function gnome-vfs-directory-close  (handle@tie{}@code{<gnome-vfs-directory-handle*>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Close @var{handle}.

@table @var
@item handle
a directory handle.

@item ret
an integer representing the result of the operation.

@end table

@end deffn

@deffn Function gnome-vfs-directory-visit  (text_uri@tie{}@code{mchars}) (info_options@tie{}@code{<gnome-vfs-file-info-options>}) (visit_options@tie{}@code{<gnome-vfs-directory-visit-options>}) (callback@tie{}@code{<gnome-vfs-directory-visit-func>}) (data@tie{}@code{<gpointer>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Visit @var{text-uri}, retrieving information as specified by @var{info-options}.

This function is identical to @code{gnome-vfs-directory-visit-uri}, except that
it takes a text URI instead of a @code{<gnome-vfsuri>}.

@table @var
@item text-uri
uri string representation of a directory to visit the files in.

@item info-options
@code{<gnome-vfs-file-info-options>} specifying what kind of file information
must be retrieved about the contents of the directory referenced by @var{uri}.

@item visit-options
@code{<gnome-vfs-directory-visit-options>} controlling e.g. loop prevention, and
filesystem checks. These affect the way visiting is done.

@item callback
@code{<gnome-vfs-directory-visit-func>} callback to be called for every visited
file.

@item data
data to be passed to @var{callback} at each iteration.

@item ret
a @code{<gnome-vfs-result>} indicating the success of the operation.

@end table

@end deffn

@deffn Function gnome-vfs-directory-visit-uri  (uri@tie{}@code{<gnome-vfsuri*>}) (info_options@tie{}@code{<gnome-vfs-file-info-options>}) (visit_options@tie{}@code{<gnome-vfs-directory-visit-options>}) (callback@tie{}@code{<gnome-vfs-directory-visit-func>}) (data@tie{}@code{<gpointer>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Visit @var{uri}, retrieving information as specified by @var{info-options}.

This function is identical to @code{gnome-vfs-directory-visit}, except that it
takes a @code{<gnome-vfsuri>} instead of a text URI.

@table @var
@item uri
@code{<gnome-vfsuri>} of a directory to visit the files in.

@item info-options
@code{<gnome-vfs-file-info-options>} specifying what kind of file information
must be retrieved about the contents of the directory referenced by @var{uri}.

@item visit-options
@code{<gnome-vfs-directory-visit-options>} controlling e.g. loop prevention, and
filesystem checks. These affect the way visiting is done.

@item callback
@code{<gnome-vfs-directory-visit-func>} callback to be called for every visited
file.

@item data
data to be passed to @var{callback} at each iteration.

@item ret
a @code{<gnome-vfs-result>} indicating whether the operation succeeded.

@end table

@end deffn

@deffn Function gnome-vfs-directory-visit-files  (text_uri@tie{}@code{mchars}) (file_list@tie{}@code{glist-of}) (info_options@tie{}@code{<gnome-vfs-file-info-options>}) (visit_options@tie{}@code{<gnome-vfs-directory-visit-options>}) (callback@tie{}@code{<gnome-vfs-directory-visit-func>}) (data@tie{}@code{<gpointer>}) @result{}@tie{} (ret@tie{}@code{<gnome-vfs-result>})
Fetches information about a list of files in a base uri @var{uri}.

If any of the files refers to a directory, and the @var{callback} requests
recursion for the specified file, @code{gnome-vfs-directory-visit-uri} will be
called for the directory.

This function is identical to @code{gnome-vfs-directory-visit-files-at-uri},
except that it takes a text URI instead of a @code{<gnome-vfsuri>}.

@table @var
@item text-uri
string representing the uri of a directory to visit the files in.

@item file-list
@code{<g-list>} of char *s of file names in @var{uri} to visit.

@item info-options
bitmask controlling the type of information to fetch.

@item visit-options
@code{<gnome-vfs-directory-visit-options>} controlling e.g. loop prevention, and
filesystem checks. These affect the way visiting is done.

@item callback
@code{<gnome-vfs-directory-visit-func>} callback to call with the file info
structs.

@item data
data to pass to @var{callback}.

@item ret
a @code{<gnome-vfs-result>} indicating the success of the operation.

@end table

@end deffn


@c %end of fragment
